
Little_Story.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000262  00800060  00005e8c  00005f20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  008002c2  008002c2  00006182  2**0
                  ALLOC
  3 .stab         00003f84  00000000  00000000  00006184  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d66  00000000  00000000  0000a108  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000ae6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000afae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000b11e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000cd67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000dc52  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000ea00  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000eb60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000eded  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000f5bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e8       	ldi	r30, 0x8C	; 140
      68:	fe e5       	ldi	r31, 0x5E	; 94
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a2 ec       	ldi	r26, 0xC2	; 194
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a3 3c       	cpi	r26, 0xC3	; 195
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5c 14 	call	0x28b8	; 0x28b8 <main>
      8a:	0c 94 44 2f 	jmp	0x5e88	; 0x5e88 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 0d 2f 	jmp	0x5e1a	; 0x5e1a <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a1 e9       	ldi	r26, 0x91	; 145
     128:	b2 e0       	ldi	r27, 0x02	; 2
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 29 2f 	jmp	0x5e52	; 0x5e52 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 35 2f 	jmp	0x5e6a	; 0x5e6a <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 35 2f 	jmp	0x5e6a	; 0x5e6a <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 0d 2f 	jmp	0x5e1a	; 0x5e1a <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	81 e9       	ldi	r24, 0x91	; 145
     496:	92 e0       	ldi	r25, 0x02	; 2
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 29 2f 	jmp	0x5e52	; 0x5e52 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 35 2f 	jmp	0x5e6a	; 0x5e6a <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 35 2f 	jmp	0x5e6a	; 0x5e6a <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 35 2f 	jmp	0x5e6a	; 0x5e6a <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 1d 2f 	jmp	0x5e3a	; 0x5e3a <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 39 2f 	jmp	0x5e72	; 0x5e72 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <DIO_Init>:
#include "DIO_Private.h"



void DIO_Init(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	0f 92       	push	r0
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62
	DIO_Pin_type i;

	for(i=PINA0;i<TOTAL_PINS;i++)
     b50:	19 82       	std	Y+1, r1	; 0x01
     b52:	0e c0       	rjmp	.+28     	; 0xb70 <DIO_Init+0x2a>
	{
		DIO_InitPin(i,DIO_PinsStatusArr[i]);
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	88 2f       	mov	r24, r24
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	fc 01       	movw	r30, r24
     b5c:	ef 55       	subi	r30, 0x5F	; 95
     b5e:	fd 4f       	sbci	r31, 0xFD	; 253
     b60:	90 81       	ld	r25, Z
     b62:	89 81       	ldd	r24, Y+1	; 0x01
     b64:	69 2f       	mov	r22, r25
     b66:	0e 94 bf 05 	call	0xb7e	; 0xb7e <DIO_InitPin>

void DIO_Init(void)
{
	DIO_Pin_type i;

	for(i=PINA0;i<TOTAL_PINS;i++)
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	8f 5f       	subi	r24, 0xFF	; 255
     b6e:	89 83       	std	Y+1, r24	; 0x01
     b70:	89 81       	ldd	r24, Y+1	; 0x01
     b72:	80 32       	cpi	r24, 0x20	; 32
     b74:	78 f3       	brcs	.-34     	; 0xb54 <DIO_Init+0xe>
	{
		DIO_InitPin(i,DIO_PinsStatusArr[i]);
	}
}
     b76:	0f 90       	pop	r0
     b78:	cf 91       	pop	r28
     b7a:	df 91       	pop	r29
     b7c:	08 95       	ret

00000b7e <DIO_InitPin>:




void DIO_InitPin(DIO_Pin_type pin, DIO_PinStatus_type status)
{
     b7e:	df 93       	push	r29
     b80:	cf 93       	push	r28
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
     b86:	2c 97       	sbiw	r28, 0x0c	; 12
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	f8 94       	cli
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	cd bf       	out	0x3d, r28	; 61
     b92:	8b 83       	std	Y+3, r24	; 0x03
     b94:	6c 83       	std	Y+4, r22	; 0x04
	u8 pin_num = pin%8;
     b96:	8b 81       	ldd	r24, Y+3	; 0x03
     b98:	87 70       	andi	r24, 0x07	; 7
     b9a:	8a 83       	std	Y+2, r24	; 0x02
	DIO_Port_type port=pin/8;
     b9c:	8b 81       	ldd	r24, Y+3	; 0x03
     b9e:	86 95       	lsr	r24
     ba0:	86 95       	lsr	r24
     ba2:	86 95       	lsr	r24
     ba4:	89 83       	std	Y+1, r24	; 0x01

	switch(status)
     ba6:	8c 81       	ldd	r24, Y+4	; 0x04
     ba8:	28 2f       	mov	r18, r24
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	3c 87       	std	Y+12, r19	; 0x0c
     bae:	2b 87       	std	Y+11, r18	; 0x0b
     bb0:	8b 85       	ldd	r24, Y+11	; 0x0b
     bb2:	9c 85       	ldd	r25, Y+12	; 0x0c
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	91 05       	cpc	r25, r1
     bb8:	09 f4       	brne	.+2      	; 0xbbc <DIO_InitPin+0x3e>
     bba:	c9 c0       	rjmp	.+402    	; 0xd4e <DIO_InitPin+0x1d0>
     bbc:	2b 85       	ldd	r18, Y+11	; 0x0b
     bbe:	3c 85       	ldd	r19, Y+12	; 0x0c
     bc0:	22 30       	cpi	r18, 0x02	; 2
     bc2:	31 05       	cpc	r19, r1
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <DIO_InitPin+0x4a>
     bc6:	85 c1       	rjmp	.+778    	; 0xed2 <DIO_InitPin+0x354>
     bc8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bca:	9c 85       	ldd	r25, Y+12	; 0x0c
     bcc:	00 97       	sbiw	r24, 0x00	; 0
     bce:	09 f0       	breq	.+2      	; 0xbd2 <DIO_InitPin+0x54>
     bd0:	3d c2       	rjmp	.+1146   	; 0x104c <DIO_InitPin+0x4ce>
	{
		case OUTPUT:
		switch(port)
     bd2:	89 81       	ldd	r24, Y+1	; 0x01
     bd4:	28 2f       	mov	r18, r24
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	3a 87       	std	Y+10, r19	; 0x0a
     bda:	29 87       	std	Y+9, r18	; 0x09
     bdc:	89 85       	ldd	r24, Y+9	; 0x09
     bde:	9a 85       	ldd	r25, Y+10	; 0x0a
     be0:	81 30       	cpi	r24, 0x01	; 1
     be2:	91 05       	cpc	r25, r1
     be4:	09 f4       	brne	.+2      	; 0xbe8 <DIO_InitPin+0x6a>
     be6:	3e c0       	rjmp	.+124    	; 0xc64 <DIO_InitPin+0xe6>
     be8:	29 85       	ldd	r18, Y+9	; 0x09
     bea:	3a 85       	ldd	r19, Y+10	; 0x0a
     bec:	22 30       	cpi	r18, 0x02	; 2
     bee:	31 05       	cpc	r19, r1
     bf0:	2c f4       	brge	.+10     	; 0xbfc <DIO_InitPin+0x7e>
     bf2:	89 85       	ldd	r24, Y+9	; 0x09
     bf4:	9a 85       	ldd	r25, Y+10	; 0x0a
     bf6:	00 97       	sbiw	r24, 0x00	; 0
     bf8:	71 f0       	breq	.+28     	; 0xc16 <DIO_InitPin+0x98>
     bfa:	28 c2       	rjmp	.+1104   	; 0x104c <DIO_InitPin+0x4ce>
     bfc:	29 85       	ldd	r18, Y+9	; 0x09
     bfe:	3a 85       	ldd	r19, Y+10	; 0x0a
     c00:	22 30       	cpi	r18, 0x02	; 2
     c02:	31 05       	cpc	r19, r1
     c04:	09 f4       	brne	.+2      	; 0xc08 <DIO_InitPin+0x8a>
     c06:	55 c0       	rjmp	.+170    	; 0xcb2 <DIO_InitPin+0x134>
     c08:	89 85       	ldd	r24, Y+9	; 0x09
     c0a:	9a 85       	ldd	r25, Y+10	; 0x0a
     c0c:	83 30       	cpi	r24, 0x03	; 3
     c0e:	91 05       	cpc	r25, r1
     c10:	09 f4       	brne	.+2      	; 0xc14 <DIO_InitPin+0x96>
     c12:	76 c0       	rjmp	.+236    	; 0xd00 <DIO_InitPin+0x182>
     c14:	1b c2       	rjmp	.+1078   	; 0x104c <DIO_InitPin+0x4ce>
		{
			case PA:
			SET_BIT(DDRA,pin_num);
     c16:	aa e3       	ldi	r26, 0x3A	; 58
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	ea e3       	ldi	r30, 0x3A	; 58
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	48 2f       	mov	r20, r24
     c22:	8a 81       	ldd	r24, Y+2	; 0x02
     c24:	28 2f       	mov	r18, r24
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <DIO_InitPin+0xb4>
     c2e:	88 0f       	add	r24, r24
     c30:	99 1f       	adc	r25, r25
     c32:	2a 95       	dec	r18
     c34:	e2 f7       	brpl	.-8      	; 0xc2e <DIO_InitPin+0xb0>
     c36:	84 2b       	or	r24, r20
     c38:	8c 93       	st	X, r24
			CLR_BIT(PORTA,pin_num);
     c3a:	ab e3       	ldi	r26, 0x3B	; 59
     c3c:	b0 e0       	ldi	r27, 0x00	; 0
     c3e:	eb e3       	ldi	r30, 0x3B	; 59
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	80 81       	ld	r24, Z
     c44:	48 2f       	mov	r20, r24
     c46:	8a 81       	ldd	r24, Y+2	; 0x02
     c48:	28 2f       	mov	r18, r24
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	02 2e       	mov	r0, r18
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <DIO_InitPin+0xda>
     c54:	88 0f       	add	r24, r24
     c56:	99 1f       	adc	r25, r25
     c58:	0a 94       	dec	r0
     c5a:	e2 f7       	brpl	.-8      	; 0xc54 <DIO_InitPin+0xd6>
     c5c:	80 95       	com	r24
     c5e:	84 23       	and	r24, r20
     c60:	8c 93       	st	X, r24
     c62:	f4 c1       	rjmp	.+1000   	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PB:
			SET_BIT(DDRB,pin_num);
     c64:	a7 e3       	ldi	r26, 0x37	; 55
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	e7 e3       	ldi	r30, 0x37	; 55
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	48 2f       	mov	r20, r24
     c70:	8a 81       	ldd	r24, Y+2	; 0x02
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <DIO_InitPin+0x102>
     c7c:	88 0f       	add	r24, r24
     c7e:	99 1f       	adc	r25, r25
     c80:	2a 95       	dec	r18
     c82:	e2 f7       	brpl	.-8      	; 0xc7c <DIO_InitPin+0xfe>
     c84:	84 2b       	or	r24, r20
     c86:	8c 93       	st	X, r24
			CLR_BIT(PORTB,pin_num);
     c88:	a8 e3       	ldi	r26, 0x38	; 56
     c8a:	b0 e0       	ldi	r27, 0x00	; 0
     c8c:	e8 e3       	ldi	r30, 0x38	; 56
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	80 81       	ld	r24, Z
     c92:	48 2f       	mov	r20, r24
     c94:	8a 81       	ldd	r24, Y+2	; 0x02
     c96:	28 2f       	mov	r18, r24
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	81 e0       	ldi	r24, 0x01	; 1
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	02 2e       	mov	r0, r18
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <DIO_InitPin+0x128>
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	0a 94       	dec	r0
     ca8:	e2 f7       	brpl	.-8      	; 0xca2 <DIO_InitPin+0x124>
     caa:	80 95       	com	r24
     cac:	84 23       	and	r24, r20
     cae:	8c 93       	st	X, r24
     cb0:	cd c1       	rjmp	.+922    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PC:
			SET_BIT(DDRC,pin_num);
     cb2:	a4 e3       	ldi	r26, 0x34	; 52
     cb4:	b0 e0       	ldi	r27, 0x00	; 0
     cb6:	e4 e3       	ldi	r30, 0x34	; 52
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	80 81       	ld	r24, Z
     cbc:	48 2f       	mov	r20, r24
     cbe:	8a 81       	ldd	r24, Y+2	; 0x02
     cc0:	28 2f       	mov	r18, r24
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <DIO_InitPin+0x150>
     cca:	88 0f       	add	r24, r24
     ccc:	99 1f       	adc	r25, r25
     cce:	2a 95       	dec	r18
     cd0:	e2 f7       	brpl	.-8      	; 0xcca <DIO_InitPin+0x14c>
     cd2:	84 2b       	or	r24, r20
     cd4:	8c 93       	st	X, r24
			CLR_BIT(PORTC,pin_num);
     cd6:	a5 e3       	ldi	r26, 0x35	; 53
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e5 e3       	ldi	r30, 0x35	; 53
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
     ce0:	48 2f       	mov	r20, r24
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	28 2f       	mov	r18, r24
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	02 2e       	mov	r0, r18
     cee:	02 c0       	rjmp	.+4      	; 0xcf4 <DIO_InitPin+0x176>
     cf0:	88 0f       	add	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	0a 94       	dec	r0
     cf6:	e2 f7       	brpl	.-8      	; 0xcf0 <DIO_InitPin+0x172>
     cf8:	80 95       	com	r24
     cfa:	84 23       	and	r24, r20
     cfc:	8c 93       	st	X, r24
     cfe:	a6 c1       	rjmp	.+844    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PD:
			SET_BIT(DDRD,pin_num);
     d00:	a1 e3       	ldi	r26, 0x31	; 49
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	e1 e3       	ldi	r30, 0x31	; 49
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 81       	ld	r24, Z
     d0a:	48 2f       	mov	r20, r24
     d0c:	8a 81       	ldd	r24, Y+2	; 0x02
     d0e:	28 2f       	mov	r18, r24
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <DIO_InitPin+0x19e>
     d18:	88 0f       	add	r24, r24
     d1a:	99 1f       	adc	r25, r25
     d1c:	2a 95       	dec	r18
     d1e:	e2 f7       	brpl	.-8      	; 0xd18 <DIO_InitPin+0x19a>
     d20:	84 2b       	or	r24, r20
     d22:	8c 93       	st	X, r24
			CLR_BIT(PORTD,pin_num);
     d24:	a2 e3       	ldi	r26, 0x32	; 50
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	e2 e3       	ldi	r30, 0x32	; 50
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	48 2f       	mov	r20, r24
     d30:	8a 81       	ldd	r24, Y+2	; 0x02
     d32:	28 2f       	mov	r18, r24
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	02 2e       	mov	r0, r18
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <DIO_InitPin+0x1c4>
     d3e:	88 0f       	add	r24, r24
     d40:	99 1f       	adc	r25, r25
     d42:	0a 94       	dec	r0
     d44:	e2 f7       	brpl	.-8      	; 0xd3e <DIO_InitPin+0x1c0>
     d46:	80 95       	com	r24
     d48:	84 23       	and	r24, r20
     d4a:	8c 93       	st	X, r24
     d4c:	7f c1       	rjmp	.+766    	; 0x104c <DIO_InitPin+0x4ce>
			break;

		}
		break;
		case INFREE:
		switch(port)
     d4e:	89 81       	ldd	r24, Y+1	; 0x01
     d50:	28 2f       	mov	r18, r24
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	38 87       	std	Y+8, r19	; 0x08
     d56:	2f 83       	std	Y+7, r18	; 0x07
     d58:	8f 81       	ldd	r24, Y+7	; 0x07
     d5a:	98 85       	ldd	r25, Y+8	; 0x08
     d5c:	81 30       	cpi	r24, 0x01	; 1
     d5e:	91 05       	cpc	r25, r1
     d60:	09 f4       	brne	.+2      	; 0xd64 <DIO_InitPin+0x1e6>
     d62:	3f c0       	rjmp	.+126    	; 0xde2 <DIO_InitPin+0x264>
     d64:	2f 81       	ldd	r18, Y+7	; 0x07
     d66:	38 85       	ldd	r19, Y+8	; 0x08
     d68:	22 30       	cpi	r18, 0x02	; 2
     d6a:	31 05       	cpc	r19, r1
     d6c:	2c f4       	brge	.+10     	; 0xd78 <DIO_InitPin+0x1fa>
     d6e:	8f 81       	ldd	r24, Y+7	; 0x07
     d70:	98 85       	ldd	r25, Y+8	; 0x08
     d72:	00 97       	sbiw	r24, 0x00	; 0
     d74:	71 f0       	breq	.+28     	; 0xd92 <DIO_InitPin+0x214>
     d76:	6a c1       	rjmp	.+724    	; 0x104c <DIO_InitPin+0x4ce>
     d78:	2f 81       	ldd	r18, Y+7	; 0x07
     d7a:	38 85       	ldd	r19, Y+8	; 0x08
     d7c:	22 30       	cpi	r18, 0x02	; 2
     d7e:	31 05       	cpc	r19, r1
     d80:	09 f4       	brne	.+2      	; 0xd84 <DIO_InitPin+0x206>
     d82:	57 c0       	rjmp	.+174    	; 0xe32 <DIO_InitPin+0x2b4>
     d84:	8f 81       	ldd	r24, Y+7	; 0x07
     d86:	98 85       	ldd	r25, Y+8	; 0x08
     d88:	83 30       	cpi	r24, 0x03	; 3
     d8a:	91 05       	cpc	r25, r1
     d8c:	09 f4       	brne	.+2      	; 0xd90 <DIO_InitPin+0x212>
     d8e:	79 c0       	rjmp	.+242    	; 0xe82 <DIO_InitPin+0x304>
     d90:	5d c1       	rjmp	.+698    	; 0x104c <DIO_InitPin+0x4ce>
		{
			case PA:
			CLR_BIT(DDRA,pin_num);
     d92:	aa e3       	ldi	r26, 0x3A	; 58
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	ea e3       	ldi	r30, 0x3A	; 58
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	80 81       	ld	r24, Z
     d9c:	48 2f       	mov	r20, r24
     d9e:	8a 81       	ldd	r24, Y+2	; 0x02
     da0:	28 2f       	mov	r18, r24
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	02 c0       	rjmp	.+4      	; 0xdae <DIO_InitPin+0x230>
     daa:	88 0f       	add	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	2a 95       	dec	r18
     db0:	e2 f7       	brpl	.-8      	; 0xdaa <DIO_InitPin+0x22c>
     db2:	80 95       	com	r24
     db4:	84 23       	and	r24, r20
     db6:	8c 93       	st	X, r24
			CLR_BIT(PORTA,pin_num);
     db8:	ab e3       	ldi	r26, 0x3B	; 59
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	eb e3       	ldi	r30, 0x3B	; 59
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	80 81       	ld	r24, Z
     dc2:	48 2f       	mov	r20, r24
     dc4:	8a 81       	ldd	r24, Y+2	; 0x02
     dc6:	28 2f       	mov	r18, r24
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	02 2e       	mov	r0, r18
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <DIO_InitPin+0x258>
     dd2:	88 0f       	add	r24, r24
     dd4:	99 1f       	adc	r25, r25
     dd6:	0a 94       	dec	r0
     dd8:	e2 f7       	brpl	.-8      	; 0xdd2 <DIO_InitPin+0x254>
     dda:	80 95       	com	r24
     ddc:	84 23       	and	r24, r20
     dde:	8c 93       	st	X, r24
     de0:	35 c1       	rjmp	.+618    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PB:
			CLR_BIT(DDRB,pin_num);
     de2:	a7 e3       	ldi	r26, 0x37	; 55
     de4:	b0 e0       	ldi	r27, 0x00	; 0
     de6:	e7 e3       	ldi	r30, 0x37	; 55
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	80 81       	ld	r24, Z
     dec:	48 2f       	mov	r20, r24
     dee:	8a 81       	ldd	r24, Y+2	; 0x02
     df0:	28 2f       	mov	r18, r24
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	02 c0       	rjmp	.+4      	; 0xdfe <DIO_InitPin+0x280>
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	2a 95       	dec	r18
     e00:	e2 f7       	brpl	.-8      	; 0xdfa <DIO_InitPin+0x27c>
     e02:	80 95       	com	r24
     e04:	84 23       	and	r24, r20
     e06:	8c 93       	st	X, r24
			CLR_BIT(PORTB,pin_num);
     e08:	a8 e3       	ldi	r26, 0x38	; 56
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	e8 e3       	ldi	r30, 0x38	; 56
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	80 81       	ld	r24, Z
     e12:	48 2f       	mov	r20, r24
     e14:	8a 81       	ldd	r24, Y+2	; 0x02
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 2e       	mov	r0, r18
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <DIO_InitPin+0x2a8>
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	0a 94       	dec	r0
     e28:	e2 f7       	brpl	.-8      	; 0xe22 <DIO_InitPin+0x2a4>
     e2a:	80 95       	com	r24
     e2c:	84 23       	and	r24, r20
     e2e:	8c 93       	st	X, r24
     e30:	0d c1       	rjmp	.+538    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PC:
			CLR_BIT(DDRC,pin_num);
     e32:	a4 e3       	ldi	r26, 0x34	; 52
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	e4 e3       	ldi	r30, 0x34	; 52
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	48 2f       	mov	r20, r24
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_InitPin+0x2d0>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	2a 95       	dec	r18
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_InitPin+0x2cc>
     e52:	80 95       	com	r24
     e54:	84 23       	and	r24, r20
     e56:	8c 93       	st	X, r24
			CLR_BIT(PORTC,pin_num);
     e58:	a5 e3       	ldi	r26, 0x35	; 53
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e5 e3       	ldi	r30, 0x35	; 53
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	48 2f       	mov	r20, r24
     e64:	8a 81       	ldd	r24, Y+2	; 0x02
     e66:	28 2f       	mov	r18, r24
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	02 2e       	mov	r0, r18
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <DIO_InitPin+0x2f8>
     e72:	88 0f       	add	r24, r24
     e74:	99 1f       	adc	r25, r25
     e76:	0a 94       	dec	r0
     e78:	e2 f7       	brpl	.-8      	; 0xe72 <DIO_InitPin+0x2f4>
     e7a:	80 95       	com	r24
     e7c:	84 23       	and	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	e5 c0       	rjmp	.+458    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PD:
			CLR_BIT(DDRD,pin_num);
     e82:	a1 e3       	ldi	r26, 0x31	; 49
     e84:	b0 e0       	ldi	r27, 0x00	; 0
     e86:	e1 e3       	ldi	r30, 0x31	; 49
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	48 2f       	mov	r20, r24
     e8e:	8a 81       	ldd	r24, Y+2	; 0x02
     e90:	28 2f       	mov	r18, r24
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <DIO_InitPin+0x320>
     e9a:	88 0f       	add	r24, r24
     e9c:	99 1f       	adc	r25, r25
     e9e:	2a 95       	dec	r18
     ea0:	e2 f7       	brpl	.-8      	; 0xe9a <DIO_InitPin+0x31c>
     ea2:	80 95       	com	r24
     ea4:	84 23       	and	r24, r20
     ea6:	8c 93       	st	X, r24
			CLR_BIT(PORTD,pin_num);
     ea8:	a2 e3       	ldi	r26, 0x32	; 50
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	e2 e3       	ldi	r30, 0x32	; 50
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
     eb2:	48 2f       	mov	r20, r24
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 2e       	mov	r0, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <DIO_InitPin+0x348>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	0a 94       	dec	r0
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <DIO_InitPin+0x344>
     eca:	80 95       	com	r24
     ecc:	84 23       	and	r24, r20
     ece:	8c 93       	st	X, r24
     ed0:	bd c0       	rjmp	.+378    	; 0x104c <DIO_InitPin+0x4ce>
			break;

		}
		break;
		case INPULL:
		switch(port)
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	3e 83       	std	Y+6, r19	; 0x06
     eda:	2d 83       	std	Y+5, r18	; 0x05
     edc:	8d 81       	ldd	r24, Y+5	; 0x05
     ede:	9e 81       	ldd	r25, Y+6	; 0x06
     ee0:	81 30       	cpi	r24, 0x01	; 1
     ee2:	91 05       	cpc	r25, r1
     ee4:	09 f4       	brne	.+2      	; 0xee8 <DIO_InitPin+0x36a>
     ee6:	3e c0       	rjmp	.+124    	; 0xf64 <DIO_InitPin+0x3e6>
     ee8:	2d 81       	ldd	r18, Y+5	; 0x05
     eea:	3e 81       	ldd	r19, Y+6	; 0x06
     eec:	22 30       	cpi	r18, 0x02	; 2
     eee:	31 05       	cpc	r19, r1
     ef0:	2c f4       	brge	.+10     	; 0xefc <DIO_InitPin+0x37e>
     ef2:	8d 81       	ldd	r24, Y+5	; 0x05
     ef4:	9e 81       	ldd	r25, Y+6	; 0x06
     ef6:	00 97       	sbiw	r24, 0x00	; 0
     ef8:	71 f0       	breq	.+28     	; 0xf16 <DIO_InitPin+0x398>
     efa:	a8 c0       	rjmp	.+336    	; 0x104c <DIO_InitPin+0x4ce>
     efc:	2d 81       	ldd	r18, Y+5	; 0x05
     efe:	3e 81       	ldd	r19, Y+6	; 0x06
     f00:	22 30       	cpi	r18, 0x02	; 2
     f02:	31 05       	cpc	r19, r1
     f04:	09 f4       	brne	.+2      	; 0xf08 <DIO_InitPin+0x38a>
     f06:	55 c0       	rjmp	.+170    	; 0xfb2 <DIO_InitPin+0x434>
     f08:	8d 81       	ldd	r24, Y+5	; 0x05
     f0a:	9e 81       	ldd	r25, Y+6	; 0x06
     f0c:	83 30       	cpi	r24, 0x03	; 3
     f0e:	91 05       	cpc	r25, r1
     f10:	09 f4       	brne	.+2      	; 0xf14 <DIO_InitPin+0x396>
     f12:	76 c0       	rjmp	.+236    	; 0x1000 <DIO_InitPin+0x482>
     f14:	9b c0       	rjmp	.+310    	; 0x104c <DIO_InitPin+0x4ce>
		{
			case PA:
			CLR_BIT(DDRA,pin_num);
     f16:	aa e3       	ldi	r26, 0x3A	; 58
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	ea e3       	ldi	r30, 0x3A	; 58
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	80 81       	ld	r24, Z
     f20:	48 2f       	mov	r20, r24
     f22:	8a 81       	ldd	r24, Y+2	; 0x02
     f24:	28 2f       	mov	r18, r24
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	81 e0       	ldi	r24, 0x01	; 1
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	02 c0       	rjmp	.+4      	; 0xf32 <DIO_InitPin+0x3b4>
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	2a 95       	dec	r18
     f34:	e2 f7       	brpl	.-8      	; 0xf2e <DIO_InitPin+0x3b0>
     f36:	80 95       	com	r24
     f38:	84 23       	and	r24, r20
     f3a:	8c 93       	st	X, r24
			SET_BIT(PORTA,pin_num);
     f3c:	ab e3       	ldi	r26, 0x3B	; 59
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	eb e3       	ldi	r30, 0x3B	; 59
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	80 81       	ld	r24, Z
     f46:	48 2f       	mov	r20, r24
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	02 2e       	mov	r0, r18
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <DIO_InitPin+0x3dc>
     f56:	88 0f       	add	r24, r24
     f58:	99 1f       	adc	r25, r25
     f5a:	0a 94       	dec	r0
     f5c:	e2 f7       	brpl	.-8      	; 0xf56 <DIO_InitPin+0x3d8>
     f5e:	84 2b       	or	r24, r20
     f60:	8c 93       	st	X, r24
     f62:	74 c0       	rjmp	.+232    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PB:
			CLR_BIT(DDRB,pin_num);
     f64:	a7 e3       	ldi	r26, 0x37	; 55
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	e7 e3       	ldi	r30, 0x37	; 55
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	48 2f       	mov	r20, r24
     f70:	8a 81       	ldd	r24, Y+2	; 0x02
     f72:	28 2f       	mov	r18, r24
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <DIO_InitPin+0x402>
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	2a 95       	dec	r18
     f82:	e2 f7       	brpl	.-8      	; 0xf7c <DIO_InitPin+0x3fe>
     f84:	80 95       	com	r24
     f86:	84 23       	and	r24, r20
     f88:	8c 93       	st	X, r24
			SET_BIT(PORTB,pin_num);
     f8a:	a8 e3       	ldi	r26, 0x38	; 56
     f8c:	b0 e0       	ldi	r27, 0x00	; 0
     f8e:	e8 e3       	ldi	r30, 0x38	; 56
     f90:	f0 e0       	ldi	r31, 0x00	; 0
     f92:	80 81       	ld	r24, Z
     f94:	48 2f       	mov	r20, r24
     f96:	8a 81       	ldd	r24, Y+2	; 0x02
     f98:	28 2f       	mov	r18, r24
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	02 2e       	mov	r0, r18
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <DIO_InitPin+0x42a>
     fa4:	88 0f       	add	r24, r24
     fa6:	99 1f       	adc	r25, r25
     fa8:	0a 94       	dec	r0
     faa:	e2 f7       	brpl	.-8      	; 0xfa4 <DIO_InitPin+0x426>
     fac:	84 2b       	or	r24, r20
     fae:	8c 93       	st	X, r24
     fb0:	4d c0       	rjmp	.+154    	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PC:
			CLR_BIT(DDRC,pin_num);
     fb2:	a4 e3       	ldi	r26, 0x34	; 52
     fb4:	b0 e0       	ldi	r27, 0x00	; 0
     fb6:	e4 e3       	ldi	r30, 0x34	; 52
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	48 2f       	mov	r20, r24
     fbe:	8a 81       	ldd	r24, Y+2	; 0x02
     fc0:	28 2f       	mov	r18, r24
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	81 e0       	ldi	r24, 0x01	; 1
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <DIO_InitPin+0x450>
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	2a 95       	dec	r18
     fd0:	e2 f7       	brpl	.-8      	; 0xfca <DIO_InitPin+0x44c>
     fd2:	80 95       	com	r24
     fd4:	84 23       	and	r24, r20
     fd6:	8c 93       	st	X, r24
			SET_BIT(PORTC,pin_num);
     fd8:	a5 e3       	ldi	r26, 0x35	; 53
     fda:	b0 e0       	ldi	r27, 0x00	; 0
     fdc:	e5 e3       	ldi	r30, 0x35	; 53
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	80 81       	ld	r24, Z
     fe2:	48 2f       	mov	r20, r24
     fe4:	8a 81       	ldd	r24, Y+2	; 0x02
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	02 2e       	mov	r0, r18
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <DIO_InitPin+0x478>
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	0a 94       	dec	r0
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <DIO_InitPin+0x474>
     ffa:	84 2b       	or	r24, r20
     ffc:	8c 93       	st	X, r24
     ffe:	26 c0       	rjmp	.+76     	; 0x104c <DIO_InitPin+0x4ce>
			break;
			case PD:
			CLR_BIT(DDRD,pin_num);
    1000:	a1 e3       	ldi	r26, 0x31	; 49
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e1 e3       	ldi	r30, 0x31	; 49
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	48 2f       	mov	r20, r24
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 c0       	rjmp	.+4      	; 0x101c <DIO_InitPin+0x49e>
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	2a 95       	dec	r18
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <DIO_InitPin+0x49a>
    1020:	80 95       	com	r24
    1022:	84 23       	and	r24, r20
    1024:	8c 93       	st	X, r24
			SET_BIT(PORTD,pin_num);
    1026:	a2 e3       	ldi	r26, 0x32	; 50
    1028:	b0 e0       	ldi	r27, 0x00	; 0
    102a:	e2 e3       	ldi	r30, 0x32	; 50
    102c:	f0 e0       	ldi	r31, 0x00	; 0
    102e:	80 81       	ld	r24, Z
    1030:	48 2f       	mov	r20, r24
    1032:	8a 81       	ldd	r24, Y+2	; 0x02
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	81 e0       	ldi	r24, 0x01	; 1
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	02 2e       	mov	r0, r18
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <DIO_InitPin+0x4c6>
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	0a 94       	dec	r0
    1046:	e2 f7       	brpl	.-8      	; 0x1040 <DIO_InitPin+0x4c2>
    1048:	84 2b       	or	r24, r20
    104a:	8c 93       	st	X, r24

		}
		break;

	}
}
    104c:	2c 96       	adiw	r28, 0x0c	; 12
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	f8 94       	cli
    1052:	de bf       	out	0x3e, r29	; 62
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	cf 91       	pop	r28
    105a:	df 91       	pop	r29
    105c:	08 95       	ret

0000105e <DIO_WritePin>:

void DIO_WritePin(DIO_Pin_type pin, DIO_PinVoltage_type volt)
{
    105e:	df 93       	push	r29
    1060:	cf 93       	push	r28
    1062:	cd b7       	in	r28, 0x3d	; 61
    1064:	de b7       	in	r29, 0x3e	; 62
    1066:	28 97       	sbiw	r28, 0x08	; 8
    1068:	0f b6       	in	r0, 0x3f	; 63
    106a:	f8 94       	cli
    106c:	de bf       	out	0x3e, r29	; 62
    106e:	0f be       	out	0x3f, r0	; 63
    1070:	cd bf       	out	0x3d, r28	; 61
    1072:	8b 83       	std	Y+3, r24	; 0x03
    1074:	6c 83       	std	Y+4, r22	; 0x04
	u8 pin_num = pin%8;
    1076:	8b 81       	ldd	r24, Y+3	; 0x03
    1078:	87 70       	andi	r24, 0x07	; 7
    107a:	8a 83       	std	Y+2, r24	; 0x02
	DIO_Port_type port=pin/8;
    107c:	8b 81       	ldd	r24, Y+3	; 0x03
    107e:	86 95       	lsr	r24
    1080:	86 95       	lsr	r24
    1082:	86 95       	lsr	r24
    1084:	89 83       	std	Y+1, r24	; 0x01

	if(volt==HIGH)
    1086:	8c 81       	ldd	r24, Y+4	; 0x04
    1088:	81 30       	cpi	r24, 0x01	; 1
    108a:	09 f0       	breq	.+2      	; 0x108e <DIO_WritePin+0x30>
    108c:	6f c0       	rjmp	.+222    	; 0x116c <DIO_WritePin+0x10e>
	{
		switch(port)
    108e:	89 81       	ldd	r24, Y+1	; 0x01
    1090:	28 2f       	mov	r18, r24
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	38 87       	std	Y+8, r19	; 0x08
    1096:	2f 83       	std	Y+7, r18	; 0x07
    1098:	8f 81       	ldd	r24, Y+7	; 0x07
    109a:	98 85       	ldd	r25, Y+8	; 0x08
    109c:	81 30       	cpi	r24, 0x01	; 1
    109e:	91 05       	cpc	r25, r1
    10a0:	49 f1       	breq	.+82     	; 0x10f4 <DIO_WritePin+0x96>
    10a2:	2f 81       	ldd	r18, Y+7	; 0x07
    10a4:	38 85       	ldd	r19, Y+8	; 0x08
    10a6:	22 30       	cpi	r18, 0x02	; 2
    10a8:	31 05       	cpc	r19, r1
    10aa:	2c f4       	brge	.+10     	; 0x10b6 <DIO_WritePin+0x58>
    10ac:	8f 81       	ldd	r24, Y+7	; 0x07
    10ae:	98 85       	ldd	r25, Y+8	; 0x08
    10b0:	00 97       	sbiw	r24, 0x00	; 0
    10b2:	61 f0       	breq	.+24     	; 0x10cc <DIO_WritePin+0x6e>
    10b4:	ce c0       	rjmp	.+412    	; 0x1252 <DIO_WritePin+0x1f4>
    10b6:	2f 81       	ldd	r18, Y+7	; 0x07
    10b8:	38 85       	ldd	r19, Y+8	; 0x08
    10ba:	22 30       	cpi	r18, 0x02	; 2
    10bc:	31 05       	cpc	r19, r1
    10be:	71 f1       	breq	.+92     	; 0x111c <DIO_WritePin+0xbe>
    10c0:	8f 81       	ldd	r24, Y+7	; 0x07
    10c2:	98 85       	ldd	r25, Y+8	; 0x08
    10c4:	83 30       	cpi	r24, 0x03	; 3
    10c6:	91 05       	cpc	r25, r1
    10c8:	e9 f1       	breq	.+122    	; 0x1144 <DIO_WritePin+0xe6>
    10ca:	c3 c0       	rjmp	.+390    	; 0x1252 <DIO_WritePin+0x1f4>
		{
			case PA:

			SET_BIT(PORTA,pin_num);
    10cc:	ab e3       	ldi	r26, 0x3B	; 59
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	eb e3       	ldi	r30, 0x3B	; 59
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	48 2f       	mov	r20, r24
    10d8:	8a 81       	ldd	r24, Y+2	; 0x02
    10da:	28 2f       	mov	r18, r24
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	02 2e       	mov	r0, r18
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <DIO_WritePin+0x8c>
    10e6:	88 0f       	add	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	0a 94       	dec	r0
    10ec:	e2 f7       	brpl	.-8      	; 0x10e6 <DIO_WritePin+0x88>
    10ee:	84 2b       	or	r24, r20
    10f0:	8c 93       	st	X, r24
    10f2:	af c0       	rjmp	.+350    	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PB:

			SET_BIT(PORTB,pin_num);
    10f4:	a8 e3       	ldi	r26, 0x38	; 56
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e8 e3       	ldi	r30, 0x38	; 56
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 81       	ld	r24, Z
    10fe:	48 2f       	mov	r20, r24
    1100:	8a 81       	ldd	r24, Y+2	; 0x02
    1102:	28 2f       	mov	r18, r24
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	02 2e       	mov	r0, r18
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <DIO_WritePin+0xb4>
    110e:	88 0f       	add	r24, r24
    1110:	99 1f       	adc	r25, r25
    1112:	0a 94       	dec	r0
    1114:	e2 f7       	brpl	.-8      	; 0x110e <DIO_WritePin+0xb0>
    1116:	84 2b       	or	r24, r20
    1118:	8c 93       	st	X, r24
    111a:	9b c0       	rjmp	.+310    	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PC:

			SET_BIT(PORTC,pin_num);
    111c:	a5 e3       	ldi	r26, 0x35	; 53
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	e5 e3       	ldi	r30, 0x35	; 53
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	48 2f       	mov	r20, r24
    1128:	8a 81       	ldd	r24, Y+2	; 0x02
    112a:	28 2f       	mov	r18, r24
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	02 2e       	mov	r0, r18
    1134:	02 c0       	rjmp	.+4      	; 0x113a <DIO_WritePin+0xdc>
    1136:	88 0f       	add	r24, r24
    1138:	99 1f       	adc	r25, r25
    113a:	0a 94       	dec	r0
    113c:	e2 f7       	brpl	.-8      	; 0x1136 <DIO_WritePin+0xd8>
    113e:	84 2b       	or	r24, r20
    1140:	8c 93       	st	X, r24
    1142:	87 c0       	rjmp	.+270    	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PD:

			SET_BIT(PORTD,pin_num);
    1144:	a2 e3       	ldi	r26, 0x32	; 50
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	e2 e3       	ldi	r30, 0x32	; 50
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	48 2f       	mov	r20, r24
    1150:	8a 81       	ldd	r24, Y+2	; 0x02
    1152:	28 2f       	mov	r18, r24
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	02 2e       	mov	r0, r18
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <DIO_WritePin+0x104>
    115e:	88 0f       	add	r24, r24
    1160:	99 1f       	adc	r25, r25
    1162:	0a 94       	dec	r0
    1164:	e2 f7       	brpl	.-8      	; 0x115e <DIO_WritePin+0x100>
    1166:	84 2b       	or	r24, r20
    1168:	8c 93       	st	X, r24
    116a:	73 c0       	rjmp	.+230    	; 0x1252 <DIO_WritePin+0x1f4>

		}
	}
	else
	{
		switch(port)
    116c:	89 81       	ldd	r24, Y+1	; 0x01
    116e:	28 2f       	mov	r18, r24
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	3e 83       	std	Y+6, r19	; 0x06
    1174:	2d 83       	std	Y+5, r18	; 0x05
    1176:	8d 81       	ldd	r24, Y+5	; 0x05
    1178:	9e 81       	ldd	r25, Y+6	; 0x06
    117a:	81 30       	cpi	r24, 0x01	; 1
    117c:	91 05       	cpc	r25, r1
    117e:	59 f1       	breq	.+86     	; 0x11d6 <DIO_WritePin+0x178>
    1180:	2d 81       	ldd	r18, Y+5	; 0x05
    1182:	3e 81       	ldd	r19, Y+6	; 0x06
    1184:	22 30       	cpi	r18, 0x02	; 2
    1186:	31 05       	cpc	r19, r1
    1188:	2c f4       	brge	.+10     	; 0x1194 <DIO_WritePin+0x136>
    118a:	8d 81       	ldd	r24, Y+5	; 0x05
    118c:	9e 81       	ldd	r25, Y+6	; 0x06
    118e:	00 97       	sbiw	r24, 0x00	; 0
    1190:	69 f0       	breq	.+26     	; 0x11ac <DIO_WritePin+0x14e>
    1192:	5f c0       	rjmp	.+190    	; 0x1252 <DIO_WritePin+0x1f4>
    1194:	2d 81       	ldd	r18, Y+5	; 0x05
    1196:	3e 81       	ldd	r19, Y+6	; 0x06
    1198:	22 30       	cpi	r18, 0x02	; 2
    119a:	31 05       	cpc	r19, r1
    119c:	89 f1       	breq	.+98     	; 0x1200 <DIO_WritePin+0x1a2>
    119e:	8d 81       	ldd	r24, Y+5	; 0x05
    11a0:	9e 81       	ldd	r25, Y+6	; 0x06
    11a2:	83 30       	cpi	r24, 0x03	; 3
    11a4:	91 05       	cpc	r25, r1
    11a6:	09 f4       	brne	.+2      	; 0x11aa <DIO_WritePin+0x14c>
    11a8:	40 c0       	rjmp	.+128    	; 0x122a <DIO_WritePin+0x1cc>
    11aa:	53 c0       	rjmp	.+166    	; 0x1252 <DIO_WritePin+0x1f4>
		{
			case PA:
			CLR_BIT(PORTA,pin_num);
    11ac:	ab e3       	ldi	r26, 0x3B	; 59
    11ae:	b0 e0       	ldi	r27, 0x00	; 0
    11b0:	eb e3       	ldi	r30, 0x3B	; 59
    11b2:	f0 e0       	ldi	r31, 0x00	; 0
    11b4:	80 81       	ld	r24, Z
    11b6:	48 2f       	mov	r20, r24
    11b8:	8a 81       	ldd	r24, Y+2	; 0x02
    11ba:	28 2f       	mov	r18, r24
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	81 e0       	ldi	r24, 0x01	; 1
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	02 2e       	mov	r0, r18
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <DIO_WritePin+0x16c>
    11c6:	88 0f       	add	r24, r24
    11c8:	99 1f       	adc	r25, r25
    11ca:	0a 94       	dec	r0
    11cc:	e2 f7       	brpl	.-8      	; 0x11c6 <DIO_WritePin+0x168>
    11ce:	80 95       	com	r24
    11d0:	84 23       	and	r24, r20
    11d2:	8c 93       	st	X, r24
    11d4:	3e c0       	rjmp	.+124    	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PB:
			CLR_BIT(PORTB,pin_num);
    11d6:	a8 e3       	ldi	r26, 0x38	; 56
    11d8:	b0 e0       	ldi	r27, 0x00	; 0
    11da:	e8 e3       	ldi	r30, 0x38	; 56
    11dc:	f0 e0       	ldi	r31, 0x00	; 0
    11de:	80 81       	ld	r24, Z
    11e0:	48 2f       	mov	r20, r24
    11e2:	8a 81       	ldd	r24, Y+2	; 0x02
    11e4:	28 2f       	mov	r18, r24
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	02 2e       	mov	r0, r18
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <DIO_WritePin+0x196>
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	0a 94       	dec	r0
    11f6:	e2 f7       	brpl	.-8      	; 0x11f0 <DIO_WritePin+0x192>
    11f8:	80 95       	com	r24
    11fa:	84 23       	and	r24, r20
    11fc:	8c 93       	st	X, r24
    11fe:	29 c0       	rjmp	.+82     	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PC:
			CLR_BIT(PORTC,pin_num);
    1200:	a5 e3       	ldi	r26, 0x35	; 53
    1202:	b0 e0       	ldi	r27, 0x00	; 0
    1204:	e5 e3       	ldi	r30, 0x35	; 53
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	80 81       	ld	r24, Z
    120a:	48 2f       	mov	r20, r24
    120c:	8a 81       	ldd	r24, Y+2	; 0x02
    120e:	28 2f       	mov	r18, r24
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	81 e0       	ldi	r24, 0x01	; 1
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	02 2e       	mov	r0, r18
    1218:	02 c0       	rjmp	.+4      	; 0x121e <DIO_WritePin+0x1c0>
    121a:	88 0f       	add	r24, r24
    121c:	99 1f       	adc	r25, r25
    121e:	0a 94       	dec	r0
    1220:	e2 f7       	brpl	.-8      	; 0x121a <DIO_WritePin+0x1bc>
    1222:	80 95       	com	r24
    1224:	84 23       	and	r24, r20
    1226:	8c 93       	st	X, r24
    1228:	14 c0       	rjmp	.+40     	; 0x1252 <DIO_WritePin+0x1f4>
			break;
			case PD:
			CLR_BIT(PORTD,pin_num);
    122a:	a2 e3       	ldi	r26, 0x32	; 50
    122c:	b0 e0       	ldi	r27, 0x00	; 0
    122e:	e2 e3       	ldi	r30, 0x32	; 50
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	80 81       	ld	r24, Z
    1234:	48 2f       	mov	r20, r24
    1236:	8a 81       	ldd	r24, Y+2	; 0x02
    1238:	28 2f       	mov	r18, r24
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	02 2e       	mov	r0, r18
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <DIO_WritePin+0x1ea>
    1244:	88 0f       	add	r24, r24
    1246:	99 1f       	adc	r25, r25
    1248:	0a 94       	dec	r0
    124a:	e2 f7       	brpl	.-8      	; 0x1244 <DIO_WritePin+0x1e6>
    124c:	80 95       	com	r24
    124e:	84 23       	and	r24, r20
    1250:	8c 93       	st	X, r24
			break;

		}
	}
}
    1252:	28 96       	adiw	r28, 0x08	; 8
    1254:	0f b6       	in	r0, 0x3f	; 63
    1256:	f8 94       	cli
    1258:	de bf       	out	0x3e, r29	; 62
    125a:	0f be       	out	0x3f, r0	; 63
    125c:	cd bf       	out	0x3d, r28	; 61
    125e:	cf 91       	pop	r28
    1260:	df 91       	pop	r29
    1262:	08 95       	ret

00001264 <DIO_ReadPin>:


DIO_PinVoltage_type DIO_ReadPin(DIO_Pin_type pin)
{
    1264:	df 93       	push	r29
    1266:	cf 93       	push	r28
    1268:	00 d0       	rcall	.+0      	; 0x126a <DIO_ReadPin+0x6>
    126a:	00 d0       	rcall	.+0      	; 0x126c <DIO_ReadPin+0x8>
    126c:	00 d0       	rcall	.+0      	; 0x126e <DIO_ReadPin+0xa>
    126e:	cd b7       	in	r28, 0x3d	; 61
    1270:	de b7       	in	r29, 0x3e	; 62
    1272:	8c 83       	std	Y+4, r24	; 0x04
	u8 pin_num = pin%8;
    1274:	8c 81       	ldd	r24, Y+4	; 0x04
    1276:	87 70       	andi	r24, 0x07	; 7
    1278:	8b 83       	std	Y+3, r24	; 0x03
	DIO_Port_type port=pin/8;
    127a:	8c 81       	ldd	r24, Y+4	; 0x04
    127c:	86 95       	lsr	r24
    127e:	86 95       	lsr	r24
    1280:	86 95       	lsr	r24
    1282:	8a 83       	std	Y+2, r24	; 0x02
	DIO_PinVoltage_type volt=LOW;
    1284:	19 82       	std	Y+1, r1	; 0x01

	switch(port)
    1286:	8a 81       	ldd	r24, Y+2	; 0x02
    1288:	28 2f       	mov	r18, r24
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	3e 83       	std	Y+6, r19	; 0x06
    128e:	2d 83       	std	Y+5, r18	; 0x05
    1290:	4d 81       	ldd	r20, Y+5	; 0x05
    1292:	5e 81       	ldd	r21, Y+6	; 0x06
    1294:	41 30       	cpi	r20, 0x01	; 1
    1296:	51 05       	cpc	r21, r1
    1298:	41 f1       	breq	.+80     	; 0x12ea <DIO_ReadPin+0x86>
    129a:	8d 81       	ldd	r24, Y+5	; 0x05
    129c:	9e 81       	ldd	r25, Y+6	; 0x06
    129e:	82 30       	cpi	r24, 0x02	; 2
    12a0:	91 05       	cpc	r25, r1
    12a2:	34 f4       	brge	.+12     	; 0x12b0 <DIO_ReadPin+0x4c>
    12a4:	2d 81       	ldd	r18, Y+5	; 0x05
    12a6:	3e 81       	ldd	r19, Y+6	; 0x06
    12a8:	21 15       	cp	r18, r1
    12aa:	31 05       	cpc	r19, r1
    12ac:	61 f0       	breq	.+24     	; 0x12c6 <DIO_ReadPin+0x62>
    12ae:	52 c0       	rjmp	.+164    	; 0x1354 <DIO_ReadPin+0xf0>
    12b0:	4d 81       	ldd	r20, Y+5	; 0x05
    12b2:	5e 81       	ldd	r21, Y+6	; 0x06
    12b4:	42 30       	cpi	r20, 0x02	; 2
    12b6:	51 05       	cpc	r21, r1
    12b8:	51 f1       	breq	.+84     	; 0x130e <DIO_ReadPin+0xaa>
    12ba:	8d 81       	ldd	r24, Y+5	; 0x05
    12bc:	9e 81       	ldd	r25, Y+6	; 0x06
    12be:	83 30       	cpi	r24, 0x03	; 3
    12c0:	91 05       	cpc	r25, r1
    12c2:	b9 f1       	breq	.+110    	; 0x1332 <DIO_ReadPin+0xce>
    12c4:	47 c0       	rjmp	.+142    	; 0x1354 <DIO_ReadPin+0xf0>
	{
		case PA:

		volt=READ_BIT(PINA,pin_num);
    12c6:	e9 e3       	ldi	r30, 0x39	; 57
    12c8:	f0 e0       	ldi	r31, 0x00	; 0
    12ca:	80 81       	ld	r24, Z
    12cc:	28 2f       	mov	r18, r24
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	88 2f       	mov	r24, r24
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	a9 01       	movw	r20, r18
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <DIO_ReadPin+0x7a>
    12da:	55 95       	asr	r21
    12dc:	47 95       	ror	r20
    12de:	8a 95       	dec	r24
    12e0:	e2 f7       	brpl	.-8      	; 0x12da <DIO_ReadPin+0x76>
    12e2:	ca 01       	movw	r24, r20
    12e4:	81 70       	andi	r24, 0x01	; 1
    12e6:	89 83       	std	Y+1, r24	; 0x01
    12e8:	35 c0       	rjmp	.+106    	; 0x1354 <DIO_ReadPin+0xf0>
		break;
		case PB:

		volt=READ_BIT(PINB,pin_num);
    12ea:	e6 e3       	ldi	r30, 0x36	; 54
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	80 81       	ld	r24, Z
    12f0:	28 2f       	mov	r18, r24
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	8b 81       	ldd	r24, Y+3	; 0x03
    12f6:	88 2f       	mov	r24, r24
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	a9 01       	movw	r20, r18
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <DIO_ReadPin+0x9e>
    12fe:	55 95       	asr	r21
    1300:	47 95       	ror	r20
    1302:	8a 95       	dec	r24
    1304:	e2 f7       	brpl	.-8      	; 0x12fe <DIO_ReadPin+0x9a>
    1306:	ca 01       	movw	r24, r20
    1308:	81 70       	andi	r24, 0x01	; 1
    130a:	89 83       	std	Y+1, r24	; 0x01
    130c:	23 c0       	rjmp	.+70     	; 0x1354 <DIO_ReadPin+0xf0>
		break;
		case PC:

		volt=READ_BIT(PINC,pin_num);
    130e:	e3 e3       	ldi	r30, 0x33	; 51
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	80 81       	ld	r24, Z
    1314:	28 2f       	mov	r18, r24
    1316:	30 e0       	ldi	r19, 0x00	; 0
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	88 2f       	mov	r24, r24
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	a9 01       	movw	r20, r18
    1320:	02 c0       	rjmp	.+4      	; 0x1326 <DIO_ReadPin+0xc2>
    1322:	55 95       	asr	r21
    1324:	47 95       	ror	r20
    1326:	8a 95       	dec	r24
    1328:	e2 f7       	brpl	.-8      	; 0x1322 <DIO_ReadPin+0xbe>
    132a:	ca 01       	movw	r24, r20
    132c:	81 70       	andi	r24, 0x01	; 1
    132e:	89 83       	std	Y+1, r24	; 0x01
    1330:	11 c0       	rjmp	.+34     	; 0x1354 <DIO_ReadPin+0xf0>
		break;
		case PD:

		volt=READ_BIT(PIND,pin_num);
    1332:	e0 e3       	ldi	r30, 0x30	; 48
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	80 81       	ld	r24, Z
    1338:	28 2f       	mov	r18, r24
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	8b 81       	ldd	r24, Y+3	; 0x03
    133e:	88 2f       	mov	r24, r24
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	a9 01       	movw	r20, r18
    1344:	02 c0       	rjmp	.+4      	; 0x134a <DIO_ReadPin+0xe6>
    1346:	55 95       	asr	r21
    1348:	47 95       	ror	r20
    134a:	8a 95       	dec	r24
    134c:	e2 f7       	brpl	.-8      	; 0x1346 <DIO_ReadPin+0xe2>
    134e:	ca 01       	movw	r24, r20
    1350:	81 70       	andi	r24, 0x01	; 1
    1352:	89 83       	std	Y+1, r24	; 0x01
		break;

	}

	return volt;
    1354:	89 81       	ldd	r24, Y+1	; 0x01
}
    1356:	26 96       	adiw	r28, 0x06	; 6
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	f8 94       	cli
    135c:	de bf       	out	0x3e, r29	; 62
    135e:	0f be       	out	0x3f, r0	; 63
    1360:	cd bf       	out	0x3d, r28	; 61
    1362:	cf 91       	pop	r28
    1364:	df 91       	pop	r29
    1366:	08 95       	ret

00001368 <DIO_TogglePin>:

void DIO_TogglePin(DIO_Pin_type pin)
{
    1368:	df 93       	push	r29
    136a:	cf 93       	push	r28
    136c:	00 d0       	rcall	.+0      	; 0x136e <DIO_TogglePin+0x6>
    136e:	00 d0       	rcall	.+0      	; 0x1370 <DIO_TogglePin+0x8>
    1370:	0f 92       	push	r0
    1372:	cd b7       	in	r28, 0x3d	; 61
    1374:	de b7       	in	r29, 0x3e	; 62
    1376:	8b 83       	std	Y+3, r24	; 0x03
	u8 pin_num = pin%8;
    1378:	8b 81       	ldd	r24, Y+3	; 0x03
    137a:	87 70       	andi	r24, 0x07	; 7
    137c:	8a 83       	std	Y+2, r24	; 0x02
	DIO_Port_type port=pin/8;
    137e:	8b 81       	ldd	r24, Y+3	; 0x03
    1380:	86 95       	lsr	r24
    1382:	86 95       	lsr	r24
    1384:	86 95       	lsr	r24
    1386:	89 83       	std	Y+1, r24	; 0x01

	switch(port)
    1388:	89 81       	ldd	r24, Y+1	; 0x01
    138a:	28 2f       	mov	r18, r24
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	3d 83       	std	Y+5, r19	; 0x05
    1390:	2c 83       	std	Y+4, r18	; 0x04
    1392:	8c 81       	ldd	r24, Y+4	; 0x04
    1394:	9d 81       	ldd	r25, Y+5	; 0x05
    1396:	81 30       	cpi	r24, 0x01	; 1
    1398:	91 05       	cpc	r25, r1
    139a:	49 f1       	breq	.+82     	; 0x13ee <DIO_TogglePin+0x86>
    139c:	2c 81       	ldd	r18, Y+4	; 0x04
    139e:	3d 81       	ldd	r19, Y+5	; 0x05
    13a0:	22 30       	cpi	r18, 0x02	; 2
    13a2:	31 05       	cpc	r19, r1
    13a4:	2c f4       	brge	.+10     	; 0x13b0 <DIO_TogglePin+0x48>
    13a6:	8c 81       	ldd	r24, Y+4	; 0x04
    13a8:	9d 81       	ldd	r25, Y+5	; 0x05
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	61 f0       	breq	.+24     	; 0x13c6 <DIO_TogglePin+0x5e>
    13ae:	5a c0       	rjmp	.+180    	; 0x1464 <DIO_TogglePin+0xfc>
    13b0:	2c 81       	ldd	r18, Y+4	; 0x04
    13b2:	3d 81       	ldd	r19, Y+5	; 0x05
    13b4:	22 30       	cpi	r18, 0x02	; 2
    13b6:	31 05       	cpc	r19, r1
    13b8:	71 f1       	breq	.+92     	; 0x1416 <DIO_TogglePin+0xae>
    13ba:	8c 81       	ldd	r24, Y+4	; 0x04
    13bc:	9d 81       	ldd	r25, Y+5	; 0x05
    13be:	83 30       	cpi	r24, 0x03	; 3
    13c0:	91 05       	cpc	r25, r1
    13c2:	e9 f1       	breq	.+122    	; 0x143e <DIO_TogglePin+0xd6>
    13c4:	4f c0       	rjmp	.+158    	; 0x1464 <DIO_TogglePin+0xfc>
	{
		case PA:
		TOG_BIT(PORTA,pin_num);
    13c6:	ab e3       	ldi	r26, 0x3B	; 59
    13c8:	b0 e0       	ldi	r27, 0x00	; 0
    13ca:	eb e3       	ldi	r30, 0x3B	; 59
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	48 2f       	mov	r20, r24
    13d2:	8a 81       	ldd	r24, Y+2	; 0x02
    13d4:	28 2f       	mov	r18, r24
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	02 2e       	mov	r0, r18
    13de:	02 c0       	rjmp	.+4      	; 0x13e4 <DIO_TogglePin+0x7c>
    13e0:	88 0f       	add	r24, r24
    13e2:	99 1f       	adc	r25, r25
    13e4:	0a 94       	dec	r0
    13e6:	e2 f7       	brpl	.-8      	; 0x13e0 <DIO_TogglePin+0x78>
    13e8:	84 27       	eor	r24, r20
    13ea:	8c 93       	st	X, r24
    13ec:	3b c0       	rjmp	.+118    	; 0x1464 <DIO_TogglePin+0xfc>
		break;
		case PB:
		TOG_BIT(PORTB,pin_num);
    13ee:	a8 e3       	ldi	r26, 0x38	; 56
    13f0:	b0 e0       	ldi	r27, 0x00	; 0
    13f2:	e8 e3       	ldi	r30, 0x38	; 56
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	48 2f       	mov	r20, r24
    13fa:	8a 81       	ldd	r24, Y+2	; 0x02
    13fc:	28 2f       	mov	r18, r24
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	02 2e       	mov	r0, r18
    1406:	02 c0       	rjmp	.+4      	; 0x140c <DIO_TogglePin+0xa4>
    1408:	88 0f       	add	r24, r24
    140a:	99 1f       	adc	r25, r25
    140c:	0a 94       	dec	r0
    140e:	e2 f7       	brpl	.-8      	; 0x1408 <DIO_TogglePin+0xa0>
    1410:	84 27       	eor	r24, r20
    1412:	8c 93       	st	X, r24
    1414:	27 c0       	rjmp	.+78     	; 0x1464 <DIO_TogglePin+0xfc>
		break;
		case PC:
		TOG_BIT(PORTC,pin_num);
    1416:	a5 e3       	ldi	r26, 0x35	; 53
    1418:	b0 e0       	ldi	r27, 0x00	; 0
    141a:	e5 e3       	ldi	r30, 0x35	; 53
    141c:	f0 e0       	ldi	r31, 0x00	; 0
    141e:	80 81       	ld	r24, Z
    1420:	48 2f       	mov	r20, r24
    1422:	8a 81       	ldd	r24, Y+2	; 0x02
    1424:	28 2f       	mov	r18, r24
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	02 2e       	mov	r0, r18
    142e:	02 c0       	rjmp	.+4      	; 0x1434 <DIO_TogglePin+0xcc>
    1430:	88 0f       	add	r24, r24
    1432:	99 1f       	adc	r25, r25
    1434:	0a 94       	dec	r0
    1436:	e2 f7       	brpl	.-8      	; 0x1430 <DIO_TogglePin+0xc8>
    1438:	84 27       	eor	r24, r20
    143a:	8c 93       	st	X, r24
    143c:	13 c0       	rjmp	.+38     	; 0x1464 <DIO_TogglePin+0xfc>
		break;
		case PD:
		TOG_BIT(PORTD,pin_num);
    143e:	a2 e3       	ldi	r26, 0x32	; 50
    1440:	b0 e0       	ldi	r27, 0x00	; 0
    1442:	e2 e3       	ldi	r30, 0x32	; 50
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	80 81       	ld	r24, Z
    1448:	48 2f       	mov	r20, r24
    144a:	8a 81       	ldd	r24, Y+2	; 0x02
    144c:	28 2f       	mov	r18, r24
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	02 2e       	mov	r0, r18
    1456:	02 c0       	rjmp	.+4      	; 0x145c <DIO_TogglePin+0xf4>
    1458:	88 0f       	add	r24, r24
    145a:	99 1f       	adc	r25, r25
    145c:	0a 94       	dec	r0
    145e:	e2 f7       	brpl	.-8      	; 0x1458 <DIO_TogglePin+0xf0>
    1460:	84 27       	eor	r24, r20
    1462:	8c 93       	st	X, r24
		break;

	}
}
    1464:	0f 90       	pop	r0
    1466:	0f 90       	pop	r0
    1468:	0f 90       	pop	r0
    146a:	0f 90       	pop	r0
    146c:	0f 90       	pop	r0
    146e:	cf 91       	pop	r28
    1470:	df 91       	pop	r29
    1472:	08 95       	ret

00001474 <DIO_WritePort>:


void DIO_WritePort(DIO_Port_type port, u8 data)
{
    1474:	df 93       	push	r29
    1476:	cf 93       	push	r28
    1478:	00 d0       	rcall	.+0      	; 0x147a <DIO_WritePort+0x6>
    147a:	00 d0       	rcall	.+0      	; 0x147c <DIO_WritePort+0x8>
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	89 83       	std	Y+1, r24	; 0x01
    1482:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    1484:	89 81       	ldd	r24, Y+1	; 0x01
    1486:	28 2f       	mov	r18, r24
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	3c 83       	std	Y+4, r19	; 0x04
    148c:	2b 83       	std	Y+3, r18	; 0x03
    148e:	8b 81       	ldd	r24, Y+3	; 0x03
    1490:	9c 81       	ldd	r25, Y+4	; 0x04
    1492:	81 30       	cpi	r24, 0x01	; 1
    1494:	91 05       	cpc	r25, r1
    1496:	d1 f0       	breq	.+52     	; 0x14cc <DIO_WritePort+0x58>
    1498:	2b 81       	ldd	r18, Y+3	; 0x03
    149a:	3c 81       	ldd	r19, Y+4	; 0x04
    149c:	22 30       	cpi	r18, 0x02	; 2
    149e:	31 05       	cpc	r19, r1
    14a0:	2c f4       	brge	.+10     	; 0x14ac <DIO_WritePort+0x38>
    14a2:	8b 81       	ldd	r24, Y+3	; 0x03
    14a4:	9c 81       	ldd	r25, Y+4	; 0x04
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	61 f0       	breq	.+24     	; 0x14c2 <DIO_WritePort+0x4e>
    14aa:	1e c0       	rjmp	.+60     	; 0x14e8 <DIO_WritePort+0x74>
    14ac:	2b 81       	ldd	r18, Y+3	; 0x03
    14ae:	3c 81       	ldd	r19, Y+4	; 0x04
    14b0:	22 30       	cpi	r18, 0x02	; 2
    14b2:	31 05       	cpc	r19, r1
    14b4:	81 f0       	breq	.+32     	; 0x14d6 <DIO_WritePort+0x62>
    14b6:	8b 81       	ldd	r24, Y+3	; 0x03
    14b8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ba:	83 30       	cpi	r24, 0x03	; 3
    14bc:	91 05       	cpc	r25, r1
    14be:	81 f0       	breq	.+32     	; 0x14e0 <DIO_WritePort+0x6c>
    14c0:	13 c0       	rjmp	.+38     	; 0x14e8 <DIO_WritePort+0x74>
	{
		case PA:
		PORTA = data;
    14c2:	eb e3       	ldi	r30, 0x3B	; 59
    14c4:	f0 e0       	ldi	r31, 0x00	; 0
    14c6:	8a 81       	ldd	r24, Y+2	; 0x02
    14c8:	80 83       	st	Z, r24
    14ca:	0e c0       	rjmp	.+28     	; 0x14e8 <DIO_WritePort+0x74>
		break;
		case PB:
		PORTB = data;
    14cc:	e8 e3       	ldi	r30, 0x38	; 56
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	8a 81       	ldd	r24, Y+2	; 0x02
    14d2:	80 83       	st	Z, r24
    14d4:	09 c0       	rjmp	.+18     	; 0x14e8 <DIO_WritePort+0x74>
		break;
		case PC:
		PORTC = data;;
    14d6:	e5 e3       	ldi	r30, 0x35	; 53
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	8a 81       	ldd	r24, Y+2	; 0x02
    14dc:	80 83       	st	Z, r24
    14de:	04 c0       	rjmp	.+8      	; 0x14e8 <DIO_WritePort+0x74>
		break;
		case PD:
		PORTD = data;;
    14e0:	e2 e3       	ldi	r30, 0x32	; 50
    14e2:	f0 e0       	ldi	r31, 0x00	; 0
    14e4:	8a 81       	ldd	r24, Y+2	; 0x02
    14e6:	80 83       	st	Z, r24
		break;

	}
}
    14e8:	0f 90       	pop	r0
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	0f 90       	pop	r0
    14f0:	cf 91       	pop	r28
    14f2:	df 91       	pop	r29
    14f4:	08 95       	ret

000014f6 <DIO_ReadPort>:

u8 DIO_ReadPort(DIO_Port_type port)
{
    14f6:	df 93       	push	r29
    14f8:	cf 93       	push	r28
    14fa:	00 d0       	rcall	.+0      	; 0x14fc <DIO_ReadPort+0x6>
    14fc:	00 d0       	rcall	.+0      	; 0x14fe <DIO_ReadPort+0x8>
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	8a 83       	std	Y+2, r24	; 0x02
	u8 data=0;
    1504:	19 82       	std	Y+1, r1	; 0x01
	switch(port)
    1506:	8a 81       	ldd	r24, Y+2	; 0x02
    1508:	28 2f       	mov	r18, r24
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	3c 83       	std	Y+4, r19	; 0x04
    150e:	2b 83       	std	Y+3, r18	; 0x03
    1510:	8b 81       	ldd	r24, Y+3	; 0x03
    1512:	9c 81       	ldd	r25, Y+4	; 0x04
    1514:	81 30       	cpi	r24, 0x01	; 1
    1516:	91 05       	cpc	r25, r1
    1518:	d1 f0       	breq	.+52     	; 0x154e <DIO_ReadPort+0x58>
    151a:	2b 81       	ldd	r18, Y+3	; 0x03
    151c:	3c 81       	ldd	r19, Y+4	; 0x04
    151e:	22 30       	cpi	r18, 0x02	; 2
    1520:	31 05       	cpc	r19, r1
    1522:	2c f4       	brge	.+10     	; 0x152e <DIO_ReadPort+0x38>
    1524:	8b 81       	ldd	r24, Y+3	; 0x03
    1526:	9c 81       	ldd	r25, Y+4	; 0x04
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	61 f0       	breq	.+24     	; 0x1544 <DIO_ReadPort+0x4e>
    152c:	1e c0       	rjmp	.+60     	; 0x156a <DIO_ReadPort+0x74>
    152e:	2b 81       	ldd	r18, Y+3	; 0x03
    1530:	3c 81       	ldd	r19, Y+4	; 0x04
    1532:	22 30       	cpi	r18, 0x02	; 2
    1534:	31 05       	cpc	r19, r1
    1536:	81 f0       	breq	.+32     	; 0x1558 <DIO_ReadPort+0x62>
    1538:	8b 81       	ldd	r24, Y+3	; 0x03
    153a:	9c 81       	ldd	r25, Y+4	; 0x04
    153c:	83 30       	cpi	r24, 0x03	; 3
    153e:	91 05       	cpc	r25, r1
    1540:	81 f0       	breq	.+32     	; 0x1562 <DIO_ReadPort+0x6c>
    1542:	13 c0       	rjmp	.+38     	; 0x156a <DIO_ReadPort+0x74>
	{
		case PA:
		data = PINA;
    1544:	e9 e3       	ldi	r30, 0x39	; 57
    1546:	f0 e0       	ldi	r31, 0x00	; 0
    1548:	80 81       	ld	r24, Z
    154a:	89 83       	std	Y+1, r24	; 0x01
    154c:	0e c0       	rjmp	.+28     	; 0x156a <DIO_ReadPort+0x74>
		break;
		case PB:
		data = PINB;
    154e:	e6 e3       	ldi	r30, 0x36	; 54
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	80 81       	ld	r24, Z
    1554:	89 83       	std	Y+1, r24	; 0x01
    1556:	09 c0       	rjmp	.+18     	; 0x156a <DIO_ReadPort+0x74>
		break;
		case PC:
		data = PINC;;
    1558:	e3 e3       	ldi	r30, 0x33	; 51
    155a:	f0 e0       	ldi	r31, 0x00	; 0
    155c:	80 81       	ld	r24, Z
    155e:	89 83       	std	Y+1, r24	; 0x01
    1560:	04 c0       	rjmp	.+8      	; 0x156a <DIO_ReadPort+0x74>
		break;
		case PD:
		data = PIND;;
    1562:	e0 e3       	ldi	r30, 0x30	; 48
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	80 81       	ld	r24, Z
    1568:	89 83       	std	Y+1, r24	; 0x01
		break;

	}

	return data;
    156a:	89 81       	ldd	r24, Y+1	; 0x01
}
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	cf 91       	pop	r28
    1576:	df 91       	pop	r29
    1578:	08 95       	ret

0000157a <WriteIns>:
}

#else

static void WriteIns(u8 ins)
{
    157a:	df 93       	push	r29
    157c:	cf 93       	push	r28
    157e:	cd b7       	in	r28, 0x3d	; 61
    1580:	de b7       	in	r29, 0x3e	; 62
    1582:	e9 97       	sbiw	r28, 0x39	; 57
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
    158e:	89 af       	std	Y+57, r24	; 0x39
	DIO_WritePin(RS, LOW);
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	60 e0       	ldi	r22, 0x00	; 0
    1594:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D7,READ_BIT(ins,7));
    1598:	89 ad       	ldd	r24, Y+57	; 0x39
    159a:	98 2f       	mov	r25, r24
    159c:	99 1f       	adc	r25, r25
    159e:	99 27       	eor	r25, r25
    15a0:	99 1f       	adc	r25, r25
    15a2:	8b e0       	ldi	r24, 0x0B	; 11
    15a4:	69 2f       	mov	r22, r25
    15a6:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D6,READ_BIT(ins,6));
    15aa:	89 ad       	ldd	r24, Y+57	; 0x39
    15ac:	82 95       	swap	r24
    15ae:	86 95       	lsr	r24
    15b0:	86 95       	lsr	r24
    15b2:	83 70       	andi	r24, 0x03	; 3
    15b4:	98 2f       	mov	r25, r24
    15b6:	91 70       	andi	r25, 0x01	; 1
    15b8:	8a e0       	ldi	r24, 0x0A	; 10
    15ba:	69 2f       	mov	r22, r25
    15bc:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D5,READ_BIT(ins,5));
    15c0:	89 ad       	ldd	r24, Y+57	; 0x39
    15c2:	82 95       	swap	r24
    15c4:	86 95       	lsr	r24
    15c6:	87 70       	andi	r24, 0x07	; 7
    15c8:	98 2f       	mov	r25, r24
    15ca:	91 70       	andi	r25, 0x01	; 1
    15cc:	89 e0       	ldi	r24, 0x09	; 9
    15ce:	69 2f       	mov	r22, r25
    15d0:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D4,READ_BIT(ins,4));
    15d4:	89 ad       	ldd	r24, Y+57	; 0x39
    15d6:	82 95       	swap	r24
    15d8:	8f 70       	andi	r24, 0x0F	; 15
    15da:	98 2f       	mov	r25, r24
    15dc:	91 70       	andi	r25, 0x01	; 1
    15de:	88 e0       	ldi	r24, 0x08	; 8
    15e0:	69 2f       	mov	r22, r25
    15e2:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>

	DIO_WritePin(E, HIGH);
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	61 e0       	ldi	r22, 0x01	; 1
    15ea:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	a0 e8       	ldi	r26, 0x80	; 128
    15f4:	bf e3       	ldi	r27, 0x3F	; 63
    15f6:	8d ab       	std	Y+53, r24	; 0x35
    15f8:	9e ab       	std	Y+54, r25	; 0x36
    15fa:	af ab       	std	Y+55, r26	; 0x37
    15fc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15fe:	6d a9       	ldd	r22, Y+53	; 0x35
    1600:	7e a9       	ldd	r23, Y+54	; 0x36
    1602:	8f a9       	ldd	r24, Y+55	; 0x37
    1604:	98 ad       	ldd	r25, Y+56	; 0x38
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	4a ef       	ldi	r20, 0xFA	; 250
    160c:	54 e4       	ldi	r21, 0x44	; 68
    160e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1612:	dc 01       	movw	r26, r24
    1614:	cb 01       	movw	r24, r22
    1616:	89 ab       	std	Y+49, r24	; 0x31
    1618:	9a ab       	std	Y+50, r25	; 0x32
    161a:	ab ab       	std	Y+51, r26	; 0x33
    161c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    161e:	69 a9       	ldd	r22, Y+49	; 0x31
    1620:	7a a9       	ldd	r23, Y+50	; 0x32
    1622:	8b a9       	ldd	r24, Y+51	; 0x33
    1624:	9c a9       	ldd	r25, Y+52	; 0x34
    1626:	20 e0       	ldi	r18, 0x00	; 0
    1628:	30 e0       	ldi	r19, 0x00	; 0
    162a:	40 e8       	ldi	r20, 0x80	; 128
    162c:	5f e3       	ldi	r21, 0x3F	; 63
    162e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1632:	88 23       	and	r24, r24
    1634:	2c f4       	brge	.+10     	; 0x1640 <WriteIns+0xc6>
		__ticks = 1;
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	98 ab       	std	Y+48, r25	; 0x30
    163c:	8f a7       	std	Y+47, r24	; 0x2f
    163e:	3f c0       	rjmp	.+126    	; 0x16be <WriteIns+0x144>
	else if (__tmp > 65535)
    1640:	69 a9       	ldd	r22, Y+49	; 0x31
    1642:	7a a9       	ldd	r23, Y+50	; 0x32
    1644:	8b a9       	ldd	r24, Y+51	; 0x33
    1646:	9c a9       	ldd	r25, Y+52	; 0x34
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	3f ef       	ldi	r19, 0xFF	; 255
    164c:	4f e7       	ldi	r20, 0x7F	; 127
    164e:	57 e4       	ldi	r21, 0x47	; 71
    1650:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1654:	18 16       	cp	r1, r24
    1656:	4c f5       	brge	.+82     	; 0x16aa <WriteIns+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1658:	6d a9       	ldd	r22, Y+53	; 0x35
    165a:	7e a9       	ldd	r23, Y+54	; 0x36
    165c:	8f a9       	ldd	r24, Y+55	; 0x37
    165e:	98 ad       	ldd	r25, Y+56	; 0x38
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e2       	ldi	r20, 0x20	; 32
    1666:	51 e4       	ldi	r21, 0x41	; 65
    1668:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    166c:	dc 01       	movw	r26, r24
    166e:	cb 01       	movw	r24, r22
    1670:	bc 01       	movw	r22, r24
    1672:	cd 01       	movw	r24, r26
    1674:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1678:	dc 01       	movw	r26, r24
    167a:	cb 01       	movw	r24, r22
    167c:	98 ab       	std	Y+48, r25	; 0x30
    167e:	8f a7       	std	Y+47, r24	; 0x2f
    1680:	0f c0       	rjmp	.+30     	; 0x16a0 <WriteIns+0x126>
    1682:	88 ec       	ldi	r24, 0xC8	; 200
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	9e a7       	std	Y+46, r25	; 0x2e
    1688:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    168a:	8d a5       	ldd	r24, Y+45	; 0x2d
    168c:	9e a5       	ldd	r25, Y+46	; 0x2e
    168e:	01 97       	sbiw	r24, 0x01	; 1
    1690:	f1 f7       	brne	.-4      	; 0x168e <WriteIns+0x114>
    1692:	9e a7       	std	Y+46, r25	; 0x2e
    1694:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1696:	8f a5       	ldd	r24, Y+47	; 0x2f
    1698:	98 a9       	ldd	r25, Y+48	; 0x30
    169a:	01 97       	sbiw	r24, 0x01	; 1
    169c:	98 ab       	std	Y+48, r25	; 0x30
    169e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    16a2:	98 a9       	ldd	r25, Y+48	; 0x30
    16a4:	00 97       	sbiw	r24, 0x00	; 0
    16a6:	69 f7       	brne	.-38     	; 0x1682 <WriteIns+0x108>
    16a8:	14 c0       	rjmp	.+40     	; 0x16d2 <WriteIns+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16aa:	69 a9       	ldd	r22, Y+49	; 0x31
    16ac:	7a a9       	ldd	r23, Y+50	; 0x32
    16ae:	8b a9       	ldd	r24, Y+51	; 0x33
    16b0:	9c a9       	ldd	r25, Y+52	; 0x34
    16b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16b6:	dc 01       	movw	r26, r24
    16b8:	cb 01       	movw	r24, r22
    16ba:	98 ab       	std	Y+48, r25	; 0x30
    16bc:	8f a7       	std	Y+47, r24	; 0x2f
    16be:	8f a5       	ldd	r24, Y+47	; 0x2f
    16c0:	98 a9       	ldd	r25, Y+48	; 0x30
    16c2:	9c a7       	std	Y+44, r25	; 0x2c
    16c4:	8b a7       	std	Y+43, r24	; 0x2b
    16c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    16c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    16ca:	01 97       	sbiw	r24, 0x01	; 1
    16cc:	f1 f7       	brne	.-4      	; 0x16ca <WriteIns+0x150>
    16ce:	9c a7       	std	Y+44, r25	; 0x2c
    16d0:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	DIO_WritePin(E, LOW);
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	60 e0       	ldi	r22, 0x00	; 0
    16d6:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	a0 e8       	ldi	r26, 0x80	; 128
    16e0:	bf e3       	ldi	r27, 0x3F	; 63
    16e2:	8f a3       	std	Y+39, r24	; 0x27
    16e4:	98 a7       	std	Y+40, r25	; 0x28
    16e6:	a9 a7       	std	Y+41, r26	; 0x29
    16e8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16ea:	6f a1       	ldd	r22, Y+39	; 0x27
    16ec:	78 a5       	ldd	r23, Y+40	; 0x28
    16ee:	89 a5       	ldd	r24, Y+41	; 0x29
    16f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	4a ef       	ldi	r20, 0xFA	; 250
    16f8:	54 e4       	ldi	r21, 0x44	; 68
    16fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	8b a3       	std	Y+35, r24	; 0x23
    1704:	9c a3       	std	Y+36, r25	; 0x24
    1706:	ad a3       	std	Y+37, r26	; 0x25
    1708:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    170a:	6b a1       	ldd	r22, Y+35	; 0x23
    170c:	7c a1       	ldd	r23, Y+36	; 0x24
    170e:	8d a1       	ldd	r24, Y+37	; 0x25
    1710:	9e a1       	ldd	r25, Y+38	; 0x26
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	40 e8       	ldi	r20, 0x80	; 128
    1718:	5f e3       	ldi	r21, 0x3F	; 63
    171a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    171e:	88 23       	and	r24, r24
    1720:	2c f4       	brge	.+10     	; 0x172c <WriteIns+0x1b2>
		__ticks = 1;
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	9a a3       	std	Y+34, r25	; 0x22
    1728:	89 a3       	std	Y+33, r24	; 0x21
    172a:	3f c0       	rjmp	.+126    	; 0x17aa <WriteIns+0x230>
	else if (__tmp > 65535)
    172c:	6b a1       	ldd	r22, Y+35	; 0x23
    172e:	7c a1       	ldd	r23, Y+36	; 0x24
    1730:	8d a1       	ldd	r24, Y+37	; 0x25
    1732:	9e a1       	ldd	r25, Y+38	; 0x26
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	3f ef       	ldi	r19, 0xFF	; 255
    1738:	4f e7       	ldi	r20, 0x7F	; 127
    173a:	57 e4       	ldi	r21, 0x47	; 71
    173c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1740:	18 16       	cp	r1, r24
    1742:	4c f5       	brge	.+82     	; 0x1796 <WriteIns+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1744:	6f a1       	ldd	r22, Y+39	; 0x27
    1746:	78 a5       	ldd	r23, Y+40	; 0x28
    1748:	89 a5       	ldd	r24, Y+41	; 0x29
    174a:	9a a5       	ldd	r25, Y+42	; 0x2a
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	30 e0       	ldi	r19, 0x00	; 0
    1750:	40 e2       	ldi	r20, 0x20	; 32
    1752:	51 e4       	ldi	r21, 0x41	; 65
    1754:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1758:	dc 01       	movw	r26, r24
    175a:	cb 01       	movw	r24, r22
    175c:	bc 01       	movw	r22, r24
    175e:	cd 01       	movw	r24, r26
    1760:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	9a a3       	std	Y+34, r25	; 0x22
    176a:	89 a3       	std	Y+33, r24	; 0x21
    176c:	0f c0       	rjmp	.+30     	; 0x178c <WriteIns+0x212>
    176e:	88 ec       	ldi	r24, 0xC8	; 200
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	98 a3       	std	Y+32, r25	; 0x20
    1774:	8f 8f       	std	Y+31, r24	; 0x1f
    1776:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1778:	98 a1       	ldd	r25, Y+32	; 0x20
    177a:	01 97       	sbiw	r24, 0x01	; 1
    177c:	f1 f7       	brne	.-4      	; 0x177a <WriteIns+0x200>
    177e:	98 a3       	std	Y+32, r25	; 0x20
    1780:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1782:	89 a1       	ldd	r24, Y+33	; 0x21
    1784:	9a a1       	ldd	r25, Y+34	; 0x22
    1786:	01 97       	sbiw	r24, 0x01	; 1
    1788:	9a a3       	std	Y+34, r25	; 0x22
    178a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    178c:	89 a1       	ldd	r24, Y+33	; 0x21
    178e:	9a a1       	ldd	r25, Y+34	; 0x22
    1790:	00 97       	sbiw	r24, 0x00	; 0
    1792:	69 f7       	brne	.-38     	; 0x176e <WriteIns+0x1f4>
    1794:	14 c0       	rjmp	.+40     	; 0x17be <WriteIns+0x244>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1796:	6b a1       	ldd	r22, Y+35	; 0x23
    1798:	7c a1       	ldd	r23, Y+36	; 0x24
    179a:	8d a1       	ldd	r24, Y+37	; 0x25
    179c:	9e a1       	ldd	r25, Y+38	; 0x26
    179e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17a2:	dc 01       	movw	r26, r24
    17a4:	cb 01       	movw	r24, r22
    17a6:	9a a3       	std	Y+34, r25	; 0x22
    17a8:	89 a3       	std	Y+33, r24	; 0x21
    17aa:	89 a1       	ldd	r24, Y+33	; 0x21
    17ac:	9a a1       	ldd	r25, Y+34	; 0x22
    17ae:	9e 8f       	std	Y+30, r25	; 0x1e
    17b0:	8d 8f       	std	Y+29, r24	; 0x1d
    17b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17b6:	01 97       	sbiw	r24, 0x01	; 1
    17b8:	f1 f7       	brne	.-4      	; 0x17b6 <WriteIns+0x23c>
    17ba:	9e 8f       	std	Y+30, r25	; 0x1e
    17bc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	DIO_WritePin(D7,READ_BIT(ins,3));
    17be:	89 ad       	ldd	r24, Y+57	; 0x39
    17c0:	86 95       	lsr	r24
    17c2:	86 95       	lsr	r24
    17c4:	86 95       	lsr	r24
    17c6:	98 2f       	mov	r25, r24
    17c8:	91 70       	andi	r25, 0x01	; 1
    17ca:	8b e0       	ldi	r24, 0x0B	; 11
    17cc:	69 2f       	mov	r22, r25
    17ce:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D6,READ_BIT(ins,2));
    17d2:	89 ad       	ldd	r24, Y+57	; 0x39
    17d4:	86 95       	lsr	r24
    17d6:	86 95       	lsr	r24
    17d8:	98 2f       	mov	r25, r24
    17da:	91 70       	andi	r25, 0x01	; 1
    17dc:	8a e0       	ldi	r24, 0x0A	; 10
    17de:	69 2f       	mov	r22, r25
    17e0:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D5,READ_BIT(ins,1));
    17e4:	89 ad       	ldd	r24, Y+57	; 0x39
    17e6:	86 95       	lsr	r24
    17e8:	98 2f       	mov	r25, r24
    17ea:	91 70       	andi	r25, 0x01	; 1
    17ec:	89 e0       	ldi	r24, 0x09	; 9
    17ee:	69 2f       	mov	r22, r25
    17f0:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D4,READ_BIT(ins,0));
    17f4:	89 ad       	ldd	r24, Y+57	; 0x39
    17f6:	98 2f       	mov	r25, r24
    17f8:	91 70       	andi	r25, 0x01	; 1
    17fa:	88 e0       	ldi	r24, 0x08	; 8
    17fc:	69 2f       	mov	r22, r25
    17fe:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>

	DIO_WritePin(E, HIGH);
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	61 e0       	ldi	r22, 0x01	; 1
    1806:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	a0 e8       	ldi	r26, 0x80	; 128
    1810:	bf e3       	ldi	r27, 0x3F	; 63
    1812:	89 8f       	std	Y+25, r24	; 0x19
    1814:	9a 8f       	std	Y+26, r25	; 0x1a
    1816:	ab 8f       	std	Y+27, r26	; 0x1b
    1818:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    181a:	69 8d       	ldd	r22, Y+25	; 0x19
    181c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    181e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1820:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	4a ef       	ldi	r20, 0xFA	; 250
    1828:	54 e4       	ldi	r21, 0x44	; 68
    182a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	8d 8b       	std	Y+21, r24	; 0x15
    1834:	9e 8b       	std	Y+22, r25	; 0x16
    1836:	af 8b       	std	Y+23, r26	; 0x17
    1838:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    183a:	6d 89       	ldd	r22, Y+21	; 0x15
    183c:	7e 89       	ldd	r23, Y+22	; 0x16
    183e:	8f 89       	ldd	r24, Y+23	; 0x17
    1840:	98 8d       	ldd	r25, Y+24	; 0x18
    1842:	20 e0       	ldi	r18, 0x00	; 0
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	40 e8       	ldi	r20, 0x80	; 128
    1848:	5f e3       	ldi	r21, 0x3F	; 63
    184a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    184e:	88 23       	and	r24, r24
    1850:	2c f4       	brge	.+10     	; 0x185c <WriteIns+0x2e2>
		__ticks = 1;
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	9c 8b       	std	Y+20, r25	; 0x14
    1858:	8b 8b       	std	Y+19, r24	; 0x13
    185a:	3f c0       	rjmp	.+126    	; 0x18da <WriteIns+0x360>
	else if (__tmp > 65535)
    185c:	6d 89       	ldd	r22, Y+21	; 0x15
    185e:	7e 89       	ldd	r23, Y+22	; 0x16
    1860:	8f 89       	ldd	r24, Y+23	; 0x17
    1862:	98 8d       	ldd	r25, Y+24	; 0x18
    1864:	20 e0       	ldi	r18, 0x00	; 0
    1866:	3f ef       	ldi	r19, 0xFF	; 255
    1868:	4f e7       	ldi	r20, 0x7F	; 127
    186a:	57 e4       	ldi	r21, 0x47	; 71
    186c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1870:	18 16       	cp	r1, r24
    1872:	4c f5       	brge	.+82     	; 0x18c6 <WriteIns+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1874:	69 8d       	ldd	r22, Y+25	; 0x19
    1876:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1878:	8b 8d       	ldd	r24, Y+27	; 0x1b
    187a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	40 e2       	ldi	r20, 0x20	; 32
    1882:	51 e4       	ldi	r21, 0x41	; 65
    1884:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1888:	dc 01       	movw	r26, r24
    188a:	cb 01       	movw	r24, r22
    188c:	bc 01       	movw	r22, r24
    188e:	cd 01       	movw	r24, r26
    1890:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1894:	dc 01       	movw	r26, r24
    1896:	cb 01       	movw	r24, r22
    1898:	9c 8b       	std	Y+20, r25	; 0x14
    189a:	8b 8b       	std	Y+19, r24	; 0x13
    189c:	0f c0       	rjmp	.+30     	; 0x18bc <WriteIns+0x342>
    189e:	88 ec       	ldi	r24, 0xC8	; 200
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	9a 8b       	std	Y+18, r25	; 0x12
    18a4:	89 8b       	std	Y+17, r24	; 0x11
    18a6:	89 89       	ldd	r24, Y+17	; 0x11
    18a8:	9a 89       	ldd	r25, Y+18	; 0x12
    18aa:	01 97       	sbiw	r24, 0x01	; 1
    18ac:	f1 f7       	brne	.-4      	; 0x18aa <WriteIns+0x330>
    18ae:	9a 8b       	std	Y+18, r25	; 0x12
    18b0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18b2:	8b 89       	ldd	r24, Y+19	; 0x13
    18b4:	9c 89       	ldd	r25, Y+20	; 0x14
    18b6:	01 97       	sbiw	r24, 0x01	; 1
    18b8:	9c 8b       	std	Y+20, r25	; 0x14
    18ba:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18bc:	8b 89       	ldd	r24, Y+19	; 0x13
    18be:	9c 89       	ldd	r25, Y+20	; 0x14
    18c0:	00 97       	sbiw	r24, 0x00	; 0
    18c2:	69 f7       	brne	.-38     	; 0x189e <WriteIns+0x324>
    18c4:	14 c0       	rjmp	.+40     	; 0x18ee <WriteIns+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c6:	6d 89       	ldd	r22, Y+21	; 0x15
    18c8:	7e 89       	ldd	r23, Y+22	; 0x16
    18ca:	8f 89       	ldd	r24, Y+23	; 0x17
    18cc:	98 8d       	ldd	r25, Y+24	; 0x18
    18ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18d2:	dc 01       	movw	r26, r24
    18d4:	cb 01       	movw	r24, r22
    18d6:	9c 8b       	std	Y+20, r25	; 0x14
    18d8:	8b 8b       	std	Y+19, r24	; 0x13
    18da:	8b 89       	ldd	r24, Y+19	; 0x13
    18dc:	9c 89       	ldd	r25, Y+20	; 0x14
    18de:	98 8b       	std	Y+16, r25	; 0x10
    18e0:	8f 87       	std	Y+15, r24	; 0x0f
    18e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    18e4:	98 89       	ldd	r25, Y+16	; 0x10
    18e6:	01 97       	sbiw	r24, 0x01	; 1
    18e8:	f1 f7       	brne	.-4      	; 0x18e6 <WriteIns+0x36c>
    18ea:	98 8b       	std	Y+16, r25	; 0x10
    18ec:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_WritePin(E, LOW);
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	a0 e8       	ldi	r26, 0x80	; 128
    18fc:	bf e3       	ldi	r27, 0x3F	; 63
    18fe:	8b 87       	std	Y+11, r24	; 0x0b
    1900:	9c 87       	std	Y+12, r25	; 0x0c
    1902:	ad 87       	std	Y+13, r26	; 0x0d
    1904:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1906:	6b 85       	ldd	r22, Y+11	; 0x0b
    1908:	7c 85       	ldd	r23, Y+12	; 0x0c
    190a:	8d 85       	ldd	r24, Y+13	; 0x0d
    190c:	9e 85       	ldd	r25, Y+14	; 0x0e
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	4a ef       	ldi	r20, 0xFA	; 250
    1914:	54 e4       	ldi	r21, 0x44	; 68
    1916:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	8f 83       	std	Y+7, r24	; 0x07
    1920:	98 87       	std	Y+8, r25	; 0x08
    1922:	a9 87       	std	Y+9, r26	; 0x09
    1924:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1926:	6f 81       	ldd	r22, Y+7	; 0x07
    1928:	78 85       	ldd	r23, Y+8	; 0x08
    192a:	89 85       	ldd	r24, Y+9	; 0x09
    192c:	9a 85       	ldd	r25, Y+10	; 0x0a
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	40 e8       	ldi	r20, 0x80	; 128
    1934:	5f e3       	ldi	r21, 0x3F	; 63
    1936:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    193a:	88 23       	and	r24, r24
    193c:	2c f4       	brge	.+10     	; 0x1948 <WriteIns+0x3ce>
		__ticks = 1;
    193e:	81 e0       	ldi	r24, 0x01	; 1
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	9e 83       	std	Y+6, r25	; 0x06
    1944:	8d 83       	std	Y+5, r24	; 0x05
    1946:	3f c0       	rjmp	.+126    	; 0x19c6 <WriteIns+0x44c>
	else if (__tmp > 65535)
    1948:	6f 81       	ldd	r22, Y+7	; 0x07
    194a:	78 85       	ldd	r23, Y+8	; 0x08
    194c:	89 85       	ldd	r24, Y+9	; 0x09
    194e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1950:	20 e0       	ldi	r18, 0x00	; 0
    1952:	3f ef       	ldi	r19, 0xFF	; 255
    1954:	4f e7       	ldi	r20, 0x7F	; 127
    1956:	57 e4       	ldi	r21, 0x47	; 71
    1958:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    195c:	18 16       	cp	r1, r24
    195e:	4c f5       	brge	.+82     	; 0x19b2 <WriteIns+0x438>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1960:	6b 85       	ldd	r22, Y+11	; 0x0b
    1962:	7c 85       	ldd	r23, Y+12	; 0x0c
    1964:	8d 85       	ldd	r24, Y+13	; 0x0d
    1966:	9e 85       	ldd	r25, Y+14	; 0x0e
    1968:	20 e0       	ldi	r18, 0x00	; 0
    196a:	30 e0       	ldi	r19, 0x00	; 0
    196c:	40 e2       	ldi	r20, 0x20	; 32
    196e:	51 e4       	ldi	r21, 0x41	; 65
    1970:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1974:	dc 01       	movw	r26, r24
    1976:	cb 01       	movw	r24, r22
    1978:	bc 01       	movw	r22, r24
    197a:	cd 01       	movw	r24, r26
    197c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1980:	dc 01       	movw	r26, r24
    1982:	cb 01       	movw	r24, r22
    1984:	9e 83       	std	Y+6, r25	; 0x06
    1986:	8d 83       	std	Y+5, r24	; 0x05
    1988:	0f c0       	rjmp	.+30     	; 0x19a8 <WriteIns+0x42e>
    198a:	88 ec       	ldi	r24, 0xC8	; 200
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	9c 83       	std	Y+4, r25	; 0x04
    1990:	8b 83       	std	Y+3, r24	; 0x03
    1992:	8b 81       	ldd	r24, Y+3	; 0x03
    1994:	9c 81       	ldd	r25, Y+4	; 0x04
    1996:	01 97       	sbiw	r24, 0x01	; 1
    1998:	f1 f7       	brne	.-4      	; 0x1996 <WriteIns+0x41c>
    199a:	9c 83       	std	Y+4, r25	; 0x04
    199c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    199e:	8d 81       	ldd	r24, Y+5	; 0x05
    19a0:	9e 81       	ldd	r25, Y+6	; 0x06
    19a2:	01 97       	sbiw	r24, 0x01	; 1
    19a4:	9e 83       	std	Y+6, r25	; 0x06
    19a6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19a8:	8d 81       	ldd	r24, Y+5	; 0x05
    19aa:	9e 81       	ldd	r25, Y+6	; 0x06
    19ac:	00 97       	sbiw	r24, 0x00	; 0
    19ae:	69 f7       	brne	.-38     	; 0x198a <WriteIns+0x410>
    19b0:	14 c0       	rjmp	.+40     	; 0x19da <WriteIns+0x460>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19b2:	6f 81       	ldd	r22, Y+7	; 0x07
    19b4:	78 85       	ldd	r23, Y+8	; 0x08
    19b6:	89 85       	ldd	r24, Y+9	; 0x09
    19b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    19ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19be:	dc 01       	movw	r26, r24
    19c0:	cb 01       	movw	r24, r22
    19c2:	9e 83       	std	Y+6, r25	; 0x06
    19c4:	8d 83       	std	Y+5, r24	; 0x05
    19c6:	8d 81       	ldd	r24, Y+5	; 0x05
    19c8:	9e 81       	ldd	r25, Y+6	; 0x06
    19ca:	9a 83       	std	Y+2, r25	; 0x02
    19cc:	89 83       	std	Y+1, r24	; 0x01
    19ce:	89 81       	ldd	r24, Y+1	; 0x01
    19d0:	9a 81       	ldd	r25, Y+2	; 0x02
    19d2:	01 97       	sbiw	r24, 0x01	; 1
    19d4:	f1 f7       	brne	.-4      	; 0x19d2 <WriteIns+0x458>
    19d6:	9a 83       	std	Y+2, r25	; 0x02
    19d8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    19da:	e9 96       	adiw	r28, 0x39	; 57
    19dc:	0f b6       	in	r0, 0x3f	; 63
    19de:	f8 94       	cli
    19e0:	de bf       	out	0x3e, r29	; 62
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	cd bf       	out	0x3d, r28	; 61
    19e6:	cf 91       	pop	r28
    19e8:	df 91       	pop	r29
    19ea:	08 95       	ret

000019ec <WriteData>:

void WriteData(u8 data)
{
    19ec:	df 93       	push	r29
    19ee:	cf 93       	push	r28
    19f0:	cd b7       	in	r28, 0x3d	; 61
    19f2:	de b7       	in	r29, 0x3e	; 62
    19f4:	e9 97       	sbiw	r28, 0x39	; 57
    19f6:	0f b6       	in	r0, 0x3f	; 63
    19f8:	f8 94       	cli
    19fa:	de bf       	out	0x3e, r29	; 62
    19fc:	0f be       	out	0x3f, r0	; 63
    19fe:	cd bf       	out	0x3d, r28	; 61
    1a00:	89 af       	std	Y+57, r24	; 0x39
	DIO_WritePin(RS, HIGH);
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	61 e0       	ldi	r22, 0x01	; 1
    1a06:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D7,READ_BIT(data,7));
    1a0a:	89 ad       	ldd	r24, Y+57	; 0x39
    1a0c:	98 2f       	mov	r25, r24
    1a0e:	99 1f       	adc	r25, r25
    1a10:	99 27       	eor	r25, r25
    1a12:	99 1f       	adc	r25, r25
    1a14:	8b e0       	ldi	r24, 0x0B	; 11
    1a16:	69 2f       	mov	r22, r25
    1a18:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D6,READ_BIT(data,6));
    1a1c:	89 ad       	ldd	r24, Y+57	; 0x39
    1a1e:	82 95       	swap	r24
    1a20:	86 95       	lsr	r24
    1a22:	86 95       	lsr	r24
    1a24:	83 70       	andi	r24, 0x03	; 3
    1a26:	98 2f       	mov	r25, r24
    1a28:	91 70       	andi	r25, 0x01	; 1
    1a2a:	8a e0       	ldi	r24, 0x0A	; 10
    1a2c:	69 2f       	mov	r22, r25
    1a2e:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D5,READ_BIT(data,5));
    1a32:	89 ad       	ldd	r24, Y+57	; 0x39
    1a34:	82 95       	swap	r24
    1a36:	86 95       	lsr	r24
    1a38:	87 70       	andi	r24, 0x07	; 7
    1a3a:	98 2f       	mov	r25, r24
    1a3c:	91 70       	andi	r25, 0x01	; 1
    1a3e:	89 e0       	ldi	r24, 0x09	; 9
    1a40:	69 2f       	mov	r22, r25
    1a42:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D4,READ_BIT(data,4));
    1a46:	89 ad       	ldd	r24, Y+57	; 0x39
    1a48:	82 95       	swap	r24
    1a4a:	8f 70       	andi	r24, 0x0F	; 15
    1a4c:	98 2f       	mov	r25, r24
    1a4e:	91 70       	andi	r25, 0x01	; 1
    1a50:	88 e0       	ldi	r24, 0x08	; 8
    1a52:	69 2f       	mov	r22, r25
    1a54:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>

	DIO_WritePin(E, HIGH);
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	61 e0       	ldi	r22, 0x01	; 1
    1a5c:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    1a60:	80 e0       	ldi	r24, 0x00	; 0
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	a0 e8       	ldi	r26, 0x80	; 128
    1a66:	bf e3       	ldi	r27, 0x3F	; 63
    1a68:	8d ab       	std	Y+53, r24	; 0x35
    1a6a:	9e ab       	std	Y+54, r25	; 0x36
    1a6c:	af ab       	std	Y+55, r26	; 0x37
    1a6e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a70:	6d a9       	ldd	r22, Y+53	; 0x35
    1a72:	7e a9       	ldd	r23, Y+54	; 0x36
    1a74:	8f a9       	ldd	r24, Y+55	; 0x37
    1a76:	98 ad       	ldd	r25, Y+56	; 0x38
    1a78:	20 e0       	ldi	r18, 0x00	; 0
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	4a ef       	ldi	r20, 0xFA	; 250
    1a7e:	54 e4       	ldi	r21, 0x44	; 68
    1a80:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a84:	dc 01       	movw	r26, r24
    1a86:	cb 01       	movw	r24, r22
    1a88:	89 ab       	std	Y+49, r24	; 0x31
    1a8a:	9a ab       	std	Y+50, r25	; 0x32
    1a8c:	ab ab       	std	Y+51, r26	; 0x33
    1a8e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a90:	69 a9       	ldd	r22, Y+49	; 0x31
    1a92:	7a a9       	ldd	r23, Y+50	; 0x32
    1a94:	8b a9       	ldd	r24, Y+51	; 0x33
    1a96:	9c a9       	ldd	r25, Y+52	; 0x34
    1a98:	20 e0       	ldi	r18, 0x00	; 0
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	40 e8       	ldi	r20, 0x80	; 128
    1a9e:	5f e3       	ldi	r21, 0x3F	; 63
    1aa0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1aa4:	88 23       	and	r24, r24
    1aa6:	2c f4       	brge	.+10     	; 0x1ab2 <WriteData+0xc6>
		__ticks = 1;
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	98 ab       	std	Y+48, r25	; 0x30
    1aae:	8f a7       	std	Y+47, r24	; 0x2f
    1ab0:	3f c0       	rjmp	.+126    	; 0x1b30 <WriteData+0x144>
	else if (__tmp > 65535)
    1ab2:	69 a9       	ldd	r22, Y+49	; 0x31
    1ab4:	7a a9       	ldd	r23, Y+50	; 0x32
    1ab6:	8b a9       	ldd	r24, Y+51	; 0x33
    1ab8:	9c a9       	ldd	r25, Y+52	; 0x34
    1aba:	20 e0       	ldi	r18, 0x00	; 0
    1abc:	3f ef       	ldi	r19, 0xFF	; 255
    1abe:	4f e7       	ldi	r20, 0x7F	; 127
    1ac0:	57 e4       	ldi	r21, 0x47	; 71
    1ac2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ac6:	18 16       	cp	r1, r24
    1ac8:	4c f5       	brge	.+82     	; 0x1b1c <WriteData+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aca:	6d a9       	ldd	r22, Y+53	; 0x35
    1acc:	7e a9       	ldd	r23, Y+54	; 0x36
    1ace:	8f a9       	ldd	r24, Y+55	; 0x37
    1ad0:	98 ad       	ldd	r25, Y+56	; 0x38
    1ad2:	20 e0       	ldi	r18, 0x00	; 0
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	40 e2       	ldi	r20, 0x20	; 32
    1ad8:	51 e4       	ldi	r21, 0x41	; 65
    1ada:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ade:	dc 01       	movw	r26, r24
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	bc 01       	movw	r22, r24
    1ae4:	cd 01       	movw	r24, r26
    1ae6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aea:	dc 01       	movw	r26, r24
    1aec:	cb 01       	movw	r24, r22
    1aee:	98 ab       	std	Y+48, r25	; 0x30
    1af0:	8f a7       	std	Y+47, r24	; 0x2f
    1af2:	0f c0       	rjmp	.+30     	; 0x1b12 <WriteData+0x126>
    1af4:	88 ec       	ldi	r24, 0xC8	; 200
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	9e a7       	std	Y+46, r25	; 0x2e
    1afa:	8d a7       	std	Y+45, r24	; 0x2d
    1afc:	8d a5       	ldd	r24, Y+45	; 0x2d
    1afe:	9e a5       	ldd	r25, Y+46	; 0x2e
    1b00:	01 97       	sbiw	r24, 0x01	; 1
    1b02:	f1 f7       	brne	.-4      	; 0x1b00 <WriteData+0x114>
    1b04:	9e a7       	std	Y+46, r25	; 0x2e
    1b06:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b08:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b0a:	98 a9       	ldd	r25, Y+48	; 0x30
    1b0c:	01 97       	sbiw	r24, 0x01	; 1
    1b0e:	98 ab       	std	Y+48, r25	; 0x30
    1b10:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b12:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b14:	98 a9       	ldd	r25, Y+48	; 0x30
    1b16:	00 97       	sbiw	r24, 0x00	; 0
    1b18:	69 f7       	brne	.-38     	; 0x1af4 <WriteData+0x108>
    1b1a:	14 c0       	rjmp	.+40     	; 0x1b44 <WriteData+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b1c:	69 a9       	ldd	r22, Y+49	; 0x31
    1b1e:	7a a9       	ldd	r23, Y+50	; 0x32
    1b20:	8b a9       	ldd	r24, Y+51	; 0x33
    1b22:	9c a9       	ldd	r25, Y+52	; 0x34
    1b24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b28:	dc 01       	movw	r26, r24
    1b2a:	cb 01       	movw	r24, r22
    1b2c:	98 ab       	std	Y+48, r25	; 0x30
    1b2e:	8f a7       	std	Y+47, r24	; 0x2f
    1b30:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b32:	98 a9       	ldd	r25, Y+48	; 0x30
    1b34:	9c a7       	std	Y+44, r25	; 0x2c
    1b36:	8b a7       	std	Y+43, r24	; 0x2b
    1b38:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b3a:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b3c:	01 97       	sbiw	r24, 0x01	; 1
    1b3e:	f1 f7       	brne	.-4      	; 0x1b3c <WriteData+0x150>
    1b40:	9c a7       	std	Y+44, r25	; 0x2c
    1b42:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	DIO_WritePin(E, LOW);
    1b44:	81 e0       	ldi	r24, 0x01	; 1
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    1b4c:	80 e0       	ldi	r24, 0x00	; 0
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	a0 e8       	ldi	r26, 0x80	; 128
    1b52:	bf e3       	ldi	r27, 0x3F	; 63
    1b54:	8f a3       	std	Y+39, r24	; 0x27
    1b56:	98 a7       	std	Y+40, r25	; 0x28
    1b58:	a9 a7       	std	Y+41, r26	; 0x29
    1b5a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b5c:	6f a1       	ldd	r22, Y+39	; 0x27
    1b5e:	78 a5       	ldd	r23, Y+40	; 0x28
    1b60:	89 a5       	ldd	r24, Y+41	; 0x29
    1b62:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	4a ef       	ldi	r20, 0xFA	; 250
    1b6a:	54 e4       	ldi	r21, 0x44	; 68
    1b6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b70:	dc 01       	movw	r26, r24
    1b72:	cb 01       	movw	r24, r22
    1b74:	8b a3       	std	Y+35, r24	; 0x23
    1b76:	9c a3       	std	Y+36, r25	; 0x24
    1b78:	ad a3       	std	Y+37, r26	; 0x25
    1b7a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b7c:	6b a1       	ldd	r22, Y+35	; 0x23
    1b7e:	7c a1       	ldd	r23, Y+36	; 0x24
    1b80:	8d a1       	ldd	r24, Y+37	; 0x25
    1b82:	9e a1       	ldd	r25, Y+38	; 0x26
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	40 e8       	ldi	r20, 0x80	; 128
    1b8a:	5f e3       	ldi	r21, 0x3F	; 63
    1b8c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b90:	88 23       	and	r24, r24
    1b92:	2c f4       	brge	.+10     	; 0x1b9e <WriteData+0x1b2>
		__ticks = 1;
    1b94:	81 e0       	ldi	r24, 0x01	; 1
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	9a a3       	std	Y+34, r25	; 0x22
    1b9a:	89 a3       	std	Y+33, r24	; 0x21
    1b9c:	3f c0       	rjmp	.+126    	; 0x1c1c <WriteData+0x230>
	else if (__tmp > 65535)
    1b9e:	6b a1       	ldd	r22, Y+35	; 0x23
    1ba0:	7c a1       	ldd	r23, Y+36	; 0x24
    1ba2:	8d a1       	ldd	r24, Y+37	; 0x25
    1ba4:	9e a1       	ldd	r25, Y+38	; 0x26
    1ba6:	20 e0       	ldi	r18, 0x00	; 0
    1ba8:	3f ef       	ldi	r19, 0xFF	; 255
    1baa:	4f e7       	ldi	r20, 0x7F	; 127
    1bac:	57 e4       	ldi	r21, 0x47	; 71
    1bae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1bb2:	18 16       	cp	r1, r24
    1bb4:	4c f5       	brge	.+82     	; 0x1c08 <WriteData+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bb6:	6f a1       	ldd	r22, Y+39	; 0x27
    1bb8:	78 a5       	ldd	r23, Y+40	; 0x28
    1bba:	89 a5       	ldd	r24, Y+41	; 0x29
    1bbc:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bbe:	20 e0       	ldi	r18, 0x00	; 0
    1bc0:	30 e0       	ldi	r19, 0x00	; 0
    1bc2:	40 e2       	ldi	r20, 0x20	; 32
    1bc4:	51 e4       	ldi	r21, 0x41	; 65
    1bc6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bca:	dc 01       	movw	r26, r24
    1bcc:	cb 01       	movw	r24, r22
    1bce:	bc 01       	movw	r22, r24
    1bd0:	cd 01       	movw	r24, r26
    1bd2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bd6:	dc 01       	movw	r26, r24
    1bd8:	cb 01       	movw	r24, r22
    1bda:	9a a3       	std	Y+34, r25	; 0x22
    1bdc:	89 a3       	std	Y+33, r24	; 0x21
    1bde:	0f c0       	rjmp	.+30     	; 0x1bfe <WriteData+0x212>
    1be0:	88 ec       	ldi	r24, 0xC8	; 200
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	98 a3       	std	Y+32, r25	; 0x20
    1be6:	8f 8f       	std	Y+31, r24	; 0x1f
    1be8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1bea:	98 a1       	ldd	r25, Y+32	; 0x20
    1bec:	01 97       	sbiw	r24, 0x01	; 1
    1bee:	f1 f7       	brne	.-4      	; 0x1bec <WriteData+0x200>
    1bf0:	98 a3       	std	Y+32, r25	; 0x20
    1bf2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bf4:	89 a1       	ldd	r24, Y+33	; 0x21
    1bf6:	9a a1       	ldd	r25, Y+34	; 0x22
    1bf8:	01 97       	sbiw	r24, 0x01	; 1
    1bfa:	9a a3       	std	Y+34, r25	; 0x22
    1bfc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bfe:	89 a1       	ldd	r24, Y+33	; 0x21
    1c00:	9a a1       	ldd	r25, Y+34	; 0x22
    1c02:	00 97       	sbiw	r24, 0x00	; 0
    1c04:	69 f7       	brne	.-38     	; 0x1be0 <WriteData+0x1f4>
    1c06:	14 c0       	rjmp	.+40     	; 0x1c30 <WriteData+0x244>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c08:	6b a1       	ldd	r22, Y+35	; 0x23
    1c0a:	7c a1       	ldd	r23, Y+36	; 0x24
    1c0c:	8d a1       	ldd	r24, Y+37	; 0x25
    1c0e:	9e a1       	ldd	r25, Y+38	; 0x26
    1c10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c14:	dc 01       	movw	r26, r24
    1c16:	cb 01       	movw	r24, r22
    1c18:	9a a3       	std	Y+34, r25	; 0x22
    1c1a:	89 a3       	std	Y+33, r24	; 0x21
    1c1c:	89 a1       	ldd	r24, Y+33	; 0x21
    1c1e:	9a a1       	ldd	r25, Y+34	; 0x22
    1c20:	9e 8f       	std	Y+30, r25	; 0x1e
    1c22:	8d 8f       	std	Y+29, r24	; 0x1d
    1c24:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c26:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c28:	01 97       	sbiw	r24, 0x01	; 1
    1c2a:	f1 f7       	brne	.-4      	; 0x1c28 <WriteData+0x23c>
    1c2c:	9e 8f       	std	Y+30, r25	; 0x1e
    1c2e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	DIO_WritePin(D7,READ_BIT(data,3));
    1c30:	89 ad       	ldd	r24, Y+57	; 0x39
    1c32:	86 95       	lsr	r24
    1c34:	86 95       	lsr	r24
    1c36:	86 95       	lsr	r24
    1c38:	98 2f       	mov	r25, r24
    1c3a:	91 70       	andi	r25, 0x01	; 1
    1c3c:	8b e0       	ldi	r24, 0x0B	; 11
    1c3e:	69 2f       	mov	r22, r25
    1c40:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D6,READ_BIT(data,2));
    1c44:	89 ad       	ldd	r24, Y+57	; 0x39
    1c46:	86 95       	lsr	r24
    1c48:	86 95       	lsr	r24
    1c4a:	98 2f       	mov	r25, r24
    1c4c:	91 70       	andi	r25, 0x01	; 1
    1c4e:	8a e0       	ldi	r24, 0x0A	; 10
    1c50:	69 2f       	mov	r22, r25
    1c52:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D5,READ_BIT(data,1));
    1c56:	89 ad       	ldd	r24, Y+57	; 0x39
    1c58:	86 95       	lsr	r24
    1c5a:	98 2f       	mov	r25, r24
    1c5c:	91 70       	andi	r25, 0x01	; 1
    1c5e:	89 e0       	ldi	r24, 0x09	; 9
    1c60:	69 2f       	mov	r22, r25
    1c62:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
	DIO_WritePin(D4,READ_BIT(data,0));
    1c66:	89 ad       	ldd	r24, Y+57	; 0x39
    1c68:	98 2f       	mov	r25, r24
    1c6a:	91 70       	andi	r25, 0x01	; 1
    1c6c:	88 e0       	ldi	r24, 0x08	; 8
    1c6e:	69 2f       	mov	r22, r25
    1c70:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>

	DIO_WritePin(E, HIGH);
    1c74:	81 e0       	ldi	r24, 0x01	; 1
    1c76:	61 e0       	ldi	r22, 0x01	; 1
    1c78:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    1c7c:	80 e0       	ldi	r24, 0x00	; 0
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	a0 e8       	ldi	r26, 0x80	; 128
    1c82:	bf e3       	ldi	r27, 0x3F	; 63
    1c84:	89 8f       	std	Y+25, r24	; 0x19
    1c86:	9a 8f       	std	Y+26, r25	; 0x1a
    1c88:	ab 8f       	std	Y+27, r26	; 0x1b
    1c8a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c8c:	69 8d       	ldd	r22, Y+25	; 0x19
    1c8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	4a ef       	ldi	r20, 0xFA	; 250
    1c9a:	54 e4       	ldi	r21, 0x44	; 68
    1c9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ca0:	dc 01       	movw	r26, r24
    1ca2:	cb 01       	movw	r24, r22
    1ca4:	8d 8b       	std	Y+21, r24	; 0x15
    1ca6:	9e 8b       	std	Y+22, r25	; 0x16
    1ca8:	af 8b       	std	Y+23, r26	; 0x17
    1caa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1cac:	6d 89       	ldd	r22, Y+21	; 0x15
    1cae:	7e 89       	ldd	r23, Y+22	; 0x16
    1cb0:	8f 89       	ldd	r24, Y+23	; 0x17
    1cb2:	98 8d       	ldd	r25, Y+24	; 0x18
    1cb4:	20 e0       	ldi	r18, 0x00	; 0
    1cb6:	30 e0       	ldi	r19, 0x00	; 0
    1cb8:	40 e8       	ldi	r20, 0x80	; 128
    1cba:	5f e3       	ldi	r21, 0x3F	; 63
    1cbc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1cc0:	88 23       	and	r24, r24
    1cc2:	2c f4       	brge	.+10     	; 0x1cce <WriteData+0x2e2>
		__ticks = 1;
    1cc4:	81 e0       	ldi	r24, 0x01	; 1
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	9c 8b       	std	Y+20, r25	; 0x14
    1cca:	8b 8b       	std	Y+19, r24	; 0x13
    1ccc:	3f c0       	rjmp	.+126    	; 0x1d4c <WriteData+0x360>
	else if (__tmp > 65535)
    1cce:	6d 89       	ldd	r22, Y+21	; 0x15
    1cd0:	7e 89       	ldd	r23, Y+22	; 0x16
    1cd2:	8f 89       	ldd	r24, Y+23	; 0x17
    1cd4:	98 8d       	ldd	r25, Y+24	; 0x18
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	3f ef       	ldi	r19, 0xFF	; 255
    1cda:	4f e7       	ldi	r20, 0x7F	; 127
    1cdc:	57 e4       	ldi	r21, 0x47	; 71
    1cde:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ce2:	18 16       	cp	r1, r24
    1ce4:	4c f5       	brge	.+82     	; 0x1d38 <WriteData+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ce6:	69 8d       	ldd	r22, Y+25	; 0x19
    1ce8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	40 e2       	ldi	r20, 0x20	; 32
    1cf4:	51 e4       	ldi	r21, 0x41	; 65
    1cf6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cfa:	dc 01       	movw	r26, r24
    1cfc:	cb 01       	movw	r24, r22
    1cfe:	bc 01       	movw	r22, r24
    1d00:	cd 01       	movw	r24, r26
    1d02:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	9c 8b       	std	Y+20, r25	; 0x14
    1d0c:	8b 8b       	std	Y+19, r24	; 0x13
    1d0e:	0f c0       	rjmp	.+30     	; 0x1d2e <WriteData+0x342>
    1d10:	88 ec       	ldi	r24, 0xC8	; 200
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	9a 8b       	std	Y+18, r25	; 0x12
    1d16:	89 8b       	std	Y+17, r24	; 0x11
    1d18:	89 89       	ldd	r24, Y+17	; 0x11
    1d1a:	9a 89       	ldd	r25, Y+18	; 0x12
    1d1c:	01 97       	sbiw	r24, 0x01	; 1
    1d1e:	f1 f7       	brne	.-4      	; 0x1d1c <WriteData+0x330>
    1d20:	9a 8b       	std	Y+18, r25	; 0x12
    1d22:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d24:	8b 89       	ldd	r24, Y+19	; 0x13
    1d26:	9c 89       	ldd	r25, Y+20	; 0x14
    1d28:	01 97       	sbiw	r24, 0x01	; 1
    1d2a:	9c 8b       	std	Y+20, r25	; 0x14
    1d2c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d2e:	8b 89       	ldd	r24, Y+19	; 0x13
    1d30:	9c 89       	ldd	r25, Y+20	; 0x14
    1d32:	00 97       	sbiw	r24, 0x00	; 0
    1d34:	69 f7       	brne	.-38     	; 0x1d10 <WriteData+0x324>
    1d36:	14 c0       	rjmp	.+40     	; 0x1d60 <WriteData+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d38:	6d 89       	ldd	r22, Y+21	; 0x15
    1d3a:	7e 89       	ldd	r23, Y+22	; 0x16
    1d3c:	8f 89       	ldd	r24, Y+23	; 0x17
    1d3e:	98 8d       	ldd	r25, Y+24	; 0x18
    1d40:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	9c 8b       	std	Y+20, r25	; 0x14
    1d4a:	8b 8b       	std	Y+19, r24	; 0x13
    1d4c:	8b 89       	ldd	r24, Y+19	; 0x13
    1d4e:	9c 89       	ldd	r25, Y+20	; 0x14
    1d50:	98 8b       	std	Y+16, r25	; 0x10
    1d52:	8f 87       	std	Y+15, r24	; 0x0f
    1d54:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d56:	98 89       	ldd	r25, Y+16	; 0x10
    1d58:	01 97       	sbiw	r24, 0x01	; 1
    1d5a:	f1 f7       	brne	.-4      	; 0x1d58 <WriteData+0x36c>
    1d5c:	98 8b       	std	Y+16, r25	; 0x10
    1d5e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_WritePin(E, LOW);
    1d60:	81 e0       	ldi	r24, 0x01	; 1
    1d62:	60 e0       	ldi	r22, 0x00	; 0
    1d64:	0e 94 2f 08 	call	0x105e	; 0x105e <DIO_WritePin>
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	a0 e8       	ldi	r26, 0x80	; 128
    1d6e:	bf e3       	ldi	r27, 0x3F	; 63
    1d70:	8b 87       	std	Y+11, r24	; 0x0b
    1d72:	9c 87       	std	Y+12, r25	; 0x0c
    1d74:	ad 87       	std	Y+13, r26	; 0x0d
    1d76:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d78:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d80:	20 e0       	ldi	r18, 0x00	; 0
    1d82:	30 e0       	ldi	r19, 0x00	; 0
    1d84:	4a ef       	ldi	r20, 0xFA	; 250
    1d86:	54 e4       	ldi	r21, 0x44	; 68
    1d88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d8c:	dc 01       	movw	r26, r24
    1d8e:	cb 01       	movw	r24, r22
    1d90:	8f 83       	std	Y+7, r24	; 0x07
    1d92:	98 87       	std	Y+8, r25	; 0x08
    1d94:	a9 87       	std	Y+9, r26	; 0x09
    1d96:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d98:	6f 81       	ldd	r22, Y+7	; 0x07
    1d9a:	78 85       	ldd	r23, Y+8	; 0x08
    1d9c:	89 85       	ldd	r24, Y+9	; 0x09
    1d9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da0:	20 e0       	ldi	r18, 0x00	; 0
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	40 e8       	ldi	r20, 0x80	; 128
    1da6:	5f e3       	ldi	r21, 0x3F	; 63
    1da8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dac:	88 23       	and	r24, r24
    1dae:	2c f4       	brge	.+10     	; 0x1dba <WriteData+0x3ce>
		__ticks = 1;
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	9e 83       	std	Y+6, r25	; 0x06
    1db6:	8d 83       	std	Y+5, r24	; 0x05
    1db8:	3f c0       	rjmp	.+126    	; 0x1e38 <WriteData+0x44c>
	else if (__tmp > 65535)
    1dba:	6f 81       	ldd	r22, Y+7	; 0x07
    1dbc:	78 85       	ldd	r23, Y+8	; 0x08
    1dbe:	89 85       	ldd	r24, Y+9	; 0x09
    1dc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc2:	20 e0       	ldi	r18, 0x00	; 0
    1dc4:	3f ef       	ldi	r19, 0xFF	; 255
    1dc6:	4f e7       	ldi	r20, 0x7F	; 127
    1dc8:	57 e4       	ldi	r21, 0x47	; 71
    1dca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1dce:	18 16       	cp	r1, r24
    1dd0:	4c f5       	brge	.+82     	; 0x1e24 <WriteData+0x438>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dd2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1dd4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dd6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dd8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dda:	20 e0       	ldi	r18, 0x00	; 0
    1ddc:	30 e0       	ldi	r19, 0x00	; 0
    1dde:	40 e2       	ldi	r20, 0x20	; 32
    1de0:	51 e4       	ldi	r21, 0x41	; 65
    1de2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1de6:	dc 01       	movw	r26, r24
    1de8:	cb 01       	movw	r24, r22
    1dea:	bc 01       	movw	r22, r24
    1dec:	cd 01       	movw	r24, r26
    1dee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1df2:	dc 01       	movw	r26, r24
    1df4:	cb 01       	movw	r24, r22
    1df6:	9e 83       	std	Y+6, r25	; 0x06
    1df8:	8d 83       	std	Y+5, r24	; 0x05
    1dfa:	0f c0       	rjmp	.+30     	; 0x1e1a <WriteData+0x42e>
    1dfc:	88 ec       	ldi	r24, 0xC8	; 200
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	9c 83       	std	Y+4, r25	; 0x04
    1e02:	8b 83       	std	Y+3, r24	; 0x03
    1e04:	8b 81       	ldd	r24, Y+3	; 0x03
    1e06:	9c 81       	ldd	r25, Y+4	; 0x04
    1e08:	01 97       	sbiw	r24, 0x01	; 1
    1e0a:	f1 f7       	brne	.-4      	; 0x1e08 <WriteData+0x41c>
    1e0c:	9c 83       	std	Y+4, r25	; 0x04
    1e0e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e10:	8d 81       	ldd	r24, Y+5	; 0x05
    1e12:	9e 81       	ldd	r25, Y+6	; 0x06
    1e14:	01 97       	sbiw	r24, 0x01	; 1
    1e16:	9e 83       	std	Y+6, r25	; 0x06
    1e18:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e1a:	8d 81       	ldd	r24, Y+5	; 0x05
    1e1c:	9e 81       	ldd	r25, Y+6	; 0x06
    1e1e:	00 97       	sbiw	r24, 0x00	; 0
    1e20:	69 f7       	brne	.-38     	; 0x1dfc <WriteData+0x410>
    1e22:	14 c0       	rjmp	.+40     	; 0x1e4c <WriteData+0x460>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e24:	6f 81       	ldd	r22, Y+7	; 0x07
    1e26:	78 85       	ldd	r23, Y+8	; 0x08
    1e28:	89 85       	ldd	r24, Y+9	; 0x09
    1e2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e30:	dc 01       	movw	r26, r24
    1e32:	cb 01       	movw	r24, r22
    1e34:	9e 83       	std	Y+6, r25	; 0x06
    1e36:	8d 83       	std	Y+5, r24	; 0x05
    1e38:	8d 81       	ldd	r24, Y+5	; 0x05
    1e3a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e3c:	9a 83       	std	Y+2, r25	; 0x02
    1e3e:	89 83       	std	Y+1, r24	; 0x01
    1e40:	89 81       	ldd	r24, Y+1	; 0x01
    1e42:	9a 81       	ldd	r25, Y+2	; 0x02
    1e44:	01 97       	sbiw	r24, 0x01	; 1
    1e46:	f1 f7       	brne	.-4      	; 0x1e44 <WriteData+0x458>
    1e48:	9a 83       	std	Y+2, r25	; 0x02
    1e4a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    1e4c:	e9 96       	adiw	r28, 0x39	; 57
    1e4e:	0f b6       	in	r0, 0x3f	; 63
    1e50:	f8 94       	cli
    1e52:	de bf       	out	0x3e, r29	; 62
    1e54:	0f be       	out	0x3f, r0	; 63
    1e56:	cd bf       	out	0x3d, r28	; 61
    1e58:	cf 91       	pop	r28
    1e5a:	df 91       	pop	r29
    1e5c:	08 95       	ret

00001e5e <LCD_Init>:

void LCD_Init(void)
{
    1e5e:	0f 93       	push	r16
    1e60:	1f 93       	push	r17
    1e62:	df 93       	push	r29
    1e64:	cf 93       	push	r28
    1e66:	cd b7       	in	r28, 0x3d	; 61
    1e68:	de b7       	in	r29, 0x3e	; 62
    1e6a:	c4 55       	subi	r28, 0x54	; 84
    1e6c:	d0 40       	sbci	r29, 0x00	; 0
    1e6e:	0f b6       	in	r0, 0x3f	; 63
    1e70:	f8 94       	cli
    1e72:	de bf       	out	0x3e, r29	; 62
    1e74:	0f be       	out	0x3f, r0	; 63
    1e76:	cd bf       	out	0x3d, r28	; 61
    1e78:	fe 01       	movw	r30, r28
    1e7a:	ef 5a       	subi	r30, 0xAF	; 175
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	80 e0       	ldi	r24, 0x00	; 0
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	a8 e4       	ldi	r26, 0x48	; 72
    1e84:	b2 e4       	ldi	r27, 0x42	; 66
    1e86:	80 83       	st	Z, r24
    1e88:	91 83       	std	Z+1, r25	; 0x01
    1e8a:	a2 83       	std	Z+2, r26	; 0x02
    1e8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e8e:	8e 01       	movw	r16, r28
    1e90:	03 5b       	subi	r16, 0xB3	; 179
    1e92:	1f 4f       	sbci	r17, 0xFF	; 255
    1e94:	fe 01       	movw	r30, r28
    1e96:	ef 5a       	subi	r30, 0xAF	; 175
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	60 81       	ld	r22, Z
    1e9c:	71 81       	ldd	r23, Z+1	; 0x01
    1e9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ea0:	93 81       	ldd	r25, Z+3	; 0x03
    1ea2:	20 e0       	ldi	r18, 0x00	; 0
    1ea4:	30 e0       	ldi	r19, 0x00	; 0
    1ea6:	4a ef       	ldi	r20, 0xFA	; 250
    1ea8:	54 e4       	ldi	r21, 0x44	; 68
    1eaa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1eae:	dc 01       	movw	r26, r24
    1eb0:	cb 01       	movw	r24, r22
    1eb2:	f8 01       	movw	r30, r16
    1eb4:	80 83       	st	Z, r24
    1eb6:	91 83       	std	Z+1, r25	; 0x01
    1eb8:	a2 83       	std	Z+2, r26	; 0x02
    1eba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ebc:	fe 01       	movw	r30, r28
    1ebe:	e3 5b       	subi	r30, 0xB3	; 179
    1ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec2:	60 81       	ld	r22, Z
    1ec4:	71 81       	ldd	r23, Z+1	; 0x01
    1ec6:	82 81       	ldd	r24, Z+2	; 0x02
    1ec8:	93 81       	ldd	r25, Z+3	; 0x03
    1eca:	20 e0       	ldi	r18, 0x00	; 0
    1ecc:	30 e0       	ldi	r19, 0x00	; 0
    1ece:	40 e8       	ldi	r20, 0x80	; 128
    1ed0:	5f e3       	ldi	r21, 0x3F	; 63
    1ed2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ed6:	88 23       	and	r24, r24
    1ed8:	44 f4       	brge	.+16     	; 0x1eea <LCD_Init+0x8c>
		__ticks = 1;
    1eda:	fe 01       	movw	r30, r28
    1edc:	e5 5b       	subi	r30, 0xB5	; 181
    1ede:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee0:	81 e0       	ldi	r24, 0x01	; 1
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	91 83       	std	Z+1, r25	; 0x01
    1ee6:	80 83       	st	Z, r24
    1ee8:	64 c0       	rjmp	.+200    	; 0x1fb2 <LCD_Init+0x154>
	else if (__tmp > 65535)
    1eea:	fe 01       	movw	r30, r28
    1eec:	e3 5b       	subi	r30, 0xB3	; 179
    1eee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef0:	60 81       	ld	r22, Z
    1ef2:	71 81       	ldd	r23, Z+1	; 0x01
    1ef4:	82 81       	ldd	r24, Z+2	; 0x02
    1ef6:	93 81       	ldd	r25, Z+3	; 0x03
    1ef8:	20 e0       	ldi	r18, 0x00	; 0
    1efa:	3f ef       	ldi	r19, 0xFF	; 255
    1efc:	4f e7       	ldi	r20, 0x7F	; 127
    1efe:	57 e4       	ldi	r21, 0x47	; 71
    1f00:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f04:	18 16       	cp	r1, r24
    1f06:	0c f0       	brlt	.+2      	; 0x1f0a <LCD_Init+0xac>
    1f08:	43 c0       	rjmp	.+134    	; 0x1f90 <LCD_Init+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f0a:	fe 01       	movw	r30, r28
    1f0c:	ef 5a       	subi	r30, 0xAF	; 175
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	60 81       	ld	r22, Z
    1f12:	71 81       	ldd	r23, Z+1	; 0x01
    1f14:	82 81       	ldd	r24, Z+2	; 0x02
    1f16:	93 81       	ldd	r25, Z+3	; 0x03
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	40 e2       	ldi	r20, 0x20	; 32
    1f1e:	51 e4       	ldi	r21, 0x41	; 65
    1f20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f24:	dc 01       	movw	r26, r24
    1f26:	cb 01       	movw	r24, r22
    1f28:	8e 01       	movw	r16, r28
    1f2a:	05 5b       	subi	r16, 0xB5	; 181
    1f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2e:	bc 01       	movw	r22, r24
    1f30:	cd 01       	movw	r24, r26
    1f32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f36:	dc 01       	movw	r26, r24
    1f38:	cb 01       	movw	r24, r22
    1f3a:	f8 01       	movw	r30, r16
    1f3c:	91 83       	std	Z+1, r25	; 0x01
    1f3e:	80 83       	st	Z, r24
    1f40:	1f c0       	rjmp	.+62     	; 0x1f80 <LCD_Init+0x122>
    1f42:	fe 01       	movw	r30, r28
    1f44:	e7 5b       	subi	r30, 0xB7	; 183
    1f46:	ff 4f       	sbci	r31, 0xFF	; 255
    1f48:	88 ec       	ldi	r24, 0xC8	; 200
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	80 83       	st	Z, r24
    1f50:	fe 01       	movw	r30, r28
    1f52:	e7 5b       	subi	r30, 0xB7	; 183
    1f54:	ff 4f       	sbci	r31, 0xFF	; 255
    1f56:	80 81       	ld	r24, Z
    1f58:	91 81       	ldd	r25, Z+1	; 0x01
    1f5a:	01 97       	sbiw	r24, 0x01	; 1
    1f5c:	f1 f7       	brne	.-4      	; 0x1f5a <LCD_Init+0xfc>
    1f5e:	fe 01       	movw	r30, r28
    1f60:	e7 5b       	subi	r30, 0xB7	; 183
    1f62:	ff 4f       	sbci	r31, 0xFF	; 255
    1f64:	91 83       	std	Z+1, r25	; 0x01
    1f66:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f68:	de 01       	movw	r26, r28
    1f6a:	a5 5b       	subi	r26, 0xB5	; 181
    1f6c:	bf 4f       	sbci	r27, 0xFF	; 255
    1f6e:	fe 01       	movw	r30, r28
    1f70:	e5 5b       	subi	r30, 0xB5	; 181
    1f72:	ff 4f       	sbci	r31, 0xFF	; 255
    1f74:	80 81       	ld	r24, Z
    1f76:	91 81       	ldd	r25, Z+1	; 0x01
    1f78:	01 97       	sbiw	r24, 0x01	; 1
    1f7a:	11 96       	adiw	r26, 0x01	; 1
    1f7c:	9c 93       	st	X, r25
    1f7e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f80:	fe 01       	movw	r30, r28
    1f82:	e5 5b       	subi	r30, 0xB5	; 181
    1f84:	ff 4f       	sbci	r31, 0xFF	; 255
    1f86:	80 81       	ld	r24, Z
    1f88:	91 81       	ldd	r25, Z+1	; 0x01
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	d1 f6       	brne	.-76     	; 0x1f42 <LCD_Init+0xe4>
    1f8e:	27 c0       	rjmp	.+78     	; 0x1fde <LCD_Init+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f90:	8e 01       	movw	r16, r28
    1f92:	05 5b       	subi	r16, 0xB5	; 181
    1f94:	1f 4f       	sbci	r17, 0xFF	; 255
    1f96:	fe 01       	movw	r30, r28
    1f98:	e3 5b       	subi	r30, 0xB3	; 179
    1f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9c:	60 81       	ld	r22, Z
    1f9e:	71 81       	ldd	r23, Z+1	; 0x01
    1fa0:	82 81       	ldd	r24, Z+2	; 0x02
    1fa2:	93 81       	ldd	r25, Z+3	; 0x03
    1fa4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa8:	dc 01       	movw	r26, r24
    1faa:	cb 01       	movw	r24, r22
    1fac:	f8 01       	movw	r30, r16
    1fae:	91 83       	std	Z+1, r25	; 0x01
    1fb0:	80 83       	st	Z, r24
    1fb2:	de 01       	movw	r26, r28
    1fb4:	a9 5b       	subi	r26, 0xB9	; 185
    1fb6:	bf 4f       	sbci	r27, 0xFF	; 255
    1fb8:	fe 01       	movw	r30, r28
    1fba:	e5 5b       	subi	r30, 0xB5	; 181
    1fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbe:	80 81       	ld	r24, Z
    1fc0:	91 81       	ldd	r25, Z+1	; 0x01
    1fc2:	8d 93       	st	X+, r24
    1fc4:	9c 93       	st	X, r25
    1fc6:	fe 01       	movw	r30, r28
    1fc8:	e9 5b       	subi	r30, 0xB9	; 185
    1fca:	ff 4f       	sbci	r31, 0xFF	; 255
    1fcc:	80 81       	ld	r24, Z
    1fce:	91 81       	ldd	r25, Z+1	; 0x01
    1fd0:	01 97       	sbiw	r24, 0x01	; 1
    1fd2:	f1 f7       	brne	.-4      	; 0x1fd0 <LCD_Init+0x172>
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	e9 5b       	subi	r30, 0xB9	; 185
    1fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fda:	91 83       	std	Z+1, r25	; 0x01
    1fdc:	80 83       	st	Z, r24
	_delay_ms(50);
	WriteIns(0x02);
    1fde:	82 e0       	ldi	r24, 0x02	; 2
    1fe0:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    1fe4:	fe 01       	movw	r30, r28
    1fe6:	ed 5b       	subi	r30, 0xBD	; 189
    1fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fea:	80 e0       	ldi	r24, 0x00	; 0
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	a0 e8       	ldi	r26, 0x80	; 128
    1ff0:	bf e3       	ldi	r27, 0x3F	; 63
    1ff2:	80 83       	st	Z, r24
    1ff4:	91 83       	std	Z+1, r25	; 0x01
    1ff6:	a2 83       	std	Z+2, r26	; 0x02
    1ff8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ffa:	8e 01       	movw	r16, r28
    1ffc:	01 5c       	subi	r16, 0xC1	; 193
    1ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    2000:	fe 01       	movw	r30, r28
    2002:	ed 5b       	subi	r30, 0xBD	; 189
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	60 81       	ld	r22, Z
    2008:	71 81       	ldd	r23, Z+1	; 0x01
    200a:	82 81       	ldd	r24, Z+2	; 0x02
    200c:	93 81       	ldd	r25, Z+3	; 0x03
    200e:	20 e0       	ldi	r18, 0x00	; 0
    2010:	30 e0       	ldi	r19, 0x00	; 0
    2012:	4a ef       	ldi	r20, 0xFA	; 250
    2014:	54 e4       	ldi	r21, 0x44	; 68
    2016:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    201a:	dc 01       	movw	r26, r24
    201c:	cb 01       	movw	r24, r22
    201e:	f8 01       	movw	r30, r16
    2020:	80 83       	st	Z, r24
    2022:	91 83       	std	Z+1, r25	; 0x01
    2024:	a2 83       	std	Z+2, r26	; 0x02
    2026:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2028:	fe 01       	movw	r30, r28
    202a:	ff 96       	adiw	r30, 0x3f	; 63
    202c:	60 81       	ld	r22, Z
    202e:	71 81       	ldd	r23, Z+1	; 0x01
    2030:	82 81       	ldd	r24, Z+2	; 0x02
    2032:	93 81       	ldd	r25, Z+3	; 0x03
    2034:	20 e0       	ldi	r18, 0x00	; 0
    2036:	30 e0       	ldi	r19, 0x00	; 0
    2038:	40 e8       	ldi	r20, 0x80	; 128
    203a:	5f e3       	ldi	r21, 0x3F	; 63
    203c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2040:	88 23       	and	r24, r24
    2042:	2c f4       	brge	.+10     	; 0x204e <LCD_Init+0x1f0>
		__ticks = 1;
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	9e af       	std	Y+62, r25	; 0x3e
    204a:	8d af       	std	Y+61, r24	; 0x3d
    204c:	46 c0       	rjmp	.+140    	; 0x20da <LCD_Init+0x27c>
	else if (__tmp > 65535)
    204e:	fe 01       	movw	r30, r28
    2050:	ff 96       	adiw	r30, 0x3f	; 63
    2052:	60 81       	ld	r22, Z
    2054:	71 81       	ldd	r23, Z+1	; 0x01
    2056:	82 81       	ldd	r24, Z+2	; 0x02
    2058:	93 81       	ldd	r25, Z+3	; 0x03
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	3f ef       	ldi	r19, 0xFF	; 255
    205e:	4f e7       	ldi	r20, 0x7F	; 127
    2060:	57 e4       	ldi	r21, 0x47	; 71
    2062:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2066:	18 16       	cp	r1, r24
    2068:	64 f5       	brge	.+88     	; 0x20c2 <LCD_Init+0x264>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    206a:	fe 01       	movw	r30, r28
    206c:	ed 5b       	subi	r30, 0xBD	; 189
    206e:	ff 4f       	sbci	r31, 0xFF	; 255
    2070:	60 81       	ld	r22, Z
    2072:	71 81       	ldd	r23, Z+1	; 0x01
    2074:	82 81       	ldd	r24, Z+2	; 0x02
    2076:	93 81       	ldd	r25, Z+3	; 0x03
    2078:	20 e0       	ldi	r18, 0x00	; 0
    207a:	30 e0       	ldi	r19, 0x00	; 0
    207c:	40 e2       	ldi	r20, 0x20	; 32
    207e:	51 e4       	ldi	r21, 0x41	; 65
    2080:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	bc 01       	movw	r22, r24
    208a:	cd 01       	movw	r24, r26
    208c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2090:	dc 01       	movw	r26, r24
    2092:	cb 01       	movw	r24, r22
    2094:	9e af       	std	Y+62, r25	; 0x3e
    2096:	8d af       	std	Y+61, r24	; 0x3d
    2098:	0f c0       	rjmp	.+30     	; 0x20b8 <LCD_Init+0x25a>
    209a:	88 ec       	ldi	r24, 0xC8	; 200
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	9c af       	std	Y+60, r25	; 0x3c
    20a0:	8b af       	std	Y+59, r24	; 0x3b
    20a2:	8b ad       	ldd	r24, Y+59	; 0x3b
    20a4:	9c ad       	ldd	r25, Y+60	; 0x3c
    20a6:	01 97       	sbiw	r24, 0x01	; 1
    20a8:	f1 f7       	brne	.-4      	; 0x20a6 <LCD_Init+0x248>
    20aa:	9c af       	std	Y+60, r25	; 0x3c
    20ac:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    20b0:	9e ad       	ldd	r25, Y+62	; 0x3e
    20b2:	01 97       	sbiw	r24, 0x01	; 1
    20b4:	9e af       	std	Y+62, r25	; 0x3e
    20b6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20b8:	8d ad       	ldd	r24, Y+61	; 0x3d
    20ba:	9e ad       	ldd	r25, Y+62	; 0x3e
    20bc:	00 97       	sbiw	r24, 0x00	; 0
    20be:	69 f7       	brne	.-38     	; 0x209a <LCD_Init+0x23c>
    20c0:	16 c0       	rjmp	.+44     	; 0x20ee <LCD_Init+0x290>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c2:	fe 01       	movw	r30, r28
    20c4:	ff 96       	adiw	r30, 0x3f	; 63
    20c6:	60 81       	ld	r22, Z
    20c8:	71 81       	ldd	r23, Z+1	; 0x01
    20ca:	82 81       	ldd	r24, Z+2	; 0x02
    20cc:	93 81       	ldd	r25, Z+3	; 0x03
    20ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20d2:	dc 01       	movw	r26, r24
    20d4:	cb 01       	movw	r24, r22
    20d6:	9e af       	std	Y+62, r25	; 0x3e
    20d8:	8d af       	std	Y+61, r24	; 0x3d
    20da:	8d ad       	ldd	r24, Y+61	; 0x3d
    20dc:	9e ad       	ldd	r25, Y+62	; 0x3e
    20de:	9a af       	std	Y+58, r25	; 0x3a
    20e0:	89 af       	std	Y+57, r24	; 0x39
    20e2:	89 ad       	ldd	r24, Y+57	; 0x39
    20e4:	9a ad       	ldd	r25, Y+58	; 0x3a
    20e6:	01 97       	sbiw	r24, 0x01	; 1
    20e8:	f1 f7       	brne	.-4      	; 0x20e6 <LCD_Init+0x288>
    20ea:	9a af       	std	Y+58, r25	; 0x3a
    20ec:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);
	WriteIns(0x28);
    20ee:	88 e2       	ldi	r24, 0x28	; 40
    20f0:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    20f4:	80 e0       	ldi	r24, 0x00	; 0
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	a0 e8       	ldi	r26, 0x80	; 128
    20fa:	bf e3       	ldi	r27, 0x3F	; 63
    20fc:	8d ab       	std	Y+53, r24	; 0x35
    20fe:	9e ab       	std	Y+54, r25	; 0x36
    2100:	af ab       	std	Y+55, r26	; 0x37
    2102:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2104:	6d a9       	ldd	r22, Y+53	; 0x35
    2106:	7e a9       	ldd	r23, Y+54	; 0x36
    2108:	8f a9       	ldd	r24, Y+55	; 0x37
    210a:	98 ad       	ldd	r25, Y+56	; 0x38
    210c:	20 e0       	ldi	r18, 0x00	; 0
    210e:	30 e0       	ldi	r19, 0x00	; 0
    2110:	4a ef       	ldi	r20, 0xFA	; 250
    2112:	54 e4       	ldi	r21, 0x44	; 68
    2114:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2118:	dc 01       	movw	r26, r24
    211a:	cb 01       	movw	r24, r22
    211c:	89 ab       	std	Y+49, r24	; 0x31
    211e:	9a ab       	std	Y+50, r25	; 0x32
    2120:	ab ab       	std	Y+51, r26	; 0x33
    2122:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2124:	69 a9       	ldd	r22, Y+49	; 0x31
    2126:	7a a9       	ldd	r23, Y+50	; 0x32
    2128:	8b a9       	ldd	r24, Y+51	; 0x33
    212a:	9c a9       	ldd	r25, Y+52	; 0x34
    212c:	20 e0       	ldi	r18, 0x00	; 0
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e8       	ldi	r20, 0x80	; 128
    2132:	5f e3       	ldi	r21, 0x3F	; 63
    2134:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2138:	88 23       	and	r24, r24
    213a:	2c f4       	brge	.+10     	; 0x2146 <LCD_Init+0x2e8>
		__ticks = 1;
    213c:	81 e0       	ldi	r24, 0x01	; 1
    213e:	90 e0       	ldi	r25, 0x00	; 0
    2140:	98 ab       	std	Y+48, r25	; 0x30
    2142:	8f a7       	std	Y+47, r24	; 0x2f
    2144:	3f c0       	rjmp	.+126    	; 0x21c4 <LCD_Init+0x366>
	else if (__tmp > 65535)
    2146:	69 a9       	ldd	r22, Y+49	; 0x31
    2148:	7a a9       	ldd	r23, Y+50	; 0x32
    214a:	8b a9       	ldd	r24, Y+51	; 0x33
    214c:	9c a9       	ldd	r25, Y+52	; 0x34
    214e:	20 e0       	ldi	r18, 0x00	; 0
    2150:	3f ef       	ldi	r19, 0xFF	; 255
    2152:	4f e7       	ldi	r20, 0x7F	; 127
    2154:	57 e4       	ldi	r21, 0x47	; 71
    2156:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    215a:	18 16       	cp	r1, r24
    215c:	4c f5       	brge	.+82     	; 0x21b0 <LCD_Init+0x352>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    215e:	6d a9       	ldd	r22, Y+53	; 0x35
    2160:	7e a9       	ldd	r23, Y+54	; 0x36
    2162:	8f a9       	ldd	r24, Y+55	; 0x37
    2164:	98 ad       	ldd	r25, Y+56	; 0x38
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	40 e2       	ldi	r20, 0x20	; 32
    216c:	51 e4       	ldi	r21, 0x41	; 65
    216e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2172:	dc 01       	movw	r26, r24
    2174:	cb 01       	movw	r24, r22
    2176:	bc 01       	movw	r22, r24
    2178:	cd 01       	movw	r24, r26
    217a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
    2182:	98 ab       	std	Y+48, r25	; 0x30
    2184:	8f a7       	std	Y+47, r24	; 0x2f
    2186:	0f c0       	rjmp	.+30     	; 0x21a6 <LCD_Init+0x348>
    2188:	88 ec       	ldi	r24, 0xC8	; 200
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	9e a7       	std	Y+46, r25	; 0x2e
    218e:	8d a7       	std	Y+45, r24	; 0x2d
    2190:	8d a5       	ldd	r24, Y+45	; 0x2d
    2192:	9e a5       	ldd	r25, Y+46	; 0x2e
    2194:	01 97       	sbiw	r24, 0x01	; 1
    2196:	f1 f7       	brne	.-4      	; 0x2194 <LCD_Init+0x336>
    2198:	9e a7       	std	Y+46, r25	; 0x2e
    219a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    219c:	8f a5       	ldd	r24, Y+47	; 0x2f
    219e:	98 a9       	ldd	r25, Y+48	; 0x30
    21a0:	01 97       	sbiw	r24, 0x01	; 1
    21a2:	98 ab       	std	Y+48, r25	; 0x30
    21a4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21a6:	8f a5       	ldd	r24, Y+47	; 0x2f
    21a8:	98 a9       	ldd	r25, Y+48	; 0x30
    21aa:	00 97       	sbiw	r24, 0x00	; 0
    21ac:	69 f7       	brne	.-38     	; 0x2188 <LCD_Init+0x32a>
    21ae:	14 c0       	rjmp	.+40     	; 0x21d8 <LCD_Init+0x37a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21b0:	69 a9       	ldd	r22, Y+49	; 0x31
    21b2:	7a a9       	ldd	r23, Y+50	; 0x32
    21b4:	8b a9       	ldd	r24, Y+51	; 0x33
    21b6:	9c a9       	ldd	r25, Y+52	; 0x34
    21b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21bc:	dc 01       	movw	r26, r24
    21be:	cb 01       	movw	r24, r22
    21c0:	98 ab       	std	Y+48, r25	; 0x30
    21c2:	8f a7       	std	Y+47, r24	; 0x2f
    21c4:	8f a5       	ldd	r24, Y+47	; 0x2f
    21c6:	98 a9       	ldd	r25, Y+48	; 0x30
    21c8:	9c a7       	std	Y+44, r25	; 0x2c
    21ca:	8b a7       	std	Y+43, r24	; 0x2b
    21cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    21ce:	9c a5       	ldd	r25, Y+44	; 0x2c
    21d0:	01 97       	sbiw	r24, 0x01	; 1
    21d2:	f1 f7       	brne	.-4      	; 0x21d0 <LCD_Init+0x372>
    21d4:	9c a7       	std	Y+44, r25	; 0x2c
    21d6:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	WriteIns(0x0C);
    21d8:	8c e0       	ldi	r24, 0x0C	; 12
    21da:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    21de:	80 e0       	ldi	r24, 0x00	; 0
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	a0 e8       	ldi	r26, 0x80	; 128
    21e4:	bf e3       	ldi	r27, 0x3F	; 63
    21e6:	8f a3       	std	Y+39, r24	; 0x27
    21e8:	98 a7       	std	Y+40, r25	; 0x28
    21ea:	a9 a7       	std	Y+41, r26	; 0x29
    21ec:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ee:	6f a1       	ldd	r22, Y+39	; 0x27
    21f0:	78 a5       	ldd	r23, Y+40	; 0x28
    21f2:	89 a5       	ldd	r24, Y+41	; 0x29
    21f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    21f6:	20 e0       	ldi	r18, 0x00	; 0
    21f8:	30 e0       	ldi	r19, 0x00	; 0
    21fa:	4a ef       	ldi	r20, 0xFA	; 250
    21fc:	54 e4       	ldi	r21, 0x44	; 68
    21fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2202:	dc 01       	movw	r26, r24
    2204:	cb 01       	movw	r24, r22
    2206:	8b a3       	std	Y+35, r24	; 0x23
    2208:	9c a3       	std	Y+36, r25	; 0x24
    220a:	ad a3       	std	Y+37, r26	; 0x25
    220c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    220e:	6b a1       	ldd	r22, Y+35	; 0x23
    2210:	7c a1       	ldd	r23, Y+36	; 0x24
    2212:	8d a1       	ldd	r24, Y+37	; 0x25
    2214:	9e a1       	ldd	r25, Y+38	; 0x26
    2216:	20 e0       	ldi	r18, 0x00	; 0
    2218:	30 e0       	ldi	r19, 0x00	; 0
    221a:	40 e8       	ldi	r20, 0x80	; 128
    221c:	5f e3       	ldi	r21, 0x3F	; 63
    221e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2222:	88 23       	and	r24, r24
    2224:	2c f4       	brge	.+10     	; 0x2230 <LCD_Init+0x3d2>
		__ticks = 1;
    2226:	81 e0       	ldi	r24, 0x01	; 1
    2228:	90 e0       	ldi	r25, 0x00	; 0
    222a:	9a a3       	std	Y+34, r25	; 0x22
    222c:	89 a3       	std	Y+33, r24	; 0x21
    222e:	3f c0       	rjmp	.+126    	; 0x22ae <LCD_Init+0x450>
	else if (__tmp > 65535)
    2230:	6b a1       	ldd	r22, Y+35	; 0x23
    2232:	7c a1       	ldd	r23, Y+36	; 0x24
    2234:	8d a1       	ldd	r24, Y+37	; 0x25
    2236:	9e a1       	ldd	r25, Y+38	; 0x26
    2238:	20 e0       	ldi	r18, 0x00	; 0
    223a:	3f ef       	ldi	r19, 0xFF	; 255
    223c:	4f e7       	ldi	r20, 0x7F	; 127
    223e:	57 e4       	ldi	r21, 0x47	; 71
    2240:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2244:	18 16       	cp	r1, r24
    2246:	4c f5       	brge	.+82     	; 0x229a <LCD_Init+0x43c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2248:	6f a1       	ldd	r22, Y+39	; 0x27
    224a:	78 a5       	ldd	r23, Y+40	; 0x28
    224c:	89 a5       	ldd	r24, Y+41	; 0x29
    224e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2250:	20 e0       	ldi	r18, 0x00	; 0
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	40 e2       	ldi	r20, 0x20	; 32
    2256:	51 e4       	ldi	r21, 0x41	; 65
    2258:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    225c:	dc 01       	movw	r26, r24
    225e:	cb 01       	movw	r24, r22
    2260:	bc 01       	movw	r22, r24
    2262:	cd 01       	movw	r24, r26
    2264:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2268:	dc 01       	movw	r26, r24
    226a:	cb 01       	movw	r24, r22
    226c:	9a a3       	std	Y+34, r25	; 0x22
    226e:	89 a3       	std	Y+33, r24	; 0x21
    2270:	0f c0       	rjmp	.+30     	; 0x2290 <LCD_Init+0x432>
    2272:	88 ec       	ldi	r24, 0xC8	; 200
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	98 a3       	std	Y+32, r25	; 0x20
    2278:	8f 8f       	std	Y+31, r24	; 0x1f
    227a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    227c:	98 a1       	ldd	r25, Y+32	; 0x20
    227e:	01 97       	sbiw	r24, 0x01	; 1
    2280:	f1 f7       	brne	.-4      	; 0x227e <LCD_Init+0x420>
    2282:	98 a3       	std	Y+32, r25	; 0x20
    2284:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2286:	89 a1       	ldd	r24, Y+33	; 0x21
    2288:	9a a1       	ldd	r25, Y+34	; 0x22
    228a:	01 97       	sbiw	r24, 0x01	; 1
    228c:	9a a3       	std	Y+34, r25	; 0x22
    228e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2290:	89 a1       	ldd	r24, Y+33	; 0x21
    2292:	9a a1       	ldd	r25, Y+34	; 0x22
    2294:	00 97       	sbiw	r24, 0x00	; 0
    2296:	69 f7       	brne	.-38     	; 0x2272 <LCD_Init+0x414>
    2298:	14 c0       	rjmp	.+40     	; 0x22c2 <LCD_Init+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    229a:	6b a1       	ldd	r22, Y+35	; 0x23
    229c:	7c a1       	ldd	r23, Y+36	; 0x24
    229e:	8d a1       	ldd	r24, Y+37	; 0x25
    22a0:	9e a1       	ldd	r25, Y+38	; 0x26
    22a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22a6:	dc 01       	movw	r26, r24
    22a8:	cb 01       	movw	r24, r22
    22aa:	9a a3       	std	Y+34, r25	; 0x22
    22ac:	89 a3       	std	Y+33, r24	; 0x21
    22ae:	89 a1       	ldd	r24, Y+33	; 0x21
    22b0:	9a a1       	ldd	r25, Y+34	; 0x22
    22b2:	9e 8f       	std	Y+30, r25	; 0x1e
    22b4:	8d 8f       	std	Y+29, r24	; 0x1d
    22b6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    22b8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    22ba:	01 97       	sbiw	r24, 0x01	; 1
    22bc:	f1 f7       	brne	.-4      	; 0x22ba <LCD_Init+0x45c>
    22be:	9e 8f       	std	Y+30, r25	; 0x1e
    22c0:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	WriteIns(0x01); //clear screen
    22c2:	81 e0       	ldi	r24, 0x01	; 1
    22c4:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    22c8:	80 e0       	ldi	r24, 0x00	; 0
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	a0 e0       	ldi	r26, 0x00	; 0
    22ce:	b0 e4       	ldi	r27, 0x40	; 64
    22d0:	89 8f       	std	Y+25, r24	; 0x19
    22d2:	9a 8f       	std	Y+26, r25	; 0x1a
    22d4:	ab 8f       	std	Y+27, r26	; 0x1b
    22d6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22d8:	69 8d       	ldd	r22, Y+25	; 0x19
    22da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    22dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22e0:	20 e0       	ldi	r18, 0x00	; 0
    22e2:	30 e0       	ldi	r19, 0x00	; 0
    22e4:	4a ef       	ldi	r20, 0xFA	; 250
    22e6:	54 e4       	ldi	r21, 0x44	; 68
    22e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22ec:	dc 01       	movw	r26, r24
    22ee:	cb 01       	movw	r24, r22
    22f0:	8d 8b       	std	Y+21, r24	; 0x15
    22f2:	9e 8b       	std	Y+22, r25	; 0x16
    22f4:	af 8b       	std	Y+23, r26	; 0x17
    22f6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    22f8:	6d 89       	ldd	r22, Y+21	; 0x15
    22fa:	7e 89       	ldd	r23, Y+22	; 0x16
    22fc:	8f 89       	ldd	r24, Y+23	; 0x17
    22fe:	98 8d       	ldd	r25, Y+24	; 0x18
    2300:	20 e0       	ldi	r18, 0x00	; 0
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	40 e8       	ldi	r20, 0x80	; 128
    2306:	5f e3       	ldi	r21, 0x3F	; 63
    2308:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    230c:	88 23       	and	r24, r24
    230e:	2c f4       	brge	.+10     	; 0x231a <LCD_Init+0x4bc>
		__ticks = 1;
    2310:	81 e0       	ldi	r24, 0x01	; 1
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	9c 8b       	std	Y+20, r25	; 0x14
    2316:	8b 8b       	std	Y+19, r24	; 0x13
    2318:	3f c0       	rjmp	.+126    	; 0x2398 <LCD_Init+0x53a>
	else if (__tmp > 65535)
    231a:	6d 89       	ldd	r22, Y+21	; 0x15
    231c:	7e 89       	ldd	r23, Y+22	; 0x16
    231e:	8f 89       	ldd	r24, Y+23	; 0x17
    2320:	98 8d       	ldd	r25, Y+24	; 0x18
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	3f ef       	ldi	r19, 0xFF	; 255
    2326:	4f e7       	ldi	r20, 0x7F	; 127
    2328:	57 e4       	ldi	r21, 0x47	; 71
    232a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    232e:	18 16       	cp	r1, r24
    2330:	4c f5       	brge	.+82     	; 0x2384 <LCD_Init+0x526>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2332:	69 8d       	ldd	r22, Y+25	; 0x19
    2334:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2336:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2338:	9c 8d       	ldd	r25, Y+28	; 0x1c
    233a:	20 e0       	ldi	r18, 0x00	; 0
    233c:	30 e0       	ldi	r19, 0x00	; 0
    233e:	40 e2       	ldi	r20, 0x20	; 32
    2340:	51 e4       	ldi	r21, 0x41	; 65
    2342:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2346:	dc 01       	movw	r26, r24
    2348:	cb 01       	movw	r24, r22
    234a:	bc 01       	movw	r22, r24
    234c:	cd 01       	movw	r24, r26
    234e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2352:	dc 01       	movw	r26, r24
    2354:	cb 01       	movw	r24, r22
    2356:	9c 8b       	std	Y+20, r25	; 0x14
    2358:	8b 8b       	std	Y+19, r24	; 0x13
    235a:	0f c0       	rjmp	.+30     	; 0x237a <LCD_Init+0x51c>
    235c:	88 ec       	ldi	r24, 0xC8	; 200
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	9a 8b       	std	Y+18, r25	; 0x12
    2362:	89 8b       	std	Y+17, r24	; 0x11
    2364:	89 89       	ldd	r24, Y+17	; 0x11
    2366:	9a 89       	ldd	r25, Y+18	; 0x12
    2368:	01 97       	sbiw	r24, 0x01	; 1
    236a:	f1 f7       	brne	.-4      	; 0x2368 <LCD_Init+0x50a>
    236c:	9a 8b       	std	Y+18, r25	; 0x12
    236e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2370:	8b 89       	ldd	r24, Y+19	; 0x13
    2372:	9c 89       	ldd	r25, Y+20	; 0x14
    2374:	01 97       	sbiw	r24, 0x01	; 1
    2376:	9c 8b       	std	Y+20, r25	; 0x14
    2378:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    237a:	8b 89       	ldd	r24, Y+19	; 0x13
    237c:	9c 89       	ldd	r25, Y+20	; 0x14
    237e:	00 97       	sbiw	r24, 0x00	; 0
    2380:	69 f7       	brne	.-38     	; 0x235c <LCD_Init+0x4fe>
    2382:	14 c0       	rjmp	.+40     	; 0x23ac <LCD_Init+0x54e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2384:	6d 89       	ldd	r22, Y+21	; 0x15
    2386:	7e 89       	ldd	r23, Y+22	; 0x16
    2388:	8f 89       	ldd	r24, Y+23	; 0x17
    238a:	98 8d       	ldd	r25, Y+24	; 0x18
    238c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2390:	dc 01       	movw	r26, r24
    2392:	cb 01       	movw	r24, r22
    2394:	9c 8b       	std	Y+20, r25	; 0x14
    2396:	8b 8b       	std	Y+19, r24	; 0x13
    2398:	8b 89       	ldd	r24, Y+19	; 0x13
    239a:	9c 89       	ldd	r25, Y+20	; 0x14
    239c:	98 8b       	std	Y+16, r25	; 0x10
    239e:	8f 87       	std	Y+15, r24	; 0x0f
    23a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    23a2:	98 89       	ldd	r25, Y+16	; 0x10
    23a4:	01 97       	sbiw	r24, 0x01	; 1
    23a6:	f1 f7       	brne	.-4      	; 0x23a4 <LCD_Init+0x546>
    23a8:	98 8b       	std	Y+16, r25	; 0x10
    23aa:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	WriteIns(0x06);
    23ac:	86 e0       	ldi	r24, 0x06	; 6
    23ae:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    23b2:	80 e0       	ldi	r24, 0x00	; 0
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	a0 e8       	ldi	r26, 0x80	; 128
    23b8:	bf e3       	ldi	r27, 0x3F	; 63
    23ba:	8b 87       	std	Y+11, r24	; 0x0b
    23bc:	9c 87       	std	Y+12, r25	; 0x0c
    23be:	ad 87       	std	Y+13, r26	; 0x0d
    23c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    23c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    23c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    23c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    23ca:	20 e0       	ldi	r18, 0x00	; 0
    23cc:	30 e0       	ldi	r19, 0x00	; 0
    23ce:	4a ef       	ldi	r20, 0xFA	; 250
    23d0:	54 e4       	ldi	r21, 0x44	; 68
    23d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23d6:	dc 01       	movw	r26, r24
    23d8:	cb 01       	movw	r24, r22
    23da:	8f 83       	std	Y+7, r24	; 0x07
    23dc:	98 87       	std	Y+8, r25	; 0x08
    23de:	a9 87       	std	Y+9, r26	; 0x09
    23e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    23e2:	6f 81       	ldd	r22, Y+7	; 0x07
    23e4:	78 85       	ldd	r23, Y+8	; 0x08
    23e6:	89 85       	ldd	r24, Y+9	; 0x09
    23e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ea:	20 e0       	ldi	r18, 0x00	; 0
    23ec:	30 e0       	ldi	r19, 0x00	; 0
    23ee:	40 e8       	ldi	r20, 0x80	; 128
    23f0:	5f e3       	ldi	r21, 0x3F	; 63
    23f2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    23f6:	88 23       	and	r24, r24
    23f8:	2c f4       	brge	.+10     	; 0x2404 <LCD_Init+0x5a6>
		__ticks = 1;
    23fa:	81 e0       	ldi	r24, 0x01	; 1
    23fc:	90 e0       	ldi	r25, 0x00	; 0
    23fe:	9e 83       	std	Y+6, r25	; 0x06
    2400:	8d 83       	std	Y+5, r24	; 0x05
    2402:	3f c0       	rjmp	.+126    	; 0x2482 <LCD_Init+0x624>
	else if (__tmp > 65535)
    2404:	6f 81       	ldd	r22, Y+7	; 0x07
    2406:	78 85       	ldd	r23, Y+8	; 0x08
    2408:	89 85       	ldd	r24, Y+9	; 0x09
    240a:	9a 85       	ldd	r25, Y+10	; 0x0a
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	3f ef       	ldi	r19, 0xFF	; 255
    2410:	4f e7       	ldi	r20, 0x7F	; 127
    2412:	57 e4       	ldi	r21, 0x47	; 71
    2414:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2418:	18 16       	cp	r1, r24
    241a:	4c f5       	brge	.+82     	; 0x246e <LCD_Init+0x610>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    241c:	6b 85       	ldd	r22, Y+11	; 0x0b
    241e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2420:	8d 85       	ldd	r24, Y+13	; 0x0d
    2422:	9e 85       	ldd	r25, Y+14	; 0x0e
    2424:	20 e0       	ldi	r18, 0x00	; 0
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	40 e2       	ldi	r20, 0x20	; 32
    242a:	51 e4       	ldi	r21, 0x41	; 65
    242c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2430:	dc 01       	movw	r26, r24
    2432:	cb 01       	movw	r24, r22
    2434:	bc 01       	movw	r22, r24
    2436:	cd 01       	movw	r24, r26
    2438:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    243c:	dc 01       	movw	r26, r24
    243e:	cb 01       	movw	r24, r22
    2440:	9e 83       	std	Y+6, r25	; 0x06
    2442:	8d 83       	std	Y+5, r24	; 0x05
    2444:	0f c0       	rjmp	.+30     	; 0x2464 <LCD_Init+0x606>
    2446:	88 ec       	ldi	r24, 0xC8	; 200
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	9c 83       	std	Y+4, r25	; 0x04
    244c:	8b 83       	std	Y+3, r24	; 0x03
    244e:	8b 81       	ldd	r24, Y+3	; 0x03
    2450:	9c 81       	ldd	r25, Y+4	; 0x04
    2452:	01 97       	sbiw	r24, 0x01	; 1
    2454:	f1 f7       	brne	.-4      	; 0x2452 <LCD_Init+0x5f4>
    2456:	9c 83       	std	Y+4, r25	; 0x04
    2458:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    245a:	8d 81       	ldd	r24, Y+5	; 0x05
    245c:	9e 81       	ldd	r25, Y+6	; 0x06
    245e:	01 97       	sbiw	r24, 0x01	; 1
    2460:	9e 83       	std	Y+6, r25	; 0x06
    2462:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2464:	8d 81       	ldd	r24, Y+5	; 0x05
    2466:	9e 81       	ldd	r25, Y+6	; 0x06
    2468:	00 97       	sbiw	r24, 0x00	; 0
    246a:	69 f7       	brne	.-38     	; 0x2446 <LCD_Init+0x5e8>
    246c:	14 c0       	rjmp	.+40     	; 0x2496 <LCD_Init+0x638>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    246e:	6f 81       	ldd	r22, Y+7	; 0x07
    2470:	78 85       	ldd	r23, Y+8	; 0x08
    2472:	89 85       	ldd	r24, Y+9	; 0x09
    2474:	9a 85       	ldd	r25, Y+10	; 0x0a
    2476:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    247a:	dc 01       	movw	r26, r24
    247c:	cb 01       	movw	r24, r22
    247e:	9e 83       	std	Y+6, r25	; 0x06
    2480:	8d 83       	std	Y+5, r24	; 0x05
    2482:	8d 81       	ldd	r24, Y+5	; 0x05
    2484:	9e 81       	ldd	r25, Y+6	; 0x06
    2486:	9a 83       	std	Y+2, r25	; 0x02
    2488:	89 83       	std	Y+1, r24	; 0x01
    248a:	89 81       	ldd	r24, Y+1	; 0x01
    248c:	9a 81       	ldd	r25, Y+2	; 0x02
    248e:	01 97       	sbiw	r24, 0x01	; 1
    2490:	f1 f7       	brne	.-4      	; 0x248e <LCD_Init+0x630>
    2492:	9a 83       	std	Y+2, r25	; 0x02
    2494:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    2496:	cc 5a       	subi	r28, 0xAC	; 172
    2498:	df 4f       	sbci	r29, 0xFF	; 255
    249a:	0f b6       	in	r0, 0x3f	; 63
    249c:	f8 94       	cli
    249e:	de bf       	out	0x3e, r29	; 62
    24a0:	0f be       	out	0x3f, r0	; 63
    24a2:	cd bf       	out	0x3d, r28	; 61
    24a4:	cf 91       	pop	r28
    24a6:	df 91       	pop	r29
    24a8:	1f 91       	pop	r17
    24aa:	0f 91       	pop	r16
    24ac:	08 95       	ret

000024ae <LCD_Clear>:

#endif

void LCD_Clear(void)
{
    24ae:	df 93       	push	r29
    24b0:	cf 93       	push	r28
    24b2:	cd b7       	in	r28, 0x3d	; 61
    24b4:	de b7       	in	r29, 0x3e	; 62
	WriteIns(0x01);
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
}
    24bc:	cf 91       	pop	r28
    24be:	df 91       	pop	r29
    24c0:	08 95       	ret

000024c2 <LCD_GoTo>:

void LCD_GoTo(u8 line, u8 cell)
{
    24c2:	df 93       	push	r29
    24c4:	cf 93       	push	r28
    24c6:	00 d0       	rcall	.+0      	; 0x24c8 <LCD_GoTo+0x6>
    24c8:	cd b7       	in	r28, 0x3d	; 61
    24ca:	de b7       	in	r29, 0x3e	; 62
    24cc:	89 83       	std	Y+1, r24	; 0x01
    24ce:	6a 83       	std	Y+2, r22	; 0x02
	if(line==0)
    24d0:	89 81       	ldd	r24, Y+1	; 0x01
    24d2:	88 23       	and	r24, r24
    24d4:	29 f4       	brne	.+10     	; 0x24e0 <LCD_GoTo+0x1e>
	{
		WriteIns(0x80+cell);
    24d6:	8a 81       	ldd	r24, Y+2	; 0x02
    24d8:	80 58       	subi	r24, 0x80	; 128
    24da:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    24de:	17 c0       	rjmp	.+46     	; 0x250e <LCD_GoTo+0x4c>
	}
	else if (line==1)
    24e0:	89 81       	ldd	r24, Y+1	; 0x01
    24e2:	81 30       	cpi	r24, 0x01	; 1
    24e4:	29 f4       	brne	.+10     	; 0x24f0 <LCD_GoTo+0x2e>
	{
		WriteIns(0x80+0x40+cell);
    24e6:	8a 81       	ldd	r24, Y+2	; 0x02
    24e8:	80 54       	subi	r24, 0x40	; 64
    24ea:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    24ee:	0f c0       	rjmp	.+30     	; 0x250e <LCD_GoTo+0x4c>
	}
	else if (line==2)
    24f0:	89 81       	ldd	r24, Y+1	; 0x01
    24f2:	82 30       	cpi	r24, 0x02	; 2
    24f4:	29 f4       	brne	.+10     	; 0x2500 <LCD_GoTo+0x3e>
	{
		WriteIns(0x94+cell);
    24f6:	8a 81       	ldd	r24, Y+2	; 0x02
    24f8:	8c 56       	subi	r24, 0x6C	; 108
    24fa:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
    24fe:	07 c0       	rjmp	.+14     	; 0x250e <LCD_GoTo+0x4c>
	}
	else if (line==3)
    2500:	89 81       	ldd	r24, Y+1	; 0x01
    2502:	83 30       	cpi	r24, 0x03	; 3
    2504:	21 f4       	brne	.+8      	; 0x250e <LCD_GoTo+0x4c>
	{
		WriteIns(0xD4+cell);
    2506:	8a 81       	ldd	r24, Y+2	; 0x02
    2508:	8c 52       	subi	r24, 0x2C	; 44
    250a:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
	}
}
    250e:	0f 90       	pop	r0
    2510:	0f 90       	pop	r0
    2512:	cf 91       	pop	r28
    2514:	df 91       	pop	r29
    2516:	08 95       	ret

00002518 <LCD_WriteChar>:


void LCD_WriteChar(u8 ch)
{
    2518:	df 93       	push	r29
    251a:	cf 93       	push	r28
    251c:	0f 92       	push	r0
    251e:	cd b7       	in	r28, 0x3d	; 61
    2520:	de b7       	in	r29, 0x3e	; 62
    2522:	89 83       	std	Y+1, r24	; 0x01
	WriteData(ch);
    2524:	89 81       	ldd	r24, Y+1	; 0x01
    2526:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <WriteData>
}
    252a:	0f 90       	pop	r0
    252c:	cf 91       	pop	r28
    252e:	df 91       	pop	r29
    2530:	08 95       	ret

00002532 <LCD_WriteString>:

void LCD_WriteString(c8* str)
{
    2532:	df 93       	push	r29
    2534:	cf 93       	push	r28
    2536:	00 d0       	rcall	.+0      	; 0x2538 <LCD_WriteString+0x6>
    2538:	0f 92       	push	r0
    253a:	cd b7       	in	r28, 0x3d	; 61
    253c:	de b7       	in	r29, 0x3e	; 62
    253e:	9b 83       	std	Y+3, r25	; 0x03
    2540:	8a 83       	std	Y+2, r24	; 0x02
	u8 i;
	for(i=0; str[i]; i++)
    2542:	19 82       	std	Y+1, r1	; 0x01
    2544:	0e c0       	rjmp	.+28     	; 0x2562 <LCD_WriteString+0x30>
	{
		LCD_WriteChar(str[i]);
    2546:	89 81       	ldd	r24, Y+1	; 0x01
    2548:	28 2f       	mov	r18, r24
    254a:	30 e0       	ldi	r19, 0x00	; 0
    254c:	8a 81       	ldd	r24, Y+2	; 0x02
    254e:	9b 81       	ldd	r25, Y+3	; 0x03
    2550:	fc 01       	movw	r30, r24
    2552:	e2 0f       	add	r30, r18
    2554:	f3 1f       	adc	r31, r19
    2556:	80 81       	ld	r24, Z
    2558:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
}

void LCD_WriteString(c8* str)
{
	u8 i;
	for(i=0; str[i]; i++)
    255c:	89 81       	ldd	r24, Y+1	; 0x01
    255e:	8f 5f       	subi	r24, 0xFF	; 255
    2560:	89 83       	std	Y+1, r24	; 0x01
    2562:	89 81       	ldd	r24, Y+1	; 0x01
    2564:	28 2f       	mov	r18, r24
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	8a 81       	ldd	r24, Y+2	; 0x02
    256a:	9b 81       	ldd	r25, Y+3	; 0x03
    256c:	fc 01       	movw	r30, r24
    256e:	e2 0f       	add	r30, r18
    2570:	f3 1f       	adc	r31, r19
    2572:	80 81       	ld	r24, Z
    2574:	88 23       	and	r24, r24
    2576:	39 f7       	brne	.-50     	; 0x2546 <LCD_WriteString+0x14>
	{
		LCD_WriteChar(str[i]);
	}
}
    2578:	0f 90       	pop	r0
    257a:	0f 90       	pop	r0
    257c:	0f 90       	pop	r0
    257e:	cf 91       	pop	r28
    2580:	df 91       	pop	r29
    2582:	08 95       	ret

00002584 <LCD_WriteNumber>:

void LCD_WriteNumber(s32 num)
{
    2584:	0f 93       	push	r16
    2586:	1f 93       	push	r17
    2588:	df 93       	push	r29
    258a:	cf 93       	push	r28
    258c:	cd b7       	in	r28, 0x3d	; 61
    258e:	de b7       	in	r29, 0x3e	; 62
    2590:	66 97       	sbiw	r28, 0x16	; 22
    2592:	0f b6       	in	r0, 0x3f	; 63
    2594:	f8 94       	cli
    2596:	de bf       	out	0x3e, r29	; 62
    2598:	0f be       	out	0x3f, r0	; 63
    259a:	cd bf       	out	0x3d, r28	; 61
    259c:	6b 8b       	std	Y+19, r22	; 0x13
    259e:	7c 8b       	std	Y+20, r23	; 0x14
    25a0:	8d 8b       	std	Y+21, r24	; 0x15
    25a2:	9e 8b       	std	Y+22, r25	; 0x16
	c8 str[16];
	u8 i=0;
    25a4:	1a 82       	std	Y+2, r1	; 0x02
	s8 j=0;
    25a6:	19 82       	std	Y+1, r1	; 0x01

	if(num==0)
    25a8:	8b 89       	ldd	r24, Y+19	; 0x13
    25aa:	9c 89       	ldd	r25, Y+20	; 0x14
    25ac:	ad 89       	ldd	r26, Y+21	; 0x15
    25ae:	be 89       	ldd	r27, Y+22	; 0x16
    25b0:	00 97       	sbiw	r24, 0x00	; 0
    25b2:	a1 05       	cpc	r26, r1
    25b4:	b1 05       	cpc	r27, r1
    25b6:	21 f4       	brne	.+8      	; 0x25c0 <LCD_WriteNumber+0x3c>
	{
		LCD_WriteChar('0');
    25b8:	80 e3       	ldi	r24, 0x30	; 48
    25ba:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
    25be:	67 c0       	rjmp	.+206    	; 0x268e <LCD_WriteNumber+0x10a>
		return;
	}
	if(num<0)
    25c0:	8b 89       	ldd	r24, Y+19	; 0x13
    25c2:	9c 89       	ldd	r25, Y+20	; 0x14
    25c4:	ad 89       	ldd	r26, Y+21	; 0x15
    25c6:	be 89       	ldd	r27, Y+22	; 0x16
    25c8:	bb 23       	and	r27, r27
    25ca:	0c f0       	brlt	.+2      	; 0x25ce <LCD_WriteNumber+0x4a>
    25cc:	41 c0       	rjmp	.+130    	; 0x2650 <LCD_WriteNumber+0xcc>
	{
		LCD_WriteChar('-');
    25ce:	8d e2       	ldi	r24, 0x2D	; 45
    25d0:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
		num = num * -1;
    25d4:	8b 89       	ldd	r24, Y+19	; 0x13
    25d6:	9c 89       	ldd	r25, Y+20	; 0x14
    25d8:	ad 89       	ldd	r26, Y+21	; 0x15
    25da:	be 89       	ldd	r27, Y+22	; 0x16
    25dc:	b0 95       	com	r27
    25de:	a0 95       	com	r26
    25e0:	90 95       	com	r25
    25e2:	81 95       	neg	r24
    25e4:	9f 4f       	sbci	r25, 0xFF	; 255
    25e6:	af 4f       	sbci	r26, 0xFF	; 255
    25e8:	bf 4f       	sbci	r27, 0xFF	; 255
    25ea:	8b 8b       	std	Y+19, r24	; 0x13
    25ec:	9c 8b       	std	Y+20, r25	; 0x14
    25ee:	ad 8b       	std	Y+21, r26	; 0x15
    25f0:	be 8b       	std	Y+22, r27	; 0x16
    25f2:	2e c0       	rjmp	.+92     	; 0x2650 <LCD_WriteNumber+0xcc>
	}

	while(num)
	{
		str[i++] = num%10 +'0';
    25f4:	8a 81       	ldd	r24, Y+2	; 0x02
    25f6:	08 2f       	mov	r16, r24
    25f8:	10 e0       	ldi	r17, 0x00	; 0
    25fa:	8b 89       	ldd	r24, Y+19	; 0x13
    25fc:	9c 89       	ldd	r25, Y+20	; 0x14
    25fe:	ad 89       	ldd	r26, Y+21	; 0x15
    2600:	be 89       	ldd	r27, Y+22	; 0x16
    2602:	2a e0       	ldi	r18, 0x0A	; 10
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	40 e0       	ldi	r20, 0x00	; 0
    2608:	50 e0       	ldi	r21, 0x00	; 0
    260a:	bc 01       	movw	r22, r24
    260c:	cd 01       	movw	r24, r26
    260e:	0e 94 d0 2e 	call	0x5da0	; 0x5da0 <__divmodsi4>
    2612:	dc 01       	movw	r26, r24
    2614:	cb 01       	movw	r24, r22
    2616:	28 2f       	mov	r18, r24
    2618:	20 5d       	subi	r18, 0xD0	; 208
    261a:	ce 01       	movw	r24, r28
    261c:	03 96       	adiw	r24, 0x03	; 3
    261e:	fc 01       	movw	r30, r24
    2620:	e0 0f       	add	r30, r16
    2622:	f1 1f       	adc	r31, r17
    2624:	20 83       	st	Z, r18
    2626:	8a 81       	ldd	r24, Y+2	; 0x02
    2628:	8f 5f       	subi	r24, 0xFF	; 255
    262a:	8a 83       	std	Y+2, r24	; 0x02
		num = num/10;
    262c:	8b 89       	ldd	r24, Y+19	; 0x13
    262e:	9c 89       	ldd	r25, Y+20	; 0x14
    2630:	ad 89       	ldd	r26, Y+21	; 0x15
    2632:	be 89       	ldd	r27, Y+22	; 0x16
    2634:	2a e0       	ldi	r18, 0x0A	; 10
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	40 e0       	ldi	r20, 0x00	; 0
    263a:	50 e0       	ldi	r21, 0x00	; 0
    263c:	bc 01       	movw	r22, r24
    263e:	cd 01       	movw	r24, r26
    2640:	0e 94 d0 2e 	call	0x5da0	; 0x5da0 <__divmodsi4>
    2644:	da 01       	movw	r26, r20
    2646:	c9 01       	movw	r24, r18
    2648:	8b 8b       	std	Y+19, r24	; 0x13
    264a:	9c 8b       	std	Y+20, r25	; 0x14
    264c:	ad 8b       	std	Y+21, r26	; 0x15
    264e:	be 8b       	std	Y+22, r27	; 0x16
	{
		LCD_WriteChar('-');
		num = num * -1;
	}

	while(num)
    2650:	8b 89       	ldd	r24, Y+19	; 0x13
    2652:	9c 89       	ldd	r25, Y+20	; 0x14
    2654:	ad 89       	ldd	r26, Y+21	; 0x15
    2656:	be 89       	ldd	r27, Y+22	; 0x16
    2658:	00 97       	sbiw	r24, 0x00	; 0
    265a:	a1 05       	cpc	r26, r1
    265c:	b1 05       	cpc	r27, r1
    265e:	51 f6       	brne	.-108    	; 0x25f4 <LCD_WriteNumber+0x70>
	{
		str[i++] = num%10 +'0';
		num = num/10;
	}

	for(j=i-1; j>=0; j--)
    2660:	8a 81       	ldd	r24, Y+2	; 0x02
    2662:	81 50       	subi	r24, 0x01	; 1
    2664:	89 83       	std	Y+1, r24	; 0x01
    2666:	10 c0       	rjmp	.+32     	; 0x2688 <LCD_WriteNumber+0x104>
	{
		LCD_WriteChar(str[j]);
    2668:	89 81       	ldd	r24, Y+1	; 0x01
    266a:	28 2f       	mov	r18, r24
    266c:	33 27       	eor	r19, r19
    266e:	27 fd       	sbrc	r18, 7
    2670:	30 95       	com	r19
    2672:	ce 01       	movw	r24, r28
    2674:	03 96       	adiw	r24, 0x03	; 3
    2676:	fc 01       	movw	r30, r24
    2678:	e2 0f       	add	r30, r18
    267a:	f3 1f       	adc	r31, r19
    267c:	80 81       	ld	r24, Z
    267e:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	{
		str[i++] = num%10 +'0';
		num = num/10;
	}

	for(j=i-1; j>=0; j--)
    2682:	89 81       	ldd	r24, Y+1	; 0x01
    2684:	81 50       	subi	r24, 0x01	; 1
    2686:	89 83       	std	Y+1, r24	; 0x01
    2688:	89 81       	ldd	r24, Y+1	; 0x01
    268a:	88 23       	and	r24, r24
    268c:	6c f7       	brge	.-38     	; 0x2668 <LCD_WriteNumber+0xe4>
	{
		LCD_WriteChar(str[j]);
	}


}
    268e:	66 96       	adiw	r28, 0x16	; 22
    2690:	0f b6       	in	r0, 0x3f	; 63
    2692:	f8 94       	cli
    2694:	de bf       	out	0x3e, r29	; 62
    2696:	0f be       	out	0x3f, r0	; 63
    2698:	cd bf       	out	0x3d, r28	; 61
    269a:	cf 91       	pop	r28
    269c:	df 91       	pop	r29
    269e:	1f 91       	pop	r17
    26a0:	0f 91       	pop	r16
    26a2:	08 95       	ret

000026a4 <LCD_Write_4D>:

void LCD_Write_4D(u16 num) //5214
{
    26a4:	df 93       	push	r29
    26a6:	cf 93       	push	r28
    26a8:	00 d0       	rcall	.+0      	; 0x26aa <LCD_Write_4D+0x6>
    26aa:	cd b7       	in	r28, 0x3d	; 61
    26ac:	de b7       	in	r29, 0x3e	; 62
    26ae:	9a 83       	std	Y+2, r25	; 0x02
    26b0:	89 83       	std	Y+1, r24	; 0x01
	LCD_WriteChar(((num%10000)/1000)+'0');
    26b2:	89 81       	ldd	r24, Y+1	; 0x01
    26b4:	9a 81       	ldd	r25, Y+2	; 0x02
    26b6:	20 e1       	ldi	r18, 0x10	; 16
    26b8:	37 e2       	ldi	r19, 0x27	; 39
    26ba:	b9 01       	movw	r22, r18
    26bc:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    26c0:	28 ee       	ldi	r18, 0xE8	; 232
    26c2:	33 e0       	ldi	r19, 0x03	; 3
    26c4:	b9 01       	movw	r22, r18
    26c6:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    26ca:	cb 01       	movw	r24, r22
    26cc:	80 5d       	subi	r24, 0xD0	; 208
    26ce:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	LCD_WriteChar(((num%1000)/100)+'0');
    26d2:	89 81       	ldd	r24, Y+1	; 0x01
    26d4:	9a 81       	ldd	r25, Y+2	; 0x02
    26d6:	28 ee       	ldi	r18, 0xE8	; 232
    26d8:	33 e0       	ldi	r19, 0x03	; 3
    26da:	b9 01       	movw	r22, r18
    26dc:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    26e0:	24 e6       	ldi	r18, 0x64	; 100
    26e2:	30 e0       	ldi	r19, 0x00	; 0
    26e4:	b9 01       	movw	r22, r18
    26e6:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    26ea:	cb 01       	movw	r24, r22
    26ec:	80 5d       	subi	r24, 0xD0	; 208
    26ee:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	LCD_WriteChar(((num%100)/10)+'0');
    26f2:	89 81       	ldd	r24, Y+1	; 0x01
    26f4:	9a 81       	ldd	r25, Y+2	; 0x02
    26f6:	24 e6       	ldi	r18, 0x64	; 100
    26f8:	30 e0       	ldi	r19, 0x00	; 0
    26fa:	b9 01       	movw	r22, r18
    26fc:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    2700:	2a e0       	ldi	r18, 0x0A	; 10
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	b9 01       	movw	r22, r18
    2706:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    270a:	cb 01       	movw	r24, r22
    270c:	80 5d       	subi	r24, 0xD0	; 208
    270e:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	LCD_WriteChar(((num%10)/1)+'0');
    2712:	89 81       	ldd	r24, Y+1	; 0x01
    2714:	9a 81       	ldd	r25, Y+2	; 0x02
    2716:	2a e0       	ldi	r18, 0x0A	; 10
    2718:	30 e0       	ldi	r19, 0x00	; 0
    271a:	b9 01       	movw	r22, r18
    271c:	0e 94 bc 2e 	call	0x5d78	; 0x5d78 <__udivmodhi4>
    2720:	80 5d       	subi	r24, 0xD0	; 208
    2722:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
}
    2726:	0f 90       	pop	r0
    2728:	0f 90       	pop	r0
    272a:	cf 91       	pop	r28
    272c:	df 91       	pop	r29
    272e:	08 95       	ret

00002730 <LCD_WriteBinary>:

void LCD_WriteBinary(u8 num)
{
    2730:	df 93       	push	r29
    2732:	cf 93       	push	r28
    2734:	00 d0       	rcall	.+0      	; 0x2736 <LCD_WriteBinary+0x6>
    2736:	cd b7       	in	r28, 0x3d	; 61
    2738:	de b7       	in	r29, 0x3e	; 62
    273a:	8a 83       	std	Y+2, r24	; 0x02
	s8 i;
	for(i=7; i>=0; i--)
    273c:	87 e0       	ldi	r24, 0x07	; 7
    273e:	89 83       	std	Y+1, r24	; 0x01
    2740:	1c c0       	rjmp	.+56     	; 0x277a <LCD_WriteBinary+0x4a>
	{
		if(((num>>i)&1)==1)
    2742:	8a 81       	ldd	r24, Y+2	; 0x02
    2744:	28 2f       	mov	r18, r24
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	89 81       	ldd	r24, Y+1	; 0x01
    274a:	99 27       	eor	r25, r25
    274c:	87 fd       	sbrc	r24, 7
    274e:	90 95       	com	r25
    2750:	a9 01       	movw	r20, r18
    2752:	02 c0       	rjmp	.+4      	; 0x2758 <LCD_WriteBinary+0x28>
    2754:	55 95       	asr	r21
    2756:	47 95       	ror	r20
    2758:	8a 95       	dec	r24
    275a:	e2 f7       	brpl	.-8      	; 0x2754 <LCD_WriteBinary+0x24>
    275c:	ca 01       	movw	r24, r20
    275e:	81 70       	andi	r24, 0x01	; 1
    2760:	90 70       	andi	r25, 0x00	; 0
    2762:	88 23       	and	r24, r24
    2764:	21 f0       	breq	.+8      	; 0x276e <LCD_WriteBinary+0x3e>
		{
			LCD_WriteChar('1');
    2766:	81 e3       	ldi	r24, 0x31	; 49
    2768:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
    276c:	03 c0       	rjmp	.+6      	; 0x2774 <LCD_WriteBinary+0x44>
		}
		else
		{
			LCD_WriteChar('0');
    276e:	80 e3       	ldi	r24, 0x30	; 48
    2770:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
}

void LCD_WriteBinary(u8 num)
{
	s8 i;
	for(i=7; i>=0; i--)
    2774:	89 81       	ldd	r24, Y+1	; 0x01
    2776:	81 50       	subi	r24, 0x01	; 1
    2778:	89 83       	std	Y+1, r24	; 0x01
    277a:	89 81       	ldd	r24, Y+1	; 0x01
    277c:	88 23       	and	r24, r24
    277e:	0c f7       	brge	.-62     	; 0x2742 <LCD_WriteBinary+0x12>
		{
			LCD_WriteChar('0');
		}
		//LCD_WriteChar(READ_BIT(num,i)+'0');
	}
}
    2780:	0f 90       	pop	r0
    2782:	0f 90       	pop	r0
    2784:	cf 91       	pop	r28
    2786:	df 91       	pop	r29
    2788:	08 95       	ret

0000278a <LCD_WriteHex>:

void LCD_WriteHex(u8 num)
{
    278a:	df 93       	push	r29
    278c:	cf 93       	push	r28
    278e:	00 d0       	rcall	.+0      	; 0x2790 <LCD_WriteHex+0x6>
    2790:	0f 92       	push	r0
    2792:	cd b7       	in	r28, 0x3d	; 61
    2794:	de b7       	in	r29, 0x3e	; 62
    2796:	8b 83       	std	Y+3, r24	; 0x03
	u8 d0,d1;
	d0=num&0x0F;
    2798:	8b 81       	ldd	r24, Y+3	; 0x03
    279a:	8f 70       	andi	r24, 0x0F	; 15
    279c:	8a 83       	std	Y+2, r24	; 0x02
	d1=(num>>4)&0x0F;
    279e:	8b 81       	ldd	r24, Y+3	; 0x03
    27a0:	82 95       	swap	r24
    27a2:	8f 70       	andi	r24, 0x0F	; 15
    27a4:	89 83       	std	Y+1, r24	; 0x01

	if(d1<10)
    27a6:	89 81       	ldd	r24, Y+1	; 0x01
    27a8:	8a 30       	cpi	r24, 0x0A	; 10
    27aa:	28 f4       	brcc	.+10     	; 0x27b6 <LCD_WriteHex+0x2c>
	{
		LCD_WriteChar(d1+'0');
    27ac:	89 81       	ldd	r24, Y+1	; 0x01
    27ae:	80 5d       	subi	r24, 0xD0	; 208
    27b0:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
    27b4:	04 c0       	rjmp	.+8      	; 0x27be <LCD_WriteHex+0x34>
	}
	else
	{
		LCD_WriteChar(d1-10+'A');
    27b6:	89 81       	ldd	r24, Y+1	; 0x01
    27b8:	89 5c       	subi	r24, 0xC9	; 201
    27ba:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	}

	if(d0<10)
    27be:	8a 81       	ldd	r24, Y+2	; 0x02
    27c0:	8a 30       	cpi	r24, 0x0A	; 10
    27c2:	28 f4       	brcc	.+10     	; 0x27ce <LCD_WriteHex+0x44>
	{
		LCD_WriteChar(d0+'0');
    27c4:	8a 81       	ldd	r24, Y+2	; 0x02
    27c6:	80 5d       	subi	r24, 0xD0	; 208
    27c8:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
    27cc:	04 c0       	rjmp	.+8      	; 0x27d6 <LCD_WriteHex+0x4c>
	}
	else
	{
		LCD_WriteChar(d0-10+'A');
    27ce:	8a 81       	ldd	r24, Y+2	; 0x02
    27d0:	89 5c       	subi	r24, 0xC9	; 201
    27d2:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
	}
}
    27d6:	0f 90       	pop	r0
    27d8:	0f 90       	pop	r0
    27da:	0f 90       	pop	r0
    27dc:	cf 91       	pop	r28
    27de:	df 91       	pop	r29
    27e0:	08 95       	ret

000027e2 <LCD_WriteStringGoTo>:

void LCD_WriteStringGoTo(u8 line, u8 cell, c8* str)
{
    27e2:	df 93       	push	r29
    27e4:	cf 93       	push	r28
    27e6:	00 d0       	rcall	.+0      	; 0x27e8 <LCD_WriteStringGoTo+0x6>
    27e8:	00 d0       	rcall	.+0      	; 0x27ea <LCD_WriteStringGoTo+0x8>
    27ea:	cd b7       	in	r28, 0x3d	; 61
    27ec:	de b7       	in	r29, 0x3e	; 62
    27ee:	89 83       	std	Y+1, r24	; 0x01
    27f0:	6a 83       	std	Y+2, r22	; 0x02
    27f2:	5c 83       	std	Y+4, r21	; 0x04
    27f4:	4b 83       	std	Y+3, r20	; 0x03
	LCD_GoTo(line,cell);
    27f6:	89 81       	ldd	r24, Y+1	; 0x01
    27f8:	6a 81       	ldd	r22, Y+2	; 0x02
    27fa:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
	LCD_WriteString(str);
    27fe:	8b 81       	ldd	r24, Y+3	; 0x03
    2800:	9c 81       	ldd	r25, Y+4	; 0x04
    2802:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
}
    2806:	0f 90       	pop	r0
    2808:	0f 90       	pop	r0
    280a:	0f 90       	pop	r0
    280c:	0f 90       	pop	r0
    280e:	cf 91       	pop	r28
    2810:	df 91       	pop	r29
    2812:	08 95       	ret

00002814 <LCD_ClearPosition>:

void LCD_ClearPosition(u8 line, u8 cell, u8 NoOfCells)
{
    2814:	df 93       	push	r29
    2816:	cf 93       	push	r28
    2818:	00 d0       	rcall	.+0      	; 0x281a <LCD_ClearPosition+0x6>
    281a:	00 d0       	rcall	.+0      	; 0x281c <LCD_ClearPosition+0x8>
    281c:	cd b7       	in	r28, 0x3d	; 61
    281e:	de b7       	in	r29, 0x3e	; 62
    2820:	8a 83       	std	Y+2, r24	; 0x02
    2822:	6b 83       	std	Y+3, r22	; 0x03
    2824:	4c 83       	std	Y+4, r20	; 0x04
	u8 i;
	LCD_GoTo(line,cell);
    2826:	8a 81       	ldd	r24, Y+2	; 0x02
    2828:	6b 81       	ldd	r22, Y+3	; 0x03
    282a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
	for(i=0; i<NoOfCells; i++)
    282e:	19 82       	std	Y+1, r1	; 0x01
    2830:	06 c0       	rjmp	.+12     	; 0x283e <LCD_ClearPosition+0x2a>
	{
		LCD_WriteChar(' ');
    2832:	80 e2       	ldi	r24, 0x20	; 32
    2834:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>

void LCD_ClearPosition(u8 line, u8 cell, u8 NoOfCells)
{
	u8 i;
	LCD_GoTo(line,cell);
	for(i=0; i<NoOfCells; i++)
    2838:	89 81       	ldd	r24, Y+1	; 0x01
    283a:	8f 5f       	subi	r24, 0xFF	; 255
    283c:	89 83       	std	Y+1, r24	; 0x01
    283e:	99 81       	ldd	r25, Y+1	; 0x01
    2840:	8c 81       	ldd	r24, Y+4	; 0x04
    2842:	98 17       	cp	r25, r24
    2844:	b0 f3       	brcs	.-20     	; 0x2832 <LCD_ClearPosition+0x1e>
	{
		LCD_WriteChar(' ');
	}
}
    2846:	0f 90       	pop	r0
    2848:	0f 90       	pop	r0
    284a:	0f 90       	pop	r0
    284c:	0f 90       	pop	r0
    284e:	cf 91       	pop	r28
    2850:	df 91       	pop	r29
    2852:	08 95       	ret

00002854 <LCD_CustomChar>:


void LCD_CustomChar(u8 address, u8* pattern)
{
    2854:	df 93       	push	r29
    2856:	cf 93       	push	r28
    2858:	00 d0       	rcall	.+0      	; 0x285a <LCD_CustomChar+0x6>
    285a:	00 d0       	rcall	.+0      	; 0x285c <LCD_CustomChar+0x8>
    285c:	cd b7       	in	r28, 0x3d	; 61
    285e:	de b7       	in	r29, 0x3e	; 62
    2860:	8a 83       	std	Y+2, r24	; 0x02
    2862:	7c 83       	std	Y+4, r23	; 0x04
    2864:	6b 83       	std	Y+3, r22	; 0x03
	u8 i;

	WriteIns(0x40+address*8);
    2866:	8a 81       	ldd	r24, Y+2	; 0x02
    2868:	88 2f       	mov	r24, r24
    286a:	90 e0       	ldi	r25, 0x00	; 0
    286c:	08 96       	adiw	r24, 0x08	; 8
    286e:	88 0f       	add	r24, r24
    2870:	99 1f       	adc	r25, r25
    2872:	88 0f       	add	r24, r24
    2874:	99 1f       	adc	r25, r25
    2876:	88 0f       	add	r24, r24
    2878:	99 1f       	adc	r25, r25
    287a:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
	for(i=0; i<8; i++)
    287e:	19 82       	std	Y+1, r1	; 0x01
    2880:	0e c0       	rjmp	.+28     	; 0x289e <LCD_CustomChar+0x4a>
	{
		LCD_WriteChar(pattern[i]);
    2882:	89 81       	ldd	r24, Y+1	; 0x01
    2884:	28 2f       	mov	r18, r24
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	8b 81       	ldd	r24, Y+3	; 0x03
    288a:	9c 81       	ldd	r25, Y+4	; 0x04
    288c:	fc 01       	movw	r30, r24
    288e:	e2 0f       	add	r30, r18
    2890:	f3 1f       	adc	r31, r19
    2892:	80 81       	ld	r24, Z
    2894:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>
void LCD_CustomChar(u8 address, u8* pattern)
{
	u8 i;

	WriteIns(0x40+address*8);
	for(i=0; i<8; i++)
    2898:	89 81       	ldd	r24, Y+1	; 0x01
    289a:	8f 5f       	subi	r24, 0xFF	; 255
    289c:	89 83       	std	Y+1, r24	; 0x01
    289e:	89 81       	ldd	r24, Y+1	; 0x01
    28a0:	88 30       	cpi	r24, 0x08	; 8
    28a2:	78 f3       	brcs	.-34     	; 0x2882 <LCD_CustomChar+0x2e>
	{
		LCD_WriteChar(pattern[i]);
	}
	WriteIns(0x80);
    28a4:	80 e8       	ldi	r24, 0x80	; 128
    28a6:	0e 94 bd 0a 	call	0x157a	; 0x157a <WriteIns>
}
    28aa:	0f 90       	pop	r0
    28ac:	0f 90       	pop	r0
    28ae:	0f 90       	pop	r0
    28b0:	0f 90       	pop	r0
    28b2:	cf 91       	pop	r28
    28b4:	df 91       	pop	r29
    28b6:	08 95       	ret

000028b8 <main>:
#include"LCD_Interface.h"
#include"story_interface.h"


int main(void)
{
    28b8:	df 93       	push	r29
    28ba:	cf 93       	push	r28
    28bc:	cd b7       	in	r28, 0x3d	; 61
    28be:	de b7       	in	r29, 0x3e	; 62
	Story_Init();
    28c0:	0e 94 65 14 	call	0x28ca	; 0x28ca <Story_Init>

	while(1)
	{
		Story_Run();
    28c4:	0e 94 76 14 	call	0x28ec	; 0x28ec <Story_Run>
    28c8:	fd cf       	rjmp	.-6      	; 0x28c4 <main+0xc>

000028ca <Story_Init>:

u8 Khaled[] = {0x04,0x04,0x0E,0x15,0x04,0x0A,0x11,0x00};

/*************Function definitions**************/
void Story_Init(void)
{
    28ca:	df 93       	push	r29
    28cc:	cf 93       	push	r28
    28ce:	cd b7       	in	r28, 0x3d	; 61
    28d0:	de b7       	in	r29, 0x3e	; 62
	DIO_Init();
    28d2:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_Init>
	LCD_Init();
    28d6:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <LCD_Init>
	LCD_CustomChar(0,Khaled);
    28da:	29 e9       	ldi	r18, 0x99	; 153
    28dc:	32 e0       	ldi	r19, 0x02	; 2
    28de:	80 e0       	ldi	r24, 0x00	; 0
    28e0:	b9 01       	movw	r22, r18
    28e2:	0e 94 2a 14 	call	0x2854	; 0x2854 <LCD_CustomChar>
}
    28e6:	cf 91       	pop	r28
    28e8:	df 91       	pop	r29
    28ea:	08 95       	ret

000028ec <Story_Run>:
void Story_Run(void)
{
    28ec:	df 93       	push	r29
    28ee:	cf 93       	push	r28
    28f0:	cd b7       	in	r28, 0x3d	; 61
    28f2:	de b7       	in	r29, 0x3e	; 62
	if(flagstory==0)
    28f4:	80 91 c2 02 	lds	r24, 0x02C2
    28f8:	88 23       	and	r24, r24
    28fa:	19 f4       	brne	.+6      	; 0x2902 <Story_Run+0x16>
	{
		Story_Welcome();
    28fc:	0e 94 8a 14 	call	0x2914	; 0x2914 <Story_Welcome>
    2900:	06 c0       	rjmp	.+12     	; 0x290e <Story_Run+0x22>
	}
	else if(flagstory==1)
    2902:	80 91 c2 02 	lds	r24, 0x02C2
    2906:	81 30       	cpi	r24, 0x01	; 1
    2908:	11 f4       	brne	.+4      	; 0x290e <Story_Run+0x22>
	{
		MyStory();
    290a:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <MyStory>
	}
}
    290e:	cf 91       	pop	r28
    2910:	df 91       	pop	r29
    2912:	08 95       	ret

00002914 <Story_Welcome>:


void Story_Welcome(void)
{
    2914:	0f 93       	push	r16
    2916:	1f 93       	push	r17
    2918:	df 93       	push	r29
    291a:	cf 93       	push	r28
    291c:	cd b7       	in	r28, 0x3d	; 61
    291e:	de b7       	in	r29, 0x3e	; 62
    2920:	c6 54       	subi	r28, 0x46	; 70
    2922:	d0 40       	sbci	r29, 0x00	; 0
    2924:	0f b6       	in	r0, 0x3f	; 63
    2926:	f8 94       	cli
    2928:	de bf       	out	0x3e, r29	; 62
    292a:	0f be       	out	0x3f, r0	; 63
    292c:	cd bf       	out	0x3d, r28	; 61
	LCD_GoTo(1,3);
    292e:	81 e0       	ldi	r24, 0x01	; 1
    2930:	63 e0       	ldi	r22, 0x03	; 3
    2932:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
	LCD_WriteString("    Hello!      ");
    2936:	80 e6       	ldi	r24, 0x60	; 96
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    293e:	fe 01       	movw	r30, r28
    2940:	ed 5b       	subi	r30, 0xBD	; 189
    2942:	ff 4f       	sbci	r31, 0xFF	; 255
    2944:	80 e0       	ldi	r24, 0x00	; 0
    2946:	90 e0       	ldi	r25, 0x00	; 0
    2948:	aa e7       	ldi	r26, 0x7A	; 122
    294a:	b4 e4       	ldi	r27, 0x44	; 68
    294c:	80 83       	st	Z, r24
    294e:	91 83       	std	Z+1, r25	; 0x01
    2950:	a2 83       	std	Z+2, r26	; 0x02
    2952:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2954:	8e 01       	movw	r16, r28
    2956:	01 5c       	subi	r16, 0xC1	; 193
    2958:	1f 4f       	sbci	r17, 0xFF	; 255
    295a:	fe 01       	movw	r30, r28
    295c:	ed 5b       	subi	r30, 0xBD	; 189
    295e:	ff 4f       	sbci	r31, 0xFF	; 255
    2960:	60 81       	ld	r22, Z
    2962:	71 81       	ldd	r23, Z+1	; 0x01
    2964:	82 81       	ldd	r24, Z+2	; 0x02
    2966:	93 81       	ldd	r25, Z+3	; 0x03
    2968:	20 e0       	ldi	r18, 0x00	; 0
    296a:	30 e0       	ldi	r19, 0x00	; 0
    296c:	4a ef       	ldi	r20, 0xFA	; 250
    296e:	54 e4       	ldi	r21, 0x44	; 68
    2970:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2974:	dc 01       	movw	r26, r24
    2976:	cb 01       	movw	r24, r22
    2978:	f8 01       	movw	r30, r16
    297a:	80 83       	st	Z, r24
    297c:	91 83       	std	Z+1, r25	; 0x01
    297e:	a2 83       	std	Z+2, r26	; 0x02
    2980:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2982:	fe 01       	movw	r30, r28
    2984:	ff 96       	adiw	r30, 0x3f	; 63
    2986:	60 81       	ld	r22, Z
    2988:	71 81       	ldd	r23, Z+1	; 0x01
    298a:	82 81       	ldd	r24, Z+2	; 0x02
    298c:	93 81       	ldd	r25, Z+3	; 0x03
    298e:	20 e0       	ldi	r18, 0x00	; 0
    2990:	30 e0       	ldi	r19, 0x00	; 0
    2992:	40 e8       	ldi	r20, 0x80	; 128
    2994:	5f e3       	ldi	r21, 0x3F	; 63
    2996:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    299a:	88 23       	and	r24, r24
    299c:	2c f4       	brge	.+10     	; 0x29a8 <Story_Welcome+0x94>
		__ticks = 1;
    299e:	81 e0       	ldi	r24, 0x01	; 1
    29a0:	90 e0       	ldi	r25, 0x00	; 0
    29a2:	9e af       	std	Y+62, r25	; 0x3e
    29a4:	8d af       	std	Y+61, r24	; 0x3d
    29a6:	46 c0       	rjmp	.+140    	; 0x2a34 <Story_Welcome+0x120>
	else if (__tmp > 65535)
    29a8:	fe 01       	movw	r30, r28
    29aa:	ff 96       	adiw	r30, 0x3f	; 63
    29ac:	60 81       	ld	r22, Z
    29ae:	71 81       	ldd	r23, Z+1	; 0x01
    29b0:	82 81       	ldd	r24, Z+2	; 0x02
    29b2:	93 81       	ldd	r25, Z+3	; 0x03
    29b4:	20 e0       	ldi	r18, 0x00	; 0
    29b6:	3f ef       	ldi	r19, 0xFF	; 255
    29b8:	4f e7       	ldi	r20, 0x7F	; 127
    29ba:	57 e4       	ldi	r21, 0x47	; 71
    29bc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    29c0:	18 16       	cp	r1, r24
    29c2:	64 f5       	brge	.+88     	; 0x2a1c <Story_Welcome+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29c4:	fe 01       	movw	r30, r28
    29c6:	ed 5b       	subi	r30, 0xBD	; 189
    29c8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ca:	60 81       	ld	r22, Z
    29cc:	71 81       	ldd	r23, Z+1	; 0x01
    29ce:	82 81       	ldd	r24, Z+2	; 0x02
    29d0:	93 81       	ldd	r25, Z+3	; 0x03
    29d2:	20 e0       	ldi	r18, 0x00	; 0
    29d4:	30 e0       	ldi	r19, 0x00	; 0
    29d6:	40 e2       	ldi	r20, 0x20	; 32
    29d8:	51 e4       	ldi	r21, 0x41	; 65
    29da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29de:	dc 01       	movw	r26, r24
    29e0:	cb 01       	movw	r24, r22
    29e2:	bc 01       	movw	r22, r24
    29e4:	cd 01       	movw	r24, r26
    29e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29ea:	dc 01       	movw	r26, r24
    29ec:	cb 01       	movw	r24, r22
    29ee:	9e af       	std	Y+62, r25	; 0x3e
    29f0:	8d af       	std	Y+61, r24	; 0x3d
    29f2:	0f c0       	rjmp	.+30     	; 0x2a12 <Story_Welcome+0xfe>
    29f4:	88 ec       	ldi	r24, 0xC8	; 200
    29f6:	90 e0       	ldi	r25, 0x00	; 0
    29f8:	9c af       	std	Y+60, r25	; 0x3c
    29fa:	8b af       	std	Y+59, r24	; 0x3b
    29fc:	8b ad       	ldd	r24, Y+59	; 0x3b
    29fe:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a00:	01 97       	sbiw	r24, 0x01	; 1
    2a02:	f1 f7       	brne	.-4      	; 0x2a00 <Story_Welcome+0xec>
    2a04:	9c af       	std	Y+60, r25	; 0x3c
    2a06:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a08:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a0a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a0c:	01 97       	sbiw	r24, 0x01	; 1
    2a0e:	9e af       	std	Y+62, r25	; 0x3e
    2a10:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a12:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a14:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a16:	00 97       	sbiw	r24, 0x00	; 0
    2a18:	69 f7       	brne	.-38     	; 0x29f4 <Story_Welcome+0xe0>
    2a1a:	16 c0       	rjmp	.+44     	; 0x2a48 <Story_Welcome+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a1c:	fe 01       	movw	r30, r28
    2a1e:	ff 96       	adiw	r30, 0x3f	; 63
    2a20:	60 81       	ld	r22, Z
    2a22:	71 81       	ldd	r23, Z+1	; 0x01
    2a24:	82 81       	ldd	r24, Z+2	; 0x02
    2a26:	93 81       	ldd	r25, Z+3	; 0x03
    2a28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a2c:	dc 01       	movw	r26, r24
    2a2e:	cb 01       	movw	r24, r22
    2a30:	9e af       	std	Y+62, r25	; 0x3e
    2a32:	8d af       	std	Y+61, r24	; 0x3d
    2a34:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a36:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a38:	9a af       	std	Y+58, r25	; 0x3a
    2a3a:	89 af       	std	Y+57, r24	; 0x39
    2a3c:	89 ad       	ldd	r24, Y+57	; 0x39
    2a3e:	9a ad       	ldd	r25, Y+58	; 0x3a
    2a40:	01 97       	sbiw	r24, 0x01	; 1
    2a42:	f1 f7       	brne	.-4      	; 0x2a40 <Story_Welcome+0x12c>
    2a44:	9a af       	std	Y+58, r25	; 0x3a
    2a46:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1000);
	LCD_Clear();
    2a48:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	/****Printing khaled****/
	LCD_GoTo(1, 19);
    2a4c:	81 e0       	ldi	r24, 0x01	; 1
    2a4e:	63 e1       	ldi	r22, 0x13	; 19
    2a50:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
	LCD_WriteChar(0);
    2a54:	80 e0       	ldi	r24, 0x00	; 0
    2a56:	0e 94 8c 12 	call	0x2518	; 0x2518 <LCD_WriteChar>

	LCD_GoTo(1,1);
    2a5a:	81 e0       	ldi	r24, 0x01	; 1
    2a5c:	61 e0       	ldi	r22, 0x01	; 1
    2a5e:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    2a62:	80 e0       	ldi	r24, 0x00	; 0
    2a64:	90 e0       	ldi	r25, 0x00	; 0
    2a66:	aa ef       	ldi	r26, 0xFA	; 250
    2a68:	b3 e4       	ldi	r27, 0x43	; 67
    2a6a:	8d ab       	std	Y+53, r24	; 0x35
    2a6c:	9e ab       	std	Y+54, r25	; 0x36
    2a6e:	af ab       	std	Y+55, r26	; 0x37
    2a70:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a72:	6d a9       	ldd	r22, Y+53	; 0x35
    2a74:	7e a9       	ldd	r23, Y+54	; 0x36
    2a76:	8f a9       	ldd	r24, Y+55	; 0x37
    2a78:	98 ad       	ldd	r25, Y+56	; 0x38
    2a7a:	20 e0       	ldi	r18, 0x00	; 0
    2a7c:	30 e0       	ldi	r19, 0x00	; 0
    2a7e:	4a ef       	ldi	r20, 0xFA	; 250
    2a80:	54 e4       	ldi	r21, 0x44	; 68
    2a82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a86:	dc 01       	movw	r26, r24
    2a88:	cb 01       	movw	r24, r22
    2a8a:	89 ab       	std	Y+49, r24	; 0x31
    2a8c:	9a ab       	std	Y+50, r25	; 0x32
    2a8e:	ab ab       	std	Y+51, r26	; 0x33
    2a90:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2a92:	69 a9       	ldd	r22, Y+49	; 0x31
    2a94:	7a a9       	ldd	r23, Y+50	; 0x32
    2a96:	8b a9       	ldd	r24, Y+51	; 0x33
    2a98:	9c a9       	ldd	r25, Y+52	; 0x34
    2a9a:	20 e0       	ldi	r18, 0x00	; 0
    2a9c:	30 e0       	ldi	r19, 0x00	; 0
    2a9e:	40 e8       	ldi	r20, 0x80	; 128
    2aa0:	5f e3       	ldi	r21, 0x3F	; 63
    2aa2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2aa6:	88 23       	and	r24, r24
    2aa8:	2c f4       	brge	.+10     	; 0x2ab4 <Story_Welcome+0x1a0>
		__ticks = 1;
    2aaa:	81 e0       	ldi	r24, 0x01	; 1
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	98 ab       	std	Y+48, r25	; 0x30
    2ab0:	8f a7       	std	Y+47, r24	; 0x2f
    2ab2:	3f c0       	rjmp	.+126    	; 0x2b32 <Story_Welcome+0x21e>
	else if (__tmp > 65535)
    2ab4:	69 a9       	ldd	r22, Y+49	; 0x31
    2ab6:	7a a9       	ldd	r23, Y+50	; 0x32
    2ab8:	8b a9       	ldd	r24, Y+51	; 0x33
    2aba:	9c a9       	ldd	r25, Y+52	; 0x34
    2abc:	20 e0       	ldi	r18, 0x00	; 0
    2abe:	3f ef       	ldi	r19, 0xFF	; 255
    2ac0:	4f e7       	ldi	r20, 0x7F	; 127
    2ac2:	57 e4       	ldi	r21, 0x47	; 71
    2ac4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2ac8:	18 16       	cp	r1, r24
    2aca:	4c f5       	brge	.+82     	; 0x2b1e <Story_Welcome+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2acc:	6d a9       	ldd	r22, Y+53	; 0x35
    2ace:	7e a9       	ldd	r23, Y+54	; 0x36
    2ad0:	8f a9       	ldd	r24, Y+55	; 0x37
    2ad2:	98 ad       	ldd	r25, Y+56	; 0x38
    2ad4:	20 e0       	ldi	r18, 0x00	; 0
    2ad6:	30 e0       	ldi	r19, 0x00	; 0
    2ad8:	40 e2       	ldi	r20, 0x20	; 32
    2ada:	51 e4       	ldi	r21, 0x41	; 65
    2adc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ae0:	dc 01       	movw	r26, r24
    2ae2:	cb 01       	movw	r24, r22
    2ae4:	bc 01       	movw	r22, r24
    2ae6:	cd 01       	movw	r24, r26
    2ae8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2aec:	dc 01       	movw	r26, r24
    2aee:	cb 01       	movw	r24, r22
    2af0:	98 ab       	std	Y+48, r25	; 0x30
    2af2:	8f a7       	std	Y+47, r24	; 0x2f
    2af4:	0f c0       	rjmp	.+30     	; 0x2b14 <Story_Welcome+0x200>
    2af6:	88 ec       	ldi	r24, 0xC8	; 200
    2af8:	90 e0       	ldi	r25, 0x00	; 0
    2afa:	9e a7       	std	Y+46, r25	; 0x2e
    2afc:	8d a7       	std	Y+45, r24	; 0x2d
    2afe:	8d a5       	ldd	r24, Y+45	; 0x2d
    2b00:	9e a5       	ldd	r25, Y+46	; 0x2e
    2b02:	01 97       	sbiw	r24, 0x01	; 1
    2b04:	f1 f7       	brne	.-4      	; 0x2b02 <Story_Welcome+0x1ee>
    2b06:	9e a7       	std	Y+46, r25	; 0x2e
    2b08:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b0a:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b0c:	98 a9       	ldd	r25, Y+48	; 0x30
    2b0e:	01 97       	sbiw	r24, 0x01	; 1
    2b10:	98 ab       	std	Y+48, r25	; 0x30
    2b12:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b14:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b16:	98 a9       	ldd	r25, Y+48	; 0x30
    2b18:	00 97       	sbiw	r24, 0x00	; 0
    2b1a:	69 f7       	brne	.-38     	; 0x2af6 <Story_Welcome+0x1e2>
    2b1c:	14 c0       	rjmp	.+40     	; 0x2b46 <Story_Welcome+0x232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b1e:	69 a9       	ldd	r22, Y+49	; 0x31
    2b20:	7a a9       	ldd	r23, Y+50	; 0x32
    2b22:	8b a9       	ldd	r24, Y+51	; 0x33
    2b24:	9c a9       	ldd	r25, Y+52	; 0x34
    2b26:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b2a:	dc 01       	movw	r26, r24
    2b2c:	cb 01       	movw	r24, r22
    2b2e:	98 ab       	std	Y+48, r25	; 0x30
    2b30:	8f a7       	std	Y+47, r24	; 0x2f
    2b32:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b34:	98 a9       	ldd	r25, Y+48	; 0x30
    2b36:	9c a7       	std	Y+44, r25	; 0x2c
    2b38:	8b a7       	std	Y+43, r24	; 0x2b
    2b3a:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b3c:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	f1 f7       	brne	.-4      	; 0x2b3e <Story_Welcome+0x22a>
    2b42:	9c a7       	std	Y+44, r25	; 0x2c
    2b44:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(500);
	LCD_WriteString("This is ME ,I'll ");
    2b46:	81 e7       	ldi	r24, 0x71	; 113
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,1);
    2b4e:	82 e0       	ldi	r24, 0x02	; 2
    2b50:	61 e0       	ldi	r22, 0x01	; 1
    2b52:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    2b56:	80 e0       	ldi	r24, 0x00	; 0
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	aa ef       	ldi	r26, 0xFA	; 250
    2b5c:	b3 e4       	ldi	r27, 0x43	; 67
    2b5e:	8f a3       	std	Y+39, r24	; 0x27
    2b60:	98 a7       	std	Y+40, r25	; 0x28
    2b62:	a9 a7       	std	Y+41, r26	; 0x29
    2b64:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b66:	6f a1       	ldd	r22, Y+39	; 0x27
    2b68:	78 a5       	ldd	r23, Y+40	; 0x28
    2b6a:	89 a5       	ldd	r24, Y+41	; 0x29
    2b6c:	9a a5       	ldd	r25, Y+42	; 0x2a
    2b6e:	20 e0       	ldi	r18, 0x00	; 0
    2b70:	30 e0       	ldi	r19, 0x00	; 0
    2b72:	4a ef       	ldi	r20, 0xFA	; 250
    2b74:	54 e4       	ldi	r21, 0x44	; 68
    2b76:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b7a:	dc 01       	movw	r26, r24
    2b7c:	cb 01       	movw	r24, r22
    2b7e:	8b a3       	std	Y+35, r24	; 0x23
    2b80:	9c a3       	std	Y+36, r25	; 0x24
    2b82:	ad a3       	std	Y+37, r26	; 0x25
    2b84:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2b86:	6b a1       	ldd	r22, Y+35	; 0x23
    2b88:	7c a1       	ldd	r23, Y+36	; 0x24
    2b8a:	8d a1       	ldd	r24, Y+37	; 0x25
    2b8c:	9e a1       	ldd	r25, Y+38	; 0x26
    2b8e:	20 e0       	ldi	r18, 0x00	; 0
    2b90:	30 e0       	ldi	r19, 0x00	; 0
    2b92:	40 e8       	ldi	r20, 0x80	; 128
    2b94:	5f e3       	ldi	r21, 0x3F	; 63
    2b96:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2b9a:	88 23       	and	r24, r24
    2b9c:	2c f4       	brge	.+10     	; 0x2ba8 <Story_Welcome+0x294>
		__ticks = 1;
    2b9e:	81 e0       	ldi	r24, 0x01	; 1
    2ba0:	90 e0       	ldi	r25, 0x00	; 0
    2ba2:	9a a3       	std	Y+34, r25	; 0x22
    2ba4:	89 a3       	std	Y+33, r24	; 0x21
    2ba6:	3f c0       	rjmp	.+126    	; 0x2c26 <Story_Welcome+0x312>
	else if (__tmp > 65535)
    2ba8:	6b a1       	ldd	r22, Y+35	; 0x23
    2baa:	7c a1       	ldd	r23, Y+36	; 0x24
    2bac:	8d a1       	ldd	r24, Y+37	; 0x25
    2bae:	9e a1       	ldd	r25, Y+38	; 0x26
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	3f ef       	ldi	r19, 0xFF	; 255
    2bb4:	4f e7       	ldi	r20, 0x7F	; 127
    2bb6:	57 e4       	ldi	r21, 0x47	; 71
    2bb8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2bbc:	18 16       	cp	r1, r24
    2bbe:	4c f5       	brge	.+82     	; 0x2c12 <Story_Welcome+0x2fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bc0:	6f a1       	ldd	r22, Y+39	; 0x27
    2bc2:	78 a5       	ldd	r23, Y+40	; 0x28
    2bc4:	89 a5       	ldd	r24, Y+41	; 0x29
    2bc6:	9a a5       	ldd	r25, Y+42	; 0x2a
    2bc8:	20 e0       	ldi	r18, 0x00	; 0
    2bca:	30 e0       	ldi	r19, 0x00	; 0
    2bcc:	40 e2       	ldi	r20, 0x20	; 32
    2bce:	51 e4       	ldi	r21, 0x41	; 65
    2bd0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bd4:	dc 01       	movw	r26, r24
    2bd6:	cb 01       	movw	r24, r22
    2bd8:	bc 01       	movw	r22, r24
    2bda:	cd 01       	movw	r24, r26
    2bdc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2be0:	dc 01       	movw	r26, r24
    2be2:	cb 01       	movw	r24, r22
    2be4:	9a a3       	std	Y+34, r25	; 0x22
    2be6:	89 a3       	std	Y+33, r24	; 0x21
    2be8:	0f c0       	rjmp	.+30     	; 0x2c08 <Story_Welcome+0x2f4>
    2bea:	88 ec       	ldi	r24, 0xC8	; 200
    2bec:	90 e0       	ldi	r25, 0x00	; 0
    2bee:	98 a3       	std	Y+32, r25	; 0x20
    2bf0:	8f 8f       	std	Y+31, r24	; 0x1f
    2bf2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2bf4:	98 a1       	ldd	r25, Y+32	; 0x20
    2bf6:	01 97       	sbiw	r24, 0x01	; 1
    2bf8:	f1 f7       	brne	.-4      	; 0x2bf6 <Story_Welcome+0x2e2>
    2bfa:	98 a3       	std	Y+32, r25	; 0x20
    2bfc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bfe:	89 a1       	ldd	r24, Y+33	; 0x21
    2c00:	9a a1       	ldd	r25, Y+34	; 0x22
    2c02:	01 97       	sbiw	r24, 0x01	; 1
    2c04:	9a a3       	std	Y+34, r25	; 0x22
    2c06:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c08:	89 a1       	ldd	r24, Y+33	; 0x21
    2c0a:	9a a1       	ldd	r25, Y+34	; 0x22
    2c0c:	00 97       	sbiw	r24, 0x00	; 0
    2c0e:	69 f7       	brne	.-38     	; 0x2bea <Story_Welcome+0x2d6>
    2c10:	14 c0       	rjmp	.+40     	; 0x2c3a <Story_Welcome+0x326>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c12:	6b a1       	ldd	r22, Y+35	; 0x23
    2c14:	7c a1       	ldd	r23, Y+36	; 0x24
    2c16:	8d a1       	ldd	r24, Y+37	; 0x25
    2c18:	9e a1       	ldd	r25, Y+38	; 0x26
    2c1a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	9a a3       	std	Y+34, r25	; 0x22
    2c24:	89 a3       	std	Y+33, r24	; 0x21
    2c26:	89 a1       	ldd	r24, Y+33	; 0x21
    2c28:	9a a1       	ldd	r25, Y+34	; 0x22
    2c2a:	9e 8f       	std	Y+30, r25	; 0x1e
    2c2c:	8d 8f       	std	Y+29, r24	; 0x1d
    2c2e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c30:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c32:	01 97       	sbiw	r24, 0x01	; 1
    2c34:	f1 f7       	brne	.-4      	; 0x2c32 <Story_Welcome+0x31e>
    2c36:	9e 8f       	std	Y+30, r25	; 0x1e
    2c38:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(500);
	LCD_WriteString("talk with you ");
    2c3a:	83 e8       	ldi	r24, 0x83	; 131
    2c3c:	90 e0       	ldi	r25, 0x00	; 0
    2c3e:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,1);
    2c42:	83 e0       	ldi	r24, 0x03	; 3
    2c44:	61 e0       	ldi	r22, 0x01	; 1
    2c46:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    2c4a:	80 e0       	ldi	r24, 0x00	; 0
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	aa ef       	ldi	r26, 0xFA	; 250
    2c50:	b3 e4       	ldi	r27, 0x43	; 67
    2c52:	89 8f       	std	Y+25, r24	; 0x19
    2c54:	9a 8f       	std	Y+26, r25	; 0x1a
    2c56:	ab 8f       	std	Y+27, r26	; 0x1b
    2c58:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c5a:	69 8d       	ldd	r22, Y+25	; 0x19
    2c5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2c5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2c60:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2c62:	20 e0       	ldi	r18, 0x00	; 0
    2c64:	30 e0       	ldi	r19, 0x00	; 0
    2c66:	4a ef       	ldi	r20, 0xFA	; 250
    2c68:	54 e4       	ldi	r21, 0x44	; 68
    2c6a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c6e:	dc 01       	movw	r26, r24
    2c70:	cb 01       	movw	r24, r22
    2c72:	8d 8b       	std	Y+21, r24	; 0x15
    2c74:	9e 8b       	std	Y+22, r25	; 0x16
    2c76:	af 8b       	std	Y+23, r26	; 0x17
    2c78:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2c7a:	6d 89       	ldd	r22, Y+21	; 0x15
    2c7c:	7e 89       	ldd	r23, Y+22	; 0x16
    2c7e:	8f 89       	ldd	r24, Y+23	; 0x17
    2c80:	98 8d       	ldd	r25, Y+24	; 0x18
    2c82:	20 e0       	ldi	r18, 0x00	; 0
    2c84:	30 e0       	ldi	r19, 0x00	; 0
    2c86:	40 e8       	ldi	r20, 0x80	; 128
    2c88:	5f e3       	ldi	r21, 0x3F	; 63
    2c8a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2c8e:	88 23       	and	r24, r24
    2c90:	2c f4       	brge	.+10     	; 0x2c9c <Story_Welcome+0x388>
		__ticks = 1;
    2c92:	81 e0       	ldi	r24, 0x01	; 1
    2c94:	90 e0       	ldi	r25, 0x00	; 0
    2c96:	9c 8b       	std	Y+20, r25	; 0x14
    2c98:	8b 8b       	std	Y+19, r24	; 0x13
    2c9a:	3f c0       	rjmp	.+126    	; 0x2d1a <Story_Welcome+0x406>
	else if (__tmp > 65535)
    2c9c:	6d 89       	ldd	r22, Y+21	; 0x15
    2c9e:	7e 89       	ldd	r23, Y+22	; 0x16
    2ca0:	8f 89       	ldd	r24, Y+23	; 0x17
    2ca2:	98 8d       	ldd	r25, Y+24	; 0x18
    2ca4:	20 e0       	ldi	r18, 0x00	; 0
    2ca6:	3f ef       	ldi	r19, 0xFF	; 255
    2ca8:	4f e7       	ldi	r20, 0x7F	; 127
    2caa:	57 e4       	ldi	r21, 0x47	; 71
    2cac:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2cb0:	18 16       	cp	r1, r24
    2cb2:	4c f5       	brge	.+82     	; 0x2d06 <Story_Welcome+0x3f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cb4:	69 8d       	ldd	r22, Y+25	; 0x19
    2cb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2cb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cbc:	20 e0       	ldi	r18, 0x00	; 0
    2cbe:	30 e0       	ldi	r19, 0x00	; 0
    2cc0:	40 e2       	ldi	r20, 0x20	; 32
    2cc2:	51 e4       	ldi	r21, 0x41	; 65
    2cc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cc8:	dc 01       	movw	r26, r24
    2cca:	cb 01       	movw	r24, r22
    2ccc:	bc 01       	movw	r22, r24
    2cce:	cd 01       	movw	r24, r26
    2cd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2cd4:	dc 01       	movw	r26, r24
    2cd6:	cb 01       	movw	r24, r22
    2cd8:	9c 8b       	std	Y+20, r25	; 0x14
    2cda:	8b 8b       	std	Y+19, r24	; 0x13
    2cdc:	0f c0       	rjmp	.+30     	; 0x2cfc <Story_Welcome+0x3e8>
    2cde:	88 ec       	ldi	r24, 0xC8	; 200
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
    2ce2:	9a 8b       	std	Y+18, r25	; 0x12
    2ce4:	89 8b       	std	Y+17, r24	; 0x11
    2ce6:	89 89       	ldd	r24, Y+17	; 0x11
    2ce8:	9a 89       	ldd	r25, Y+18	; 0x12
    2cea:	01 97       	sbiw	r24, 0x01	; 1
    2cec:	f1 f7       	brne	.-4      	; 0x2cea <Story_Welcome+0x3d6>
    2cee:	9a 8b       	std	Y+18, r25	; 0x12
    2cf0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cf2:	8b 89       	ldd	r24, Y+19	; 0x13
    2cf4:	9c 89       	ldd	r25, Y+20	; 0x14
    2cf6:	01 97       	sbiw	r24, 0x01	; 1
    2cf8:	9c 8b       	std	Y+20, r25	; 0x14
    2cfa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cfc:	8b 89       	ldd	r24, Y+19	; 0x13
    2cfe:	9c 89       	ldd	r25, Y+20	; 0x14
    2d00:	00 97       	sbiw	r24, 0x00	; 0
    2d02:	69 f7       	brne	.-38     	; 0x2cde <Story_Welcome+0x3ca>
    2d04:	14 c0       	rjmp	.+40     	; 0x2d2e <Story_Welcome+0x41a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d06:	6d 89       	ldd	r22, Y+21	; 0x15
    2d08:	7e 89       	ldd	r23, Y+22	; 0x16
    2d0a:	8f 89       	ldd	r24, Y+23	; 0x17
    2d0c:	98 8d       	ldd	r25, Y+24	; 0x18
    2d0e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d12:	dc 01       	movw	r26, r24
    2d14:	cb 01       	movw	r24, r22
    2d16:	9c 8b       	std	Y+20, r25	; 0x14
    2d18:	8b 8b       	std	Y+19, r24	; 0x13
    2d1a:	8b 89       	ldd	r24, Y+19	; 0x13
    2d1c:	9c 89       	ldd	r25, Y+20	; 0x14
    2d1e:	98 8b       	std	Y+16, r25	; 0x10
    2d20:	8f 87       	std	Y+15, r24	; 0x0f
    2d22:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d24:	98 89       	ldd	r25, Y+16	; 0x10
    2d26:	01 97       	sbiw	r24, 0x01	; 1
    2d28:	f1 f7       	brne	.-4      	; 0x2d26 <Story_Welcome+0x412>
    2d2a:	98 8b       	std	Y+16, r25	; 0x10
    2d2c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	LCD_WriteString("about my Story.");
    2d2e:	82 e9       	ldi	r24, 0x92	; 146
    2d30:	90 e0       	ldi	r25, 0x00	; 0
    2d32:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    2d36:	80 e0       	ldi	r24, 0x00	; 0
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	aa ef       	ldi	r26, 0xFA	; 250
    2d3c:	b4 e4       	ldi	r27, 0x44	; 68
    2d3e:	8b 87       	std	Y+11, r24	; 0x0b
    2d40:	9c 87       	std	Y+12, r25	; 0x0c
    2d42:	ad 87       	std	Y+13, r26	; 0x0d
    2d44:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d46:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d48:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d4a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d4c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	30 e0       	ldi	r19, 0x00	; 0
    2d52:	4a ef       	ldi	r20, 0xFA	; 250
    2d54:	54 e4       	ldi	r21, 0x44	; 68
    2d56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d5a:	dc 01       	movw	r26, r24
    2d5c:	cb 01       	movw	r24, r22
    2d5e:	8f 83       	std	Y+7, r24	; 0x07
    2d60:	98 87       	std	Y+8, r25	; 0x08
    2d62:	a9 87       	std	Y+9, r26	; 0x09
    2d64:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2d66:	6f 81       	ldd	r22, Y+7	; 0x07
    2d68:	78 85       	ldd	r23, Y+8	; 0x08
    2d6a:	89 85       	ldd	r24, Y+9	; 0x09
    2d6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d6e:	20 e0       	ldi	r18, 0x00	; 0
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	40 e8       	ldi	r20, 0x80	; 128
    2d74:	5f e3       	ldi	r21, 0x3F	; 63
    2d76:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2d7a:	88 23       	and	r24, r24
    2d7c:	2c f4       	brge	.+10     	; 0x2d88 <Story_Welcome+0x474>
		__ticks = 1;
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	9e 83       	std	Y+6, r25	; 0x06
    2d84:	8d 83       	std	Y+5, r24	; 0x05
    2d86:	3f c0       	rjmp	.+126    	; 0x2e06 <Story_Welcome+0x4f2>
	else if (__tmp > 65535)
    2d88:	6f 81       	ldd	r22, Y+7	; 0x07
    2d8a:	78 85       	ldd	r23, Y+8	; 0x08
    2d8c:	89 85       	ldd	r24, Y+9	; 0x09
    2d8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	3f ef       	ldi	r19, 0xFF	; 255
    2d94:	4f e7       	ldi	r20, 0x7F	; 127
    2d96:	57 e4       	ldi	r21, 0x47	; 71
    2d98:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d9c:	18 16       	cp	r1, r24
    2d9e:	4c f5       	brge	.+82     	; 0x2df2 <Story_Welcome+0x4de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2da0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2da2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2da4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2da6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2da8:	20 e0       	ldi	r18, 0x00	; 0
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	40 e2       	ldi	r20, 0x20	; 32
    2dae:	51 e4       	ldi	r21, 0x41	; 65
    2db0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2db4:	dc 01       	movw	r26, r24
    2db6:	cb 01       	movw	r24, r22
    2db8:	bc 01       	movw	r22, r24
    2dba:	cd 01       	movw	r24, r26
    2dbc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2dc0:	dc 01       	movw	r26, r24
    2dc2:	cb 01       	movw	r24, r22
    2dc4:	9e 83       	std	Y+6, r25	; 0x06
    2dc6:	8d 83       	std	Y+5, r24	; 0x05
    2dc8:	0f c0       	rjmp	.+30     	; 0x2de8 <Story_Welcome+0x4d4>
    2dca:	88 ec       	ldi	r24, 0xC8	; 200
    2dcc:	90 e0       	ldi	r25, 0x00	; 0
    2dce:	9c 83       	std	Y+4, r25	; 0x04
    2dd0:	8b 83       	std	Y+3, r24	; 0x03
    2dd2:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd4:	9c 81       	ldd	r25, Y+4	; 0x04
    2dd6:	01 97       	sbiw	r24, 0x01	; 1
    2dd8:	f1 f7       	brne	.-4      	; 0x2dd6 <Story_Welcome+0x4c2>
    2dda:	9c 83       	std	Y+4, r25	; 0x04
    2ddc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dde:	8d 81       	ldd	r24, Y+5	; 0x05
    2de0:	9e 81       	ldd	r25, Y+6	; 0x06
    2de2:	01 97       	sbiw	r24, 0x01	; 1
    2de4:	9e 83       	std	Y+6, r25	; 0x06
    2de6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2de8:	8d 81       	ldd	r24, Y+5	; 0x05
    2dea:	9e 81       	ldd	r25, Y+6	; 0x06
    2dec:	00 97       	sbiw	r24, 0x00	; 0
    2dee:	69 f7       	brne	.-38     	; 0x2dca <Story_Welcome+0x4b6>
    2df0:	14 c0       	rjmp	.+40     	; 0x2e1a <Story_Welcome+0x506>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2df2:	6f 81       	ldd	r22, Y+7	; 0x07
    2df4:	78 85       	ldd	r23, Y+8	; 0x08
    2df6:	89 85       	ldd	r24, Y+9	; 0x09
    2df8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2dfa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2dfe:	dc 01       	movw	r26, r24
    2e00:	cb 01       	movw	r24, r22
    2e02:	9e 83       	std	Y+6, r25	; 0x06
    2e04:	8d 83       	std	Y+5, r24	; 0x05
    2e06:	8d 81       	ldd	r24, Y+5	; 0x05
    2e08:	9e 81       	ldd	r25, Y+6	; 0x06
    2e0a:	9a 83       	std	Y+2, r25	; 0x02
    2e0c:	89 83       	std	Y+1, r24	; 0x01
    2e0e:	89 81       	ldd	r24, Y+1	; 0x01
    2e10:	9a 81       	ldd	r25, Y+2	; 0x02
    2e12:	01 97       	sbiw	r24, 0x01	; 1
    2e14:	f1 f7       	brne	.-4      	; 0x2e12 <Story_Welcome+0x4fe>
    2e16:	9a 83       	std	Y+2, r25	; 0x02
    2e18:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2000);
	LCD_Clear();
    2e1a:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>
	flagstory=1;
    2e1e:	81 e0       	ldi	r24, 0x01	; 1
    2e20:	80 93 c2 02 	sts	0x02C2, r24
}
    2e24:	ca 5b       	subi	r28, 0xBA	; 186
    2e26:	df 4f       	sbci	r29, 0xFF	; 255
    2e28:	0f b6       	in	r0, 0x3f	; 63
    2e2a:	f8 94       	cli
    2e2c:	de bf       	out	0x3e, r29	; 62
    2e2e:	0f be       	out	0x3f, r0	; 63
    2e30:	cd bf       	out	0x3d, r28	; 61
    2e32:	cf 91       	pop	r28
    2e34:	df 91       	pop	r29
    2e36:	1f 91       	pop	r17
    2e38:	0f 91       	pop	r16
    2e3a:	08 95       	ret

00002e3c <MyStory>:

void MyStory(void)
{
    2e3c:	0f 93       	push	r16
    2e3e:	1f 93       	push	r17
    2e40:	df 93       	push	r29
    2e42:	cf 93       	push	r28
    2e44:	cd b7       	in	r28, 0x3d	; 61
    2e46:	de b7       	in	r29, 0x3e	; 62
    2e48:	cc 5d       	subi	r28, 0xDC	; 220
    2e4a:	d1 40       	sbci	r29, 0x01	; 1
    2e4c:	0f b6       	in	r0, 0x3f	; 63
    2e4e:	f8 94       	cli
    2e50:	de bf       	out	0x3e, r29	; 62
    2e52:	0f be       	out	0x3f, r0	; 63
    2e54:	cd bf       	out	0x3d, r28	; 61
	LCD_GoTo(0,0);
    2e56:	80 e0       	ldi	r24, 0x00	; 0
    2e58:	60 e0       	ldi	r22, 0x00	; 0
    2e5a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
	LCD_WriteString("let's go back throw ");
    2e5e:	82 ea       	ldi	r24, 0xA2	; 162
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    2e66:	81 e0       	ldi	r24, 0x01	; 1
    2e68:	60 e0       	ldi	r22, 0x00	; 0
    2e6a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    2e6e:	fe 01       	movw	r30, r28
    2e70:	e7 52       	subi	r30, 0x27	; 39
    2e72:	fe 4f       	sbci	r31, 0xFE	; 254
    2e74:	80 e0       	ldi	r24, 0x00	; 0
    2e76:	90 e0       	ldi	r25, 0x00	; 0
    2e78:	aa ef       	ldi	r26, 0xFA	; 250
    2e7a:	b3 e4       	ldi	r27, 0x43	; 67
    2e7c:	80 83       	st	Z, r24
    2e7e:	91 83       	std	Z+1, r25	; 0x01
    2e80:	a2 83       	std	Z+2, r26	; 0x02
    2e82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e84:	8e 01       	movw	r16, r28
    2e86:	0b 52       	subi	r16, 0x2B	; 43
    2e88:	1e 4f       	sbci	r17, 0xFE	; 254
    2e8a:	fe 01       	movw	r30, r28
    2e8c:	e7 52       	subi	r30, 0x27	; 39
    2e8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2e90:	60 81       	ld	r22, Z
    2e92:	71 81       	ldd	r23, Z+1	; 0x01
    2e94:	82 81       	ldd	r24, Z+2	; 0x02
    2e96:	93 81       	ldd	r25, Z+3	; 0x03
    2e98:	20 e0       	ldi	r18, 0x00	; 0
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	4a ef       	ldi	r20, 0xFA	; 250
    2e9e:	54 e4       	ldi	r21, 0x44	; 68
    2ea0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ea4:	dc 01       	movw	r26, r24
    2ea6:	cb 01       	movw	r24, r22
    2ea8:	f8 01       	movw	r30, r16
    2eaa:	80 83       	st	Z, r24
    2eac:	91 83       	std	Z+1, r25	; 0x01
    2eae:	a2 83       	std	Z+2, r26	; 0x02
    2eb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2eb2:	fe 01       	movw	r30, r28
    2eb4:	eb 52       	subi	r30, 0x2B	; 43
    2eb6:	fe 4f       	sbci	r31, 0xFE	; 254
    2eb8:	60 81       	ld	r22, Z
    2eba:	71 81       	ldd	r23, Z+1	; 0x01
    2ebc:	82 81       	ldd	r24, Z+2	; 0x02
    2ebe:	93 81       	ldd	r25, Z+3	; 0x03
    2ec0:	20 e0       	ldi	r18, 0x00	; 0
    2ec2:	30 e0       	ldi	r19, 0x00	; 0
    2ec4:	40 e8       	ldi	r20, 0x80	; 128
    2ec6:	5f e3       	ldi	r21, 0x3F	; 63
    2ec8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2ecc:	88 23       	and	r24, r24
    2ece:	44 f4       	brge	.+16     	; 0x2ee0 <MyStory+0xa4>
		__ticks = 1;
    2ed0:	fe 01       	movw	r30, r28
    2ed2:	ed 52       	subi	r30, 0x2D	; 45
    2ed4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ed6:	81 e0       	ldi	r24, 0x01	; 1
    2ed8:	90 e0       	ldi	r25, 0x00	; 0
    2eda:	91 83       	std	Z+1, r25	; 0x01
    2edc:	80 83       	st	Z, r24
    2ede:	64 c0       	rjmp	.+200    	; 0x2fa8 <MyStory+0x16c>
	else if (__tmp > 65535)
    2ee0:	fe 01       	movw	r30, r28
    2ee2:	eb 52       	subi	r30, 0x2B	; 43
    2ee4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee6:	60 81       	ld	r22, Z
    2ee8:	71 81       	ldd	r23, Z+1	; 0x01
    2eea:	82 81       	ldd	r24, Z+2	; 0x02
    2eec:	93 81       	ldd	r25, Z+3	; 0x03
    2eee:	20 e0       	ldi	r18, 0x00	; 0
    2ef0:	3f ef       	ldi	r19, 0xFF	; 255
    2ef2:	4f e7       	ldi	r20, 0x7F	; 127
    2ef4:	57 e4       	ldi	r21, 0x47	; 71
    2ef6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2efa:	18 16       	cp	r1, r24
    2efc:	0c f0       	brlt	.+2      	; 0x2f00 <MyStory+0xc4>
    2efe:	43 c0       	rjmp	.+134    	; 0x2f86 <MyStory+0x14a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f00:	fe 01       	movw	r30, r28
    2f02:	e7 52       	subi	r30, 0x27	; 39
    2f04:	fe 4f       	sbci	r31, 0xFE	; 254
    2f06:	60 81       	ld	r22, Z
    2f08:	71 81       	ldd	r23, Z+1	; 0x01
    2f0a:	82 81       	ldd	r24, Z+2	; 0x02
    2f0c:	93 81       	ldd	r25, Z+3	; 0x03
    2f0e:	20 e0       	ldi	r18, 0x00	; 0
    2f10:	30 e0       	ldi	r19, 0x00	; 0
    2f12:	40 e2       	ldi	r20, 0x20	; 32
    2f14:	51 e4       	ldi	r21, 0x41	; 65
    2f16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2f1a:	dc 01       	movw	r26, r24
    2f1c:	cb 01       	movw	r24, r22
    2f1e:	8e 01       	movw	r16, r28
    2f20:	0d 52       	subi	r16, 0x2D	; 45
    2f22:	1e 4f       	sbci	r17, 0xFE	; 254
    2f24:	bc 01       	movw	r22, r24
    2f26:	cd 01       	movw	r24, r26
    2f28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f2c:	dc 01       	movw	r26, r24
    2f2e:	cb 01       	movw	r24, r22
    2f30:	f8 01       	movw	r30, r16
    2f32:	91 83       	std	Z+1, r25	; 0x01
    2f34:	80 83       	st	Z, r24
    2f36:	1f c0       	rjmp	.+62     	; 0x2f76 <MyStory+0x13a>
    2f38:	fe 01       	movw	r30, r28
    2f3a:	ef 52       	subi	r30, 0x2F	; 47
    2f3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2f3e:	88 ec       	ldi	r24, 0xC8	; 200
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	91 83       	std	Z+1, r25	; 0x01
    2f44:	80 83       	st	Z, r24
    2f46:	fe 01       	movw	r30, r28
    2f48:	ef 52       	subi	r30, 0x2F	; 47
    2f4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f4c:	80 81       	ld	r24, Z
    2f4e:	91 81       	ldd	r25, Z+1	; 0x01
    2f50:	01 97       	sbiw	r24, 0x01	; 1
    2f52:	f1 f7       	brne	.-4      	; 0x2f50 <MyStory+0x114>
    2f54:	fe 01       	movw	r30, r28
    2f56:	ef 52       	subi	r30, 0x2F	; 47
    2f58:	fe 4f       	sbci	r31, 0xFE	; 254
    2f5a:	91 83       	std	Z+1, r25	; 0x01
    2f5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f5e:	de 01       	movw	r26, r28
    2f60:	ad 52       	subi	r26, 0x2D	; 45
    2f62:	be 4f       	sbci	r27, 0xFE	; 254
    2f64:	fe 01       	movw	r30, r28
    2f66:	ed 52       	subi	r30, 0x2D	; 45
    2f68:	fe 4f       	sbci	r31, 0xFE	; 254
    2f6a:	80 81       	ld	r24, Z
    2f6c:	91 81       	ldd	r25, Z+1	; 0x01
    2f6e:	01 97       	sbiw	r24, 0x01	; 1
    2f70:	11 96       	adiw	r26, 0x01	; 1
    2f72:	9c 93       	st	X, r25
    2f74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f76:	fe 01       	movw	r30, r28
    2f78:	ed 52       	subi	r30, 0x2D	; 45
    2f7a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f7c:	80 81       	ld	r24, Z
    2f7e:	91 81       	ldd	r25, Z+1	; 0x01
    2f80:	00 97       	sbiw	r24, 0x00	; 0
    2f82:	d1 f6       	brne	.-76     	; 0x2f38 <MyStory+0xfc>
    2f84:	27 c0       	rjmp	.+78     	; 0x2fd4 <MyStory+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f86:	8e 01       	movw	r16, r28
    2f88:	0d 52       	subi	r16, 0x2D	; 45
    2f8a:	1e 4f       	sbci	r17, 0xFE	; 254
    2f8c:	fe 01       	movw	r30, r28
    2f8e:	eb 52       	subi	r30, 0x2B	; 43
    2f90:	fe 4f       	sbci	r31, 0xFE	; 254
    2f92:	60 81       	ld	r22, Z
    2f94:	71 81       	ldd	r23, Z+1	; 0x01
    2f96:	82 81       	ldd	r24, Z+2	; 0x02
    2f98:	93 81       	ldd	r25, Z+3	; 0x03
    2f9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f9e:	dc 01       	movw	r26, r24
    2fa0:	cb 01       	movw	r24, r22
    2fa2:	f8 01       	movw	r30, r16
    2fa4:	91 83       	std	Z+1, r25	; 0x01
    2fa6:	80 83       	st	Z, r24
    2fa8:	de 01       	movw	r26, r28
    2faa:	a1 53       	subi	r26, 0x31	; 49
    2fac:	be 4f       	sbci	r27, 0xFE	; 254
    2fae:	fe 01       	movw	r30, r28
    2fb0:	ed 52       	subi	r30, 0x2D	; 45
    2fb2:	fe 4f       	sbci	r31, 0xFE	; 254
    2fb4:	80 81       	ld	r24, Z
    2fb6:	91 81       	ldd	r25, Z+1	; 0x01
    2fb8:	8d 93       	st	X+, r24
    2fba:	9c 93       	st	X, r25
    2fbc:	fe 01       	movw	r30, r28
    2fbe:	e1 53       	subi	r30, 0x31	; 49
    2fc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc2:	80 81       	ld	r24, Z
    2fc4:	91 81       	ldd	r25, Z+1	; 0x01
    2fc6:	01 97       	sbiw	r24, 0x01	; 1
    2fc8:	f1 f7       	brne	.-4      	; 0x2fc6 <MyStory+0x18a>
    2fca:	fe 01       	movw	r30, r28
    2fcc:	e1 53       	subi	r30, 0x31	; 49
    2fce:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd0:	91 83       	std	Z+1, r25	; 0x01
    2fd2:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("at 2020,here the ");
    2fd4:	87 eb       	ldi	r24, 0xB7	; 183
    2fd6:	90 e0       	ldi	r25, 0x00	; 0
    2fd8:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    2fdc:	82 e0       	ldi	r24, 0x02	; 2
    2fde:	60 e0       	ldi	r22, 0x00	; 0
    2fe0:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    2fe4:	fe 01       	movw	r30, r28
    2fe6:	e5 53       	subi	r30, 0x35	; 53
    2fe8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fea:	80 e0       	ldi	r24, 0x00	; 0
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	aa ef       	ldi	r26, 0xFA	; 250
    2ff0:	b3 e4       	ldi	r27, 0x43	; 67
    2ff2:	80 83       	st	Z, r24
    2ff4:	91 83       	std	Z+1, r25	; 0x01
    2ff6:	a2 83       	std	Z+2, r26	; 0x02
    2ff8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ffa:	8e 01       	movw	r16, r28
    2ffc:	09 53       	subi	r16, 0x39	; 57
    2ffe:	1e 4f       	sbci	r17, 0xFE	; 254
    3000:	fe 01       	movw	r30, r28
    3002:	e5 53       	subi	r30, 0x35	; 53
    3004:	fe 4f       	sbci	r31, 0xFE	; 254
    3006:	60 81       	ld	r22, Z
    3008:	71 81       	ldd	r23, Z+1	; 0x01
    300a:	82 81       	ldd	r24, Z+2	; 0x02
    300c:	93 81       	ldd	r25, Z+3	; 0x03
    300e:	20 e0       	ldi	r18, 0x00	; 0
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	4a ef       	ldi	r20, 0xFA	; 250
    3014:	54 e4       	ldi	r21, 0x44	; 68
    3016:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    301a:	dc 01       	movw	r26, r24
    301c:	cb 01       	movw	r24, r22
    301e:	f8 01       	movw	r30, r16
    3020:	80 83       	st	Z, r24
    3022:	91 83       	std	Z+1, r25	; 0x01
    3024:	a2 83       	std	Z+2, r26	; 0x02
    3026:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3028:	fe 01       	movw	r30, r28
    302a:	e9 53       	subi	r30, 0x39	; 57
    302c:	fe 4f       	sbci	r31, 0xFE	; 254
    302e:	60 81       	ld	r22, Z
    3030:	71 81       	ldd	r23, Z+1	; 0x01
    3032:	82 81       	ldd	r24, Z+2	; 0x02
    3034:	93 81       	ldd	r25, Z+3	; 0x03
    3036:	20 e0       	ldi	r18, 0x00	; 0
    3038:	30 e0       	ldi	r19, 0x00	; 0
    303a:	40 e8       	ldi	r20, 0x80	; 128
    303c:	5f e3       	ldi	r21, 0x3F	; 63
    303e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3042:	88 23       	and	r24, r24
    3044:	44 f4       	brge	.+16     	; 0x3056 <MyStory+0x21a>
		__ticks = 1;
    3046:	fe 01       	movw	r30, r28
    3048:	eb 53       	subi	r30, 0x3B	; 59
    304a:	fe 4f       	sbci	r31, 0xFE	; 254
    304c:	81 e0       	ldi	r24, 0x01	; 1
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	91 83       	std	Z+1, r25	; 0x01
    3052:	80 83       	st	Z, r24
    3054:	64 c0       	rjmp	.+200    	; 0x311e <MyStory+0x2e2>
	else if (__tmp > 65535)
    3056:	fe 01       	movw	r30, r28
    3058:	e9 53       	subi	r30, 0x39	; 57
    305a:	fe 4f       	sbci	r31, 0xFE	; 254
    305c:	60 81       	ld	r22, Z
    305e:	71 81       	ldd	r23, Z+1	; 0x01
    3060:	82 81       	ldd	r24, Z+2	; 0x02
    3062:	93 81       	ldd	r25, Z+3	; 0x03
    3064:	20 e0       	ldi	r18, 0x00	; 0
    3066:	3f ef       	ldi	r19, 0xFF	; 255
    3068:	4f e7       	ldi	r20, 0x7F	; 127
    306a:	57 e4       	ldi	r21, 0x47	; 71
    306c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3070:	18 16       	cp	r1, r24
    3072:	0c f0       	brlt	.+2      	; 0x3076 <MyStory+0x23a>
    3074:	43 c0       	rjmp	.+134    	; 0x30fc <MyStory+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3076:	fe 01       	movw	r30, r28
    3078:	e5 53       	subi	r30, 0x35	; 53
    307a:	fe 4f       	sbci	r31, 0xFE	; 254
    307c:	60 81       	ld	r22, Z
    307e:	71 81       	ldd	r23, Z+1	; 0x01
    3080:	82 81       	ldd	r24, Z+2	; 0x02
    3082:	93 81       	ldd	r25, Z+3	; 0x03
    3084:	20 e0       	ldi	r18, 0x00	; 0
    3086:	30 e0       	ldi	r19, 0x00	; 0
    3088:	40 e2       	ldi	r20, 0x20	; 32
    308a:	51 e4       	ldi	r21, 0x41	; 65
    308c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3090:	dc 01       	movw	r26, r24
    3092:	cb 01       	movw	r24, r22
    3094:	8e 01       	movw	r16, r28
    3096:	0b 53       	subi	r16, 0x3B	; 59
    3098:	1e 4f       	sbci	r17, 0xFE	; 254
    309a:	bc 01       	movw	r22, r24
    309c:	cd 01       	movw	r24, r26
    309e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30a2:	dc 01       	movw	r26, r24
    30a4:	cb 01       	movw	r24, r22
    30a6:	f8 01       	movw	r30, r16
    30a8:	91 83       	std	Z+1, r25	; 0x01
    30aa:	80 83       	st	Z, r24
    30ac:	1f c0       	rjmp	.+62     	; 0x30ec <MyStory+0x2b0>
    30ae:	fe 01       	movw	r30, r28
    30b0:	ed 53       	subi	r30, 0x3D	; 61
    30b2:	fe 4f       	sbci	r31, 0xFE	; 254
    30b4:	88 ec       	ldi	r24, 0xC8	; 200
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	91 83       	std	Z+1, r25	; 0x01
    30ba:	80 83       	st	Z, r24
    30bc:	fe 01       	movw	r30, r28
    30be:	ed 53       	subi	r30, 0x3D	; 61
    30c0:	fe 4f       	sbci	r31, 0xFE	; 254
    30c2:	80 81       	ld	r24, Z
    30c4:	91 81       	ldd	r25, Z+1	; 0x01
    30c6:	01 97       	sbiw	r24, 0x01	; 1
    30c8:	f1 f7       	brne	.-4      	; 0x30c6 <MyStory+0x28a>
    30ca:	fe 01       	movw	r30, r28
    30cc:	ed 53       	subi	r30, 0x3D	; 61
    30ce:	fe 4f       	sbci	r31, 0xFE	; 254
    30d0:	91 83       	std	Z+1, r25	; 0x01
    30d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30d4:	de 01       	movw	r26, r28
    30d6:	ab 53       	subi	r26, 0x3B	; 59
    30d8:	be 4f       	sbci	r27, 0xFE	; 254
    30da:	fe 01       	movw	r30, r28
    30dc:	eb 53       	subi	r30, 0x3B	; 59
    30de:	fe 4f       	sbci	r31, 0xFE	; 254
    30e0:	80 81       	ld	r24, Z
    30e2:	91 81       	ldd	r25, Z+1	; 0x01
    30e4:	01 97       	sbiw	r24, 0x01	; 1
    30e6:	11 96       	adiw	r26, 0x01	; 1
    30e8:	9c 93       	st	X, r25
    30ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30ec:	fe 01       	movw	r30, r28
    30ee:	eb 53       	subi	r30, 0x3B	; 59
    30f0:	fe 4f       	sbci	r31, 0xFE	; 254
    30f2:	80 81       	ld	r24, Z
    30f4:	91 81       	ldd	r25, Z+1	; 0x01
    30f6:	00 97       	sbiw	r24, 0x00	; 0
    30f8:	d1 f6       	brne	.-76     	; 0x30ae <MyStory+0x272>
    30fa:	27 c0       	rjmp	.+78     	; 0x314a <MyStory+0x30e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30fc:	8e 01       	movw	r16, r28
    30fe:	0b 53       	subi	r16, 0x3B	; 59
    3100:	1e 4f       	sbci	r17, 0xFE	; 254
    3102:	fe 01       	movw	r30, r28
    3104:	e9 53       	subi	r30, 0x39	; 57
    3106:	fe 4f       	sbci	r31, 0xFE	; 254
    3108:	60 81       	ld	r22, Z
    310a:	71 81       	ldd	r23, Z+1	; 0x01
    310c:	82 81       	ldd	r24, Z+2	; 0x02
    310e:	93 81       	ldd	r25, Z+3	; 0x03
    3110:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3114:	dc 01       	movw	r26, r24
    3116:	cb 01       	movw	r24, r22
    3118:	f8 01       	movw	r30, r16
    311a:	91 83       	std	Z+1, r25	; 0x01
    311c:	80 83       	st	Z, r24
    311e:	de 01       	movw	r26, r28
    3120:	af 53       	subi	r26, 0x3F	; 63
    3122:	be 4f       	sbci	r27, 0xFE	; 254
    3124:	fe 01       	movw	r30, r28
    3126:	eb 53       	subi	r30, 0x3B	; 59
    3128:	fe 4f       	sbci	r31, 0xFE	; 254
    312a:	80 81       	ld	r24, Z
    312c:	91 81       	ldd	r25, Z+1	; 0x01
    312e:	8d 93       	st	X+, r24
    3130:	9c 93       	st	X, r25
    3132:	fe 01       	movw	r30, r28
    3134:	ef 53       	subi	r30, 0x3F	; 63
    3136:	fe 4f       	sbci	r31, 0xFE	; 254
    3138:	80 81       	ld	r24, Z
    313a:	91 81       	ldd	r25, Z+1	; 0x01
    313c:	01 97       	sbiw	r24, 0x01	; 1
    313e:	f1 f7       	brne	.-4      	; 0x313c <MyStory+0x300>
    3140:	fe 01       	movw	r30, r28
    3142:	ef 53       	subi	r30, 0x3F	; 63
    3144:	fe 4f       	sbci	r31, 0xFE	; 254
    3146:	91 83       	std	Z+1, r25	; 0x01
    3148:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("change point of ");
    314a:	89 ec       	ldi	r24, 0xC9	; 201
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,0);
    3152:	83 e0       	ldi	r24, 0x03	; 3
    3154:	60 e0       	ldi	r22, 0x00	; 0
    3156:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    315a:	fe 01       	movw	r30, r28
    315c:	e3 54       	subi	r30, 0x43	; 67
    315e:	fe 4f       	sbci	r31, 0xFE	; 254
    3160:	80 e0       	ldi	r24, 0x00	; 0
    3162:	90 e0       	ldi	r25, 0x00	; 0
    3164:	aa ef       	ldi	r26, 0xFA	; 250
    3166:	b3 e4       	ldi	r27, 0x43	; 67
    3168:	80 83       	st	Z, r24
    316a:	91 83       	std	Z+1, r25	; 0x01
    316c:	a2 83       	std	Z+2, r26	; 0x02
    316e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3170:	8e 01       	movw	r16, r28
    3172:	07 54       	subi	r16, 0x47	; 71
    3174:	1e 4f       	sbci	r17, 0xFE	; 254
    3176:	fe 01       	movw	r30, r28
    3178:	e3 54       	subi	r30, 0x43	; 67
    317a:	fe 4f       	sbci	r31, 0xFE	; 254
    317c:	60 81       	ld	r22, Z
    317e:	71 81       	ldd	r23, Z+1	; 0x01
    3180:	82 81       	ldd	r24, Z+2	; 0x02
    3182:	93 81       	ldd	r25, Z+3	; 0x03
    3184:	20 e0       	ldi	r18, 0x00	; 0
    3186:	30 e0       	ldi	r19, 0x00	; 0
    3188:	4a ef       	ldi	r20, 0xFA	; 250
    318a:	54 e4       	ldi	r21, 0x44	; 68
    318c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	f8 01       	movw	r30, r16
    3196:	80 83       	st	Z, r24
    3198:	91 83       	std	Z+1, r25	; 0x01
    319a:	a2 83       	std	Z+2, r26	; 0x02
    319c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    319e:	fe 01       	movw	r30, r28
    31a0:	e7 54       	subi	r30, 0x47	; 71
    31a2:	fe 4f       	sbci	r31, 0xFE	; 254
    31a4:	60 81       	ld	r22, Z
    31a6:	71 81       	ldd	r23, Z+1	; 0x01
    31a8:	82 81       	ldd	r24, Z+2	; 0x02
    31aa:	93 81       	ldd	r25, Z+3	; 0x03
    31ac:	20 e0       	ldi	r18, 0x00	; 0
    31ae:	30 e0       	ldi	r19, 0x00	; 0
    31b0:	40 e8       	ldi	r20, 0x80	; 128
    31b2:	5f e3       	ldi	r21, 0x3F	; 63
    31b4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    31b8:	88 23       	and	r24, r24
    31ba:	44 f4       	brge	.+16     	; 0x31cc <MyStory+0x390>
		__ticks = 1;
    31bc:	fe 01       	movw	r30, r28
    31be:	e9 54       	subi	r30, 0x49	; 73
    31c0:	fe 4f       	sbci	r31, 0xFE	; 254
    31c2:	81 e0       	ldi	r24, 0x01	; 1
    31c4:	90 e0       	ldi	r25, 0x00	; 0
    31c6:	91 83       	std	Z+1, r25	; 0x01
    31c8:	80 83       	st	Z, r24
    31ca:	64 c0       	rjmp	.+200    	; 0x3294 <MyStory+0x458>
	else if (__tmp > 65535)
    31cc:	fe 01       	movw	r30, r28
    31ce:	e7 54       	subi	r30, 0x47	; 71
    31d0:	fe 4f       	sbci	r31, 0xFE	; 254
    31d2:	60 81       	ld	r22, Z
    31d4:	71 81       	ldd	r23, Z+1	; 0x01
    31d6:	82 81       	ldd	r24, Z+2	; 0x02
    31d8:	93 81       	ldd	r25, Z+3	; 0x03
    31da:	20 e0       	ldi	r18, 0x00	; 0
    31dc:	3f ef       	ldi	r19, 0xFF	; 255
    31de:	4f e7       	ldi	r20, 0x7F	; 127
    31e0:	57 e4       	ldi	r21, 0x47	; 71
    31e2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    31e6:	18 16       	cp	r1, r24
    31e8:	0c f0       	brlt	.+2      	; 0x31ec <MyStory+0x3b0>
    31ea:	43 c0       	rjmp	.+134    	; 0x3272 <MyStory+0x436>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31ec:	fe 01       	movw	r30, r28
    31ee:	e3 54       	subi	r30, 0x43	; 67
    31f0:	fe 4f       	sbci	r31, 0xFE	; 254
    31f2:	60 81       	ld	r22, Z
    31f4:	71 81       	ldd	r23, Z+1	; 0x01
    31f6:	82 81       	ldd	r24, Z+2	; 0x02
    31f8:	93 81       	ldd	r25, Z+3	; 0x03
    31fa:	20 e0       	ldi	r18, 0x00	; 0
    31fc:	30 e0       	ldi	r19, 0x00	; 0
    31fe:	40 e2       	ldi	r20, 0x20	; 32
    3200:	51 e4       	ldi	r21, 0x41	; 65
    3202:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3206:	dc 01       	movw	r26, r24
    3208:	cb 01       	movw	r24, r22
    320a:	8e 01       	movw	r16, r28
    320c:	09 54       	subi	r16, 0x49	; 73
    320e:	1e 4f       	sbci	r17, 0xFE	; 254
    3210:	bc 01       	movw	r22, r24
    3212:	cd 01       	movw	r24, r26
    3214:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3218:	dc 01       	movw	r26, r24
    321a:	cb 01       	movw	r24, r22
    321c:	f8 01       	movw	r30, r16
    321e:	91 83       	std	Z+1, r25	; 0x01
    3220:	80 83       	st	Z, r24
    3222:	1f c0       	rjmp	.+62     	; 0x3262 <MyStory+0x426>
    3224:	fe 01       	movw	r30, r28
    3226:	eb 54       	subi	r30, 0x4B	; 75
    3228:	fe 4f       	sbci	r31, 0xFE	; 254
    322a:	88 ec       	ldi	r24, 0xC8	; 200
    322c:	90 e0       	ldi	r25, 0x00	; 0
    322e:	91 83       	std	Z+1, r25	; 0x01
    3230:	80 83       	st	Z, r24
    3232:	fe 01       	movw	r30, r28
    3234:	eb 54       	subi	r30, 0x4B	; 75
    3236:	fe 4f       	sbci	r31, 0xFE	; 254
    3238:	80 81       	ld	r24, Z
    323a:	91 81       	ldd	r25, Z+1	; 0x01
    323c:	01 97       	sbiw	r24, 0x01	; 1
    323e:	f1 f7       	brne	.-4      	; 0x323c <MyStory+0x400>
    3240:	fe 01       	movw	r30, r28
    3242:	eb 54       	subi	r30, 0x4B	; 75
    3244:	fe 4f       	sbci	r31, 0xFE	; 254
    3246:	91 83       	std	Z+1, r25	; 0x01
    3248:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    324a:	de 01       	movw	r26, r28
    324c:	a9 54       	subi	r26, 0x49	; 73
    324e:	be 4f       	sbci	r27, 0xFE	; 254
    3250:	fe 01       	movw	r30, r28
    3252:	e9 54       	subi	r30, 0x49	; 73
    3254:	fe 4f       	sbci	r31, 0xFE	; 254
    3256:	80 81       	ld	r24, Z
    3258:	91 81       	ldd	r25, Z+1	; 0x01
    325a:	01 97       	sbiw	r24, 0x01	; 1
    325c:	11 96       	adiw	r26, 0x01	; 1
    325e:	9c 93       	st	X, r25
    3260:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3262:	fe 01       	movw	r30, r28
    3264:	e9 54       	subi	r30, 0x49	; 73
    3266:	fe 4f       	sbci	r31, 0xFE	; 254
    3268:	80 81       	ld	r24, Z
    326a:	91 81       	ldd	r25, Z+1	; 0x01
    326c:	00 97       	sbiw	r24, 0x00	; 0
    326e:	d1 f6       	brne	.-76     	; 0x3224 <MyStory+0x3e8>
    3270:	27 c0       	rjmp	.+78     	; 0x32c0 <MyStory+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3272:	8e 01       	movw	r16, r28
    3274:	09 54       	subi	r16, 0x49	; 73
    3276:	1e 4f       	sbci	r17, 0xFE	; 254
    3278:	fe 01       	movw	r30, r28
    327a:	e7 54       	subi	r30, 0x47	; 71
    327c:	fe 4f       	sbci	r31, 0xFE	; 254
    327e:	60 81       	ld	r22, Z
    3280:	71 81       	ldd	r23, Z+1	; 0x01
    3282:	82 81       	ldd	r24, Z+2	; 0x02
    3284:	93 81       	ldd	r25, Z+3	; 0x03
    3286:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    328a:	dc 01       	movw	r26, r24
    328c:	cb 01       	movw	r24, r22
    328e:	f8 01       	movw	r30, r16
    3290:	91 83       	std	Z+1, r25	; 0x01
    3292:	80 83       	st	Z, r24
    3294:	de 01       	movw	r26, r28
    3296:	ad 54       	subi	r26, 0x4D	; 77
    3298:	be 4f       	sbci	r27, 0xFE	; 254
    329a:	fe 01       	movw	r30, r28
    329c:	e9 54       	subi	r30, 0x49	; 73
    329e:	fe 4f       	sbci	r31, 0xFE	; 254
    32a0:	80 81       	ld	r24, Z
    32a2:	91 81       	ldd	r25, Z+1	; 0x01
    32a4:	8d 93       	st	X+, r24
    32a6:	9c 93       	st	X, r25
    32a8:	fe 01       	movw	r30, r28
    32aa:	ed 54       	subi	r30, 0x4D	; 77
    32ac:	fe 4f       	sbci	r31, 0xFE	; 254
    32ae:	80 81       	ld	r24, Z
    32b0:	91 81       	ldd	r25, Z+1	; 0x01
    32b2:	01 97       	sbiw	r24, 0x01	; 1
    32b4:	f1 f7       	brne	.-4      	; 0x32b2 <MyStory+0x476>
    32b6:	fe 01       	movw	r30, r28
    32b8:	ed 54       	subi	r30, 0x4D	; 77
    32ba:	fe 4f       	sbci	r31, 0xFE	; 254
    32bc:	91 83       	std	Z+1, r25	; 0x01
    32be:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("my life.As my father ");
    32c0:	8a ed       	ldi	r24, 0xDA	; 218
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    32c8:	fe 01       	movw	r30, r28
    32ca:	e1 55       	subi	r30, 0x51	; 81
    32cc:	fe 4f       	sbci	r31, 0xFE	; 254
    32ce:	80 e0       	ldi	r24, 0x00	; 0
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	aa e7       	ldi	r26, 0x7A	; 122
    32d4:	b4 e4       	ldi	r27, 0x44	; 68
    32d6:	80 83       	st	Z, r24
    32d8:	91 83       	std	Z+1, r25	; 0x01
    32da:	a2 83       	std	Z+2, r26	; 0x02
    32dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32de:	8e 01       	movw	r16, r28
    32e0:	05 55       	subi	r16, 0x55	; 85
    32e2:	1e 4f       	sbci	r17, 0xFE	; 254
    32e4:	fe 01       	movw	r30, r28
    32e6:	e1 55       	subi	r30, 0x51	; 81
    32e8:	fe 4f       	sbci	r31, 0xFE	; 254
    32ea:	60 81       	ld	r22, Z
    32ec:	71 81       	ldd	r23, Z+1	; 0x01
    32ee:	82 81       	ldd	r24, Z+2	; 0x02
    32f0:	93 81       	ldd	r25, Z+3	; 0x03
    32f2:	20 e0       	ldi	r18, 0x00	; 0
    32f4:	30 e0       	ldi	r19, 0x00	; 0
    32f6:	4a ef       	ldi	r20, 0xFA	; 250
    32f8:	54 e4       	ldi	r21, 0x44	; 68
    32fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    32fe:	dc 01       	movw	r26, r24
    3300:	cb 01       	movw	r24, r22
    3302:	f8 01       	movw	r30, r16
    3304:	80 83       	st	Z, r24
    3306:	91 83       	std	Z+1, r25	; 0x01
    3308:	a2 83       	std	Z+2, r26	; 0x02
    330a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    330c:	fe 01       	movw	r30, r28
    330e:	e5 55       	subi	r30, 0x55	; 85
    3310:	fe 4f       	sbci	r31, 0xFE	; 254
    3312:	60 81       	ld	r22, Z
    3314:	71 81       	ldd	r23, Z+1	; 0x01
    3316:	82 81       	ldd	r24, Z+2	; 0x02
    3318:	93 81       	ldd	r25, Z+3	; 0x03
    331a:	20 e0       	ldi	r18, 0x00	; 0
    331c:	30 e0       	ldi	r19, 0x00	; 0
    331e:	40 e8       	ldi	r20, 0x80	; 128
    3320:	5f e3       	ldi	r21, 0x3F	; 63
    3322:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3326:	88 23       	and	r24, r24
    3328:	44 f4       	brge	.+16     	; 0x333a <MyStory+0x4fe>
		__ticks = 1;
    332a:	fe 01       	movw	r30, r28
    332c:	e7 55       	subi	r30, 0x57	; 87
    332e:	fe 4f       	sbci	r31, 0xFE	; 254
    3330:	81 e0       	ldi	r24, 0x01	; 1
    3332:	90 e0       	ldi	r25, 0x00	; 0
    3334:	91 83       	std	Z+1, r25	; 0x01
    3336:	80 83       	st	Z, r24
    3338:	64 c0       	rjmp	.+200    	; 0x3402 <MyStory+0x5c6>
	else if (__tmp > 65535)
    333a:	fe 01       	movw	r30, r28
    333c:	e5 55       	subi	r30, 0x55	; 85
    333e:	fe 4f       	sbci	r31, 0xFE	; 254
    3340:	60 81       	ld	r22, Z
    3342:	71 81       	ldd	r23, Z+1	; 0x01
    3344:	82 81       	ldd	r24, Z+2	; 0x02
    3346:	93 81       	ldd	r25, Z+3	; 0x03
    3348:	20 e0       	ldi	r18, 0x00	; 0
    334a:	3f ef       	ldi	r19, 0xFF	; 255
    334c:	4f e7       	ldi	r20, 0x7F	; 127
    334e:	57 e4       	ldi	r21, 0x47	; 71
    3350:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3354:	18 16       	cp	r1, r24
    3356:	0c f0       	brlt	.+2      	; 0x335a <MyStory+0x51e>
    3358:	43 c0       	rjmp	.+134    	; 0x33e0 <MyStory+0x5a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    335a:	fe 01       	movw	r30, r28
    335c:	e1 55       	subi	r30, 0x51	; 81
    335e:	fe 4f       	sbci	r31, 0xFE	; 254
    3360:	60 81       	ld	r22, Z
    3362:	71 81       	ldd	r23, Z+1	; 0x01
    3364:	82 81       	ldd	r24, Z+2	; 0x02
    3366:	93 81       	ldd	r25, Z+3	; 0x03
    3368:	20 e0       	ldi	r18, 0x00	; 0
    336a:	30 e0       	ldi	r19, 0x00	; 0
    336c:	40 e2       	ldi	r20, 0x20	; 32
    336e:	51 e4       	ldi	r21, 0x41	; 65
    3370:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3374:	dc 01       	movw	r26, r24
    3376:	cb 01       	movw	r24, r22
    3378:	8e 01       	movw	r16, r28
    337a:	07 55       	subi	r16, 0x57	; 87
    337c:	1e 4f       	sbci	r17, 0xFE	; 254
    337e:	bc 01       	movw	r22, r24
    3380:	cd 01       	movw	r24, r26
    3382:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3386:	dc 01       	movw	r26, r24
    3388:	cb 01       	movw	r24, r22
    338a:	f8 01       	movw	r30, r16
    338c:	91 83       	std	Z+1, r25	; 0x01
    338e:	80 83       	st	Z, r24
    3390:	1f c0       	rjmp	.+62     	; 0x33d0 <MyStory+0x594>
    3392:	fe 01       	movw	r30, r28
    3394:	e9 55       	subi	r30, 0x59	; 89
    3396:	fe 4f       	sbci	r31, 0xFE	; 254
    3398:	88 ec       	ldi	r24, 0xC8	; 200
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	91 83       	std	Z+1, r25	; 0x01
    339e:	80 83       	st	Z, r24
    33a0:	fe 01       	movw	r30, r28
    33a2:	e9 55       	subi	r30, 0x59	; 89
    33a4:	fe 4f       	sbci	r31, 0xFE	; 254
    33a6:	80 81       	ld	r24, Z
    33a8:	91 81       	ldd	r25, Z+1	; 0x01
    33aa:	01 97       	sbiw	r24, 0x01	; 1
    33ac:	f1 f7       	brne	.-4      	; 0x33aa <MyStory+0x56e>
    33ae:	fe 01       	movw	r30, r28
    33b0:	e9 55       	subi	r30, 0x59	; 89
    33b2:	fe 4f       	sbci	r31, 0xFE	; 254
    33b4:	91 83       	std	Z+1, r25	; 0x01
    33b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33b8:	de 01       	movw	r26, r28
    33ba:	a7 55       	subi	r26, 0x57	; 87
    33bc:	be 4f       	sbci	r27, 0xFE	; 254
    33be:	fe 01       	movw	r30, r28
    33c0:	e7 55       	subi	r30, 0x57	; 87
    33c2:	fe 4f       	sbci	r31, 0xFE	; 254
    33c4:	80 81       	ld	r24, Z
    33c6:	91 81       	ldd	r25, Z+1	; 0x01
    33c8:	01 97       	sbiw	r24, 0x01	; 1
    33ca:	11 96       	adiw	r26, 0x01	; 1
    33cc:	9c 93       	st	X, r25
    33ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33d0:	fe 01       	movw	r30, r28
    33d2:	e7 55       	subi	r30, 0x57	; 87
    33d4:	fe 4f       	sbci	r31, 0xFE	; 254
    33d6:	80 81       	ld	r24, Z
    33d8:	91 81       	ldd	r25, Z+1	; 0x01
    33da:	00 97       	sbiw	r24, 0x00	; 0
    33dc:	d1 f6       	brne	.-76     	; 0x3392 <MyStory+0x556>
    33de:	27 c0       	rjmp	.+78     	; 0x342e <MyStory+0x5f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33e0:	8e 01       	movw	r16, r28
    33e2:	07 55       	subi	r16, 0x57	; 87
    33e4:	1e 4f       	sbci	r17, 0xFE	; 254
    33e6:	fe 01       	movw	r30, r28
    33e8:	e5 55       	subi	r30, 0x55	; 85
    33ea:	fe 4f       	sbci	r31, 0xFE	; 254
    33ec:	60 81       	ld	r22, Z
    33ee:	71 81       	ldd	r23, Z+1	; 0x01
    33f0:	82 81       	ldd	r24, Z+2	; 0x02
    33f2:	93 81       	ldd	r25, Z+3	; 0x03
    33f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	f8 01       	movw	r30, r16
    33fe:	91 83       	std	Z+1, r25	; 0x01
    3400:	80 83       	st	Z, r24
    3402:	de 01       	movw	r26, r28
    3404:	ab 55       	subi	r26, 0x5B	; 91
    3406:	be 4f       	sbci	r27, 0xFE	; 254
    3408:	fe 01       	movw	r30, r28
    340a:	e7 55       	subi	r30, 0x57	; 87
    340c:	fe 4f       	sbci	r31, 0xFE	; 254
    340e:	80 81       	ld	r24, Z
    3410:	91 81       	ldd	r25, Z+1	; 0x01
    3412:	8d 93       	st	X+, r24
    3414:	9c 93       	st	X, r25
    3416:	fe 01       	movw	r30, r28
    3418:	eb 55       	subi	r30, 0x5B	; 91
    341a:	fe 4f       	sbci	r31, 0xFE	; 254
    341c:	80 81       	ld	r24, Z
    341e:	91 81       	ldd	r25, Z+1	; 0x01
    3420:	01 97       	sbiw	r24, 0x01	; 1
    3422:	f1 f7       	brne	.-4      	; 0x3420 <MyStory+0x5e4>
    3424:	fe 01       	movw	r30, r28
    3426:	eb 55       	subi	r30, 0x5B	; 91
    3428:	fe 4f       	sbci	r31, 0xFE	; 254
    342a:	91 83       	std	Z+1, r25	; 0x01
    342c:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear(); //clear
    342e:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	60 e0       	ldi	r22, 0x00	; 0
    3436:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    343a:	fe 01       	movw	r30, r28
    343c:	ef 55       	subi	r30, 0x5F	; 95
    343e:	fe 4f       	sbci	r31, 0xFE	; 254
    3440:	80 e0       	ldi	r24, 0x00	; 0
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	aa ef       	ldi	r26, 0xFA	; 250
    3446:	b3 e4       	ldi	r27, 0x43	; 67
    3448:	80 83       	st	Z, r24
    344a:	91 83       	std	Z+1, r25	; 0x01
    344c:	a2 83       	std	Z+2, r26	; 0x02
    344e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3450:	8e 01       	movw	r16, r28
    3452:	03 56       	subi	r16, 0x63	; 99
    3454:	1e 4f       	sbci	r17, 0xFE	; 254
    3456:	fe 01       	movw	r30, r28
    3458:	ef 55       	subi	r30, 0x5F	; 95
    345a:	fe 4f       	sbci	r31, 0xFE	; 254
    345c:	60 81       	ld	r22, Z
    345e:	71 81       	ldd	r23, Z+1	; 0x01
    3460:	82 81       	ldd	r24, Z+2	; 0x02
    3462:	93 81       	ldd	r25, Z+3	; 0x03
    3464:	20 e0       	ldi	r18, 0x00	; 0
    3466:	30 e0       	ldi	r19, 0x00	; 0
    3468:	4a ef       	ldi	r20, 0xFA	; 250
    346a:	54 e4       	ldi	r21, 0x44	; 68
    346c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3470:	dc 01       	movw	r26, r24
    3472:	cb 01       	movw	r24, r22
    3474:	f8 01       	movw	r30, r16
    3476:	80 83       	st	Z, r24
    3478:	91 83       	std	Z+1, r25	; 0x01
    347a:	a2 83       	std	Z+2, r26	; 0x02
    347c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    347e:	fe 01       	movw	r30, r28
    3480:	e3 56       	subi	r30, 0x63	; 99
    3482:	fe 4f       	sbci	r31, 0xFE	; 254
    3484:	60 81       	ld	r22, Z
    3486:	71 81       	ldd	r23, Z+1	; 0x01
    3488:	82 81       	ldd	r24, Z+2	; 0x02
    348a:	93 81       	ldd	r25, Z+3	; 0x03
    348c:	20 e0       	ldi	r18, 0x00	; 0
    348e:	30 e0       	ldi	r19, 0x00	; 0
    3490:	40 e8       	ldi	r20, 0x80	; 128
    3492:	5f e3       	ldi	r21, 0x3F	; 63
    3494:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3498:	88 23       	and	r24, r24
    349a:	44 f4       	brge	.+16     	; 0x34ac <MyStory+0x670>
		__ticks = 1;
    349c:	fe 01       	movw	r30, r28
    349e:	e5 56       	subi	r30, 0x65	; 101
    34a0:	fe 4f       	sbci	r31, 0xFE	; 254
    34a2:	81 e0       	ldi	r24, 0x01	; 1
    34a4:	90 e0       	ldi	r25, 0x00	; 0
    34a6:	91 83       	std	Z+1, r25	; 0x01
    34a8:	80 83       	st	Z, r24
    34aa:	64 c0       	rjmp	.+200    	; 0x3574 <MyStory+0x738>
	else if (__tmp > 65535)
    34ac:	fe 01       	movw	r30, r28
    34ae:	e3 56       	subi	r30, 0x63	; 99
    34b0:	fe 4f       	sbci	r31, 0xFE	; 254
    34b2:	60 81       	ld	r22, Z
    34b4:	71 81       	ldd	r23, Z+1	; 0x01
    34b6:	82 81       	ldd	r24, Z+2	; 0x02
    34b8:	93 81       	ldd	r25, Z+3	; 0x03
    34ba:	20 e0       	ldi	r18, 0x00	; 0
    34bc:	3f ef       	ldi	r19, 0xFF	; 255
    34be:	4f e7       	ldi	r20, 0x7F	; 127
    34c0:	57 e4       	ldi	r21, 0x47	; 71
    34c2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    34c6:	18 16       	cp	r1, r24
    34c8:	0c f0       	brlt	.+2      	; 0x34cc <MyStory+0x690>
    34ca:	43 c0       	rjmp	.+134    	; 0x3552 <MyStory+0x716>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34cc:	fe 01       	movw	r30, r28
    34ce:	ef 55       	subi	r30, 0x5F	; 95
    34d0:	fe 4f       	sbci	r31, 0xFE	; 254
    34d2:	60 81       	ld	r22, Z
    34d4:	71 81       	ldd	r23, Z+1	; 0x01
    34d6:	82 81       	ldd	r24, Z+2	; 0x02
    34d8:	93 81       	ldd	r25, Z+3	; 0x03
    34da:	20 e0       	ldi	r18, 0x00	; 0
    34dc:	30 e0       	ldi	r19, 0x00	; 0
    34de:	40 e2       	ldi	r20, 0x20	; 32
    34e0:	51 e4       	ldi	r21, 0x41	; 65
    34e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    34e6:	dc 01       	movw	r26, r24
    34e8:	cb 01       	movw	r24, r22
    34ea:	8e 01       	movw	r16, r28
    34ec:	05 56       	subi	r16, 0x65	; 101
    34ee:	1e 4f       	sbci	r17, 0xFE	; 254
    34f0:	bc 01       	movw	r22, r24
    34f2:	cd 01       	movw	r24, r26
    34f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34f8:	dc 01       	movw	r26, r24
    34fa:	cb 01       	movw	r24, r22
    34fc:	f8 01       	movw	r30, r16
    34fe:	91 83       	std	Z+1, r25	; 0x01
    3500:	80 83       	st	Z, r24
    3502:	1f c0       	rjmp	.+62     	; 0x3542 <MyStory+0x706>
    3504:	fe 01       	movw	r30, r28
    3506:	e7 56       	subi	r30, 0x67	; 103
    3508:	fe 4f       	sbci	r31, 0xFE	; 254
    350a:	88 ec       	ldi	r24, 0xC8	; 200
    350c:	90 e0       	ldi	r25, 0x00	; 0
    350e:	91 83       	std	Z+1, r25	; 0x01
    3510:	80 83       	st	Z, r24
    3512:	fe 01       	movw	r30, r28
    3514:	e7 56       	subi	r30, 0x67	; 103
    3516:	fe 4f       	sbci	r31, 0xFE	; 254
    3518:	80 81       	ld	r24, Z
    351a:	91 81       	ldd	r25, Z+1	; 0x01
    351c:	01 97       	sbiw	r24, 0x01	; 1
    351e:	f1 f7       	brne	.-4      	; 0x351c <MyStory+0x6e0>
    3520:	fe 01       	movw	r30, r28
    3522:	e7 56       	subi	r30, 0x67	; 103
    3524:	fe 4f       	sbci	r31, 0xFE	; 254
    3526:	91 83       	std	Z+1, r25	; 0x01
    3528:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    352a:	de 01       	movw	r26, r28
    352c:	a5 56       	subi	r26, 0x65	; 101
    352e:	be 4f       	sbci	r27, 0xFE	; 254
    3530:	fe 01       	movw	r30, r28
    3532:	e5 56       	subi	r30, 0x65	; 101
    3534:	fe 4f       	sbci	r31, 0xFE	; 254
    3536:	80 81       	ld	r24, Z
    3538:	91 81       	ldd	r25, Z+1	; 0x01
    353a:	01 97       	sbiw	r24, 0x01	; 1
    353c:	11 96       	adiw	r26, 0x01	; 1
    353e:	9c 93       	st	X, r25
    3540:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3542:	fe 01       	movw	r30, r28
    3544:	e5 56       	subi	r30, 0x65	; 101
    3546:	fe 4f       	sbci	r31, 0xFE	; 254
    3548:	80 81       	ld	r24, Z
    354a:	91 81       	ldd	r25, Z+1	; 0x01
    354c:	00 97       	sbiw	r24, 0x00	; 0
    354e:	d1 f6       	brne	.-76     	; 0x3504 <MyStory+0x6c8>
    3550:	27 c0       	rjmp	.+78     	; 0x35a0 <MyStory+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3552:	8e 01       	movw	r16, r28
    3554:	05 56       	subi	r16, 0x65	; 101
    3556:	1e 4f       	sbci	r17, 0xFE	; 254
    3558:	fe 01       	movw	r30, r28
    355a:	e3 56       	subi	r30, 0x63	; 99
    355c:	fe 4f       	sbci	r31, 0xFE	; 254
    355e:	60 81       	ld	r22, Z
    3560:	71 81       	ldd	r23, Z+1	; 0x01
    3562:	82 81       	ldd	r24, Z+2	; 0x02
    3564:	93 81       	ldd	r25, Z+3	; 0x03
    3566:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    356a:	dc 01       	movw	r26, r24
    356c:	cb 01       	movw	r24, r22
    356e:	f8 01       	movw	r30, r16
    3570:	91 83       	std	Z+1, r25	; 0x01
    3572:	80 83       	st	Z, r24
    3574:	de 01       	movw	r26, r28
    3576:	a9 56       	subi	r26, 0x69	; 105
    3578:	be 4f       	sbci	r27, 0xFE	; 254
    357a:	fe 01       	movw	r30, r28
    357c:	e5 56       	subi	r30, 0x65	; 101
    357e:	fe 4f       	sbci	r31, 0xFE	; 254
    3580:	80 81       	ld	r24, Z
    3582:	91 81       	ldd	r25, Z+1	; 0x01
    3584:	8d 93       	st	X+, r24
    3586:	9c 93       	st	X, r25
    3588:	fe 01       	movw	r30, r28
    358a:	e9 56       	subi	r30, 0x69	; 105
    358c:	fe 4f       	sbci	r31, 0xFE	; 254
    358e:	80 81       	ld	r24, Z
    3590:	91 81       	ldd	r25, Z+1	; 0x01
    3592:	01 97       	sbiw	r24, 0x01	; 1
    3594:	f1 f7       	brne	.-4      	; 0x3592 <MyStory+0x756>
    3596:	fe 01       	movw	r30, r28
    3598:	e9 56       	subi	r30, 0x69	; 105
    359a:	fe 4f       	sbci	r31, 0xFE	; 254
    359c:	91 83       	std	Z+1, r25	; 0x01
    359e:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("died before the ");
    35a0:	80 ef       	ldi	r24, 0xF0	; 240
    35a2:	90 e0       	ldi	r25, 0x00	; 0
    35a4:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>


	LCD_GoTo(1,0);
    35a8:	81 e0       	ldi	r24, 0x01	; 1
    35aa:	60 e0       	ldi	r22, 0x00	; 0
    35ac:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    35b0:	fe 01       	movw	r30, r28
    35b2:	ed 56       	subi	r30, 0x6D	; 109
    35b4:	fe 4f       	sbci	r31, 0xFE	; 254
    35b6:	80 e0       	ldi	r24, 0x00	; 0
    35b8:	90 e0       	ldi	r25, 0x00	; 0
    35ba:	aa ef       	ldi	r26, 0xFA	; 250
    35bc:	b3 e4       	ldi	r27, 0x43	; 67
    35be:	80 83       	st	Z, r24
    35c0:	91 83       	std	Z+1, r25	; 0x01
    35c2:	a2 83       	std	Z+2, r26	; 0x02
    35c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35c6:	8e 01       	movw	r16, r28
    35c8:	01 57       	subi	r16, 0x71	; 113
    35ca:	1e 4f       	sbci	r17, 0xFE	; 254
    35cc:	fe 01       	movw	r30, r28
    35ce:	ed 56       	subi	r30, 0x6D	; 109
    35d0:	fe 4f       	sbci	r31, 0xFE	; 254
    35d2:	60 81       	ld	r22, Z
    35d4:	71 81       	ldd	r23, Z+1	; 0x01
    35d6:	82 81       	ldd	r24, Z+2	; 0x02
    35d8:	93 81       	ldd	r25, Z+3	; 0x03
    35da:	20 e0       	ldi	r18, 0x00	; 0
    35dc:	30 e0       	ldi	r19, 0x00	; 0
    35de:	4a ef       	ldi	r20, 0xFA	; 250
    35e0:	54 e4       	ldi	r21, 0x44	; 68
    35e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    35e6:	dc 01       	movw	r26, r24
    35e8:	cb 01       	movw	r24, r22
    35ea:	f8 01       	movw	r30, r16
    35ec:	80 83       	st	Z, r24
    35ee:	91 83       	std	Z+1, r25	; 0x01
    35f0:	a2 83       	std	Z+2, r26	; 0x02
    35f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35f4:	fe 01       	movw	r30, r28
    35f6:	e1 57       	subi	r30, 0x71	; 113
    35f8:	fe 4f       	sbci	r31, 0xFE	; 254
    35fa:	60 81       	ld	r22, Z
    35fc:	71 81       	ldd	r23, Z+1	; 0x01
    35fe:	82 81       	ldd	r24, Z+2	; 0x02
    3600:	93 81       	ldd	r25, Z+3	; 0x03
    3602:	20 e0       	ldi	r18, 0x00	; 0
    3604:	30 e0       	ldi	r19, 0x00	; 0
    3606:	40 e8       	ldi	r20, 0x80	; 128
    3608:	5f e3       	ldi	r21, 0x3F	; 63
    360a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    360e:	88 23       	and	r24, r24
    3610:	44 f4       	brge	.+16     	; 0x3622 <MyStory+0x7e6>
		__ticks = 1;
    3612:	fe 01       	movw	r30, r28
    3614:	e3 57       	subi	r30, 0x73	; 115
    3616:	fe 4f       	sbci	r31, 0xFE	; 254
    3618:	81 e0       	ldi	r24, 0x01	; 1
    361a:	90 e0       	ldi	r25, 0x00	; 0
    361c:	91 83       	std	Z+1, r25	; 0x01
    361e:	80 83       	st	Z, r24
    3620:	64 c0       	rjmp	.+200    	; 0x36ea <MyStory+0x8ae>
	else if (__tmp > 65535)
    3622:	fe 01       	movw	r30, r28
    3624:	e1 57       	subi	r30, 0x71	; 113
    3626:	fe 4f       	sbci	r31, 0xFE	; 254
    3628:	60 81       	ld	r22, Z
    362a:	71 81       	ldd	r23, Z+1	; 0x01
    362c:	82 81       	ldd	r24, Z+2	; 0x02
    362e:	93 81       	ldd	r25, Z+3	; 0x03
    3630:	20 e0       	ldi	r18, 0x00	; 0
    3632:	3f ef       	ldi	r19, 0xFF	; 255
    3634:	4f e7       	ldi	r20, 0x7F	; 127
    3636:	57 e4       	ldi	r21, 0x47	; 71
    3638:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    363c:	18 16       	cp	r1, r24
    363e:	0c f0       	brlt	.+2      	; 0x3642 <MyStory+0x806>
    3640:	43 c0       	rjmp	.+134    	; 0x36c8 <MyStory+0x88c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3642:	fe 01       	movw	r30, r28
    3644:	ed 56       	subi	r30, 0x6D	; 109
    3646:	fe 4f       	sbci	r31, 0xFE	; 254
    3648:	60 81       	ld	r22, Z
    364a:	71 81       	ldd	r23, Z+1	; 0x01
    364c:	82 81       	ldd	r24, Z+2	; 0x02
    364e:	93 81       	ldd	r25, Z+3	; 0x03
    3650:	20 e0       	ldi	r18, 0x00	; 0
    3652:	30 e0       	ldi	r19, 0x00	; 0
    3654:	40 e2       	ldi	r20, 0x20	; 32
    3656:	51 e4       	ldi	r21, 0x41	; 65
    3658:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    365c:	dc 01       	movw	r26, r24
    365e:	cb 01       	movw	r24, r22
    3660:	8e 01       	movw	r16, r28
    3662:	03 57       	subi	r16, 0x73	; 115
    3664:	1e 4f       	sbci	r17, 0xFE	; 254
    3666:	bc 01       	movw	r22, r24
    3668:	cd 01       	movw	r24, r26
    366a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    366e:	dc 01       	movw	r26, r24
    3670:	cb 01       	movw	r24, r22
    3672:	f8 01       	movw	r30, r16
    3674:	91 83       	std	Z+1, r25	; 0x01
    3676:	80 83       	st	Z, r24
    3678:	1f c0       	rjmp	.+62     	; 0x36b8 <MyStory+0x87c>
    367a:	fe 01       	movw	r30, r28
    367c:	e5 57       	subi	r30, 0x75	; 117
    367e:	fe 4f       	sbci	r31, 0xFE	; 254
    3680:	88 ec       	ldi	r24, 0xC8	; 200
    3682:	90 e0       	ldi	r25, 0x00	; 0
    3684:	91 83       	std	Z+1, r25	; 0x01
    3686:	80 83       	st	Z, r24
    3688:	fe 01       	movw	r30, r28
    368a:	e5 57       	subi	r30, 0x75	; 117
    368c:	fe 4f       	sbci	r31, 0xFE	; 254
    368e:	80 81       	ld	r24, Z
    3690:	91 81       	ldd	r25, Z+1	; 0x01
    3692:	01 97       	sbiw	r24, 0x01	; 1
    3694:	f1 f7       	brne	.-4      	; 0x3692 <MyStory+0x856>
    3696:	fe 01       	movw	r30, r28
    3698:	e5 57       	subi	r30, 0x75	; 117
    369a:	fe 4f       	sbci	r31, 0xFE	; 254
    369c:	91 83       	std	Z+1, r25	; 0x01
    369e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36a0:	de 01       	movw	r26, r28
    36a2:	a3 57       	subi	r26, 0x73	; 115
    36a4:	be 4f       	sbci	r27, 0xFE	; 254
    36a6:	fe 01       	movw	r30, r28
    36a8:	e3 57       	subi	r30, 0x73	; 115
    36aa:	fe 4f       	sbci	r31, 0xFE	; 254
    36ac:	80 81       	ld	r24, Z
    36ae:	91 81       	ldd	r25, Z+1	; 0x01
    36b0:	01 97       	sbiw	r24, 0x01	; 1
    36b2:	11 96       	adiw	r26, 0x01	; 1
    36b4:	9c 93       	st	X, r25
    36b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36b8:	fe 01       	movw	r30, r28
    36ba:	e3 57       	subi	r30, 0x73	; 115
    36bc:	fe 4f       	sbci	r31, 0xFE	; 254
    36be:	80 81       	ld	r24, Z
    36c0:	91 81       	ldd	r25, Z+1	; 0x01
    36c2:	00 97       	sbiw	r24, 0x00	; 0
    36c4:	d1 f6       	brne	.-76     	; 0x367a <MyStory+0x83e>
    36c6:	27 c0       	rjmp	.+78     	; 0x3716 <MyStory+0x8da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36c8:	8e 01       	movw	r16, r28
    36ca:	03 57       	subi	r16, 0x73	; 115
    36cc:	1e 4f       	sbci	r17, 0xFE	; 254
    36ce:	fe 01       	movw	r30, r28
    36d0:	e1 57       	subi	r30, 0x71	; 113
    36d2:	fe 4f       	sbci	r31, 0xFE	; 254
    36d4:	60 81       	ld	r22, Z
    36d6:	71 81       	ldd	r23, Z+1	; 0x01
    36d8:	82 81       	ldd	r24, Z+2	; 0x02
    36da:	93 81       	ldd	r25, Z+3	; 0x03
    36dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    36e0:	dc 01       	movw	r26, r24
    36e2:	cb 01       	movw	r24, r22
    36e4:	f8 01       	movw	r30, r16
    36e6:	91 83       	std	Z+1, r25	; 0x01
    36e8:	80 83       	st	Z, r24
    36ea:	de 01       	movw	r26, r28
    36ec:	a7 57       	subi	r26, 0x77	; 119
    36ee:	be 4f       	sbci	r27, 0xFE	; 254
    36f0:	fe 01       	movw	r30, r28
    36f2:	e3 57       	subi	r30, 0x73	; 115
    36f4:	fe 4f       	sbci	r31, 0xFE	; 254
    36f6:	80 81       	ld	r24, Z
    36f8:	91 81       	ldd	r25, Z+1	; 0x01
    36fa:	8d 93       	st	X+, r24
    36fc:	9c 93       	st	X, r25
    36fe:	fe 01       	movw	r30, r28
    3700:	e7 57       	subi	r30, 0x77	; 119
    3702:	fe 4f       	sbci	r31, 0xFE	; 254
    3704:	80 81       	ld	r24, Z
    3706:	91 81       	ldd	r25, Z+1	; 0x01
    3708:	01 97       	sbiw	r24, 0x01	; 1
    370a:	f1 f7       	brne	.-4      	; 0x3708 <MyStory+0x8cc>
    370c:	fe 01       	movw	r30, r28
    370e:	e7 57       	subi	r30, 0x77	; 119
    3710:	fe 4f       	sbci	r31, 0xFE	; 254
    3712:	91 83       	std	Z+1, r25	; 0x01
    3714:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("beginning of my last ");
    3716:	81 e0       	ldi	r24, 0x01	; 1
    3718:	91 e0       	ldi	r25, 0x01	; 1
    371a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    371e:	82 e0       	ldi	r24, 0x02	; 2
    3720:	60 e0       	ldi	r22, 0x00	; 0
    3722:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    3726:	fe 01       	movw	r30, r28
    3728:	eb 57       	subi	r30, 0x7B	; 123
    372a:	fe 4f       	sbci	r31, 0xFE	; 254
    372c:	80 e0       	ldi	r24, 0x00	; 0
    372e:	90 e0       	ldi	r25, 0x00	; 0
    3730:	aa ef       	ldi	r26, 0xFA	; 250
    3732:	b3 e4       	ldi	r27, 0x43	; 67
    3734:	80 83       	st	Z, r24
    3736:	91 83       	std	Z+1, r25	; 0x01
    3738:	a2 83       	std	Z+2, r26	; 0x02
    373a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    373c:	8e 01       	movw	r16, r28
    373e:	0f 57       	subi	r16, 0x7F	; 127
    3740:	1e 4f       	sbci	r17, 0xFE	; 254
    3742:	fe 01       	movw	r30, r28
    3744:	eb 57       	subi	r30, 0x7B	; 123
    3746:	fe 4f       	sbci	r31, 0xFE	; 254
    3748:	60 81       	ld	r22, Z
    374a:	71 81       	ldd	r23, Z+1	; 0x01
    374c:	82 81       	ldd	r24, Z+2	; 0x02
    374e:	93 81       	ldd	r25, Z+3	; 0x03
    3750:	20 e0       	ldi	r18, 0x00	; 0
    3752:	30 e0       	ldi	r19, 0x00	; 0
    3754:	4a ef       	ldi	r20, 0xFA	; 250
    3756:	54 e4       	ldi	r21, 0x44	; 68
    3758:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    375c:	dc 01       	movw	r26, r24
    375e:	cb 01       	movw	r24, r22
    3760:	f8 01       	movw	r30, r16
    3762:	80 83       	st	Z, r24
    3764:	91 83       	std	Z+1, r25	; 0x01
    3766:	a2 83       	std	Z+2, r26	; 0x02
    3768:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    376a:	fe 01       	movw	r30, r28
    376c:	ef 57       	subi	r30, 0x7F	; 127
    376e:	fe 4f       	sbci	r31, 0xFE	; 254
    3770:	60 81       	ld	r22, Z
    3772:	71 81       	ldd	r23, Z+1	; 0x01
    3774:	82 81       	ldd	r24, Z+2	; 0x02
    3776:	93 81       	ldd	r25, Z+3	; 0x03
    3778:	20 e0       	ldi	r18, 0x00	; 0
    377a:	30 e0       	ldi	r19, 0x00	; 0
    377c:	40 e8       	ldi	r20, 0x80	; 128
    377e:	5f e3       	ldi	r21, 0x3F	; 63
    3780:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3784:	88 23       	and	r24, r24
    3786:	44 f4       	brge	.+16     	; 0x3798 <MyStory+0x95c>
		__ticks = 1;
    3788:	fe 01       	movw	r30, r28
    378a:	e1 58       	subi	r30, 0x81	; 129
    378c:	fe 4f       	sbci	r31, 0xFE	; 254
    378e:	81 e0       	ldi	r24, 0x01	; 1
    3790:	90 e0       	ldi	r25, 0x00	; 0
    3792:	91 83       	std	Z+1, r25	; 0x01
    3794:	80 83       	st	Z, r24
    3796:	64 c0       	rjmp	.+200    	; 0x3860 <MyStory+0xa24>
	else if (__tmp > 65535)
    3798:	fe 01       	movw	r30, r28
    379a:	ef 57       	subi	r30, 0x7F	; 127
    379c:	fe 4f       	sbci	r31, 0xFE	; 254
    379e:	60 81       	ld	r22, Z
    37a0:	71 81       	ldd	r23, Z+1	; 0x01
    37a2:	82 81       	ldd	r24, Z+2	; 0x02
    37a4:	93 81       	ldd	r25, Z+3	; 0x03
    37a6:	20 e0       	ldi	r18, 0x00	; 0
    37a8:	3f ef       	ldi	r19, 0xFF	; 255
    37aa:	4f e7       	ldi	r20, 0x7F	; 127
    37ac:	57 e4       	ldi	r21, 0x47	; 71
    37ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    37b2:	18 16       	cp	r1, r24
    37b4:	0c f0       	brlt	.+2      	; 0x37b8 <MyStory+0x97c>
    37b6:	43 c0       	rjmp	.+134    	; 0x383e <MyStory+0xa02>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37b8:	fe 01       	movw	r30, r28
    37ba:	eb 57       	subi	r30, 0x7B	; 123
    37bc:	fe 4f       	sbci	r31, 0xFE	; 254
    37be:	60 81       	ld	r22, Z
    37c0:	71 81       	ldd	r23, Z+1	; 0x01
    37c2:	82 81       	ldd	r24, Z+2	; 0x02
    37c4:	93 81       	ldd	r25, Z+3	; 0x03
    37c6:	20 e0       	ldi	r18, 0x00	; 0
    37c8:	30 e0       	ldi	r19, 0x00	; 0
    37ca:	40 e2       	ldi	r20, 0x20	; 32
    37cc:	51 e4       	ldi	r21, 0x41	; 65
    37ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37d2:	dc 01       	movw	r26, r24
    37d4:	cb 01       	movw	r24, r22
    37d6:	8e 01       	movw	r16, r28
    37d8:	01 58       	subi	r16, 0x81	; 129
    37da:	1e 4f       	sbci	r17, 0xFE	; 254
    37dc:	bc 01       	movw	r22, r24
    37de:	cd 01       	movw	r24, r26
    37e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37e4:	dc 01       	movw	r26, r24
    37e6:	cb 01       	movw	r24, r22
    37e8:	f8 01       	movw	r30, r16
    37ea:	91 83       	std	Z+1, r25	; 0x01
    37ec:	80 83       	st	Z, r24
    37ee:	1f c0       	rjmp	.+62     	; 0x382e <MyStory+0x9f2>
    37f0:	fe 01       	movw	r30, r28
    37f2:	e3 58       	subi	r30, 0x83	; 131
    37f4:	fe 4f       	sbci	r31, 0xFE	; 254
    37f6:	88 ec       	ldi	r24, 0xC8	; 200
    37f8:	90 e0       	ldi	r25, 0x00	; 0
    37fa:	91 83       	std	Z+1, r25	; 0x01
    37fc:	80 83       	st	Z, r24
    37fe:	fe 01       	movw	r30, r28
    3800:	e3 58       	subi	r30, 0x83	; 131
    3802:	fe 4f       	sbci	r31, 0xFE	; 254
    3804:	80 81       	ld	r24, Z
    3806:	91 81       	ldd	r25, Z+1	; 0x01
    3808:	01 97       	sbiw	r24, 0x01	; 1
    380a:	f1 f7       	brne	.-4      	; 0x3808 <MyStory+0x9cc>
    380c:	fe 01       	movw	r30, r28
    380e:	e3 58       	subi	r30, 0x83	; 131
    3810:	fe 4f       	sbci	r31, 0xFE	; 254
    3812:	91 83       	std	Z+1, r25	; 0x01
    3814:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3816:	de 01       	movw	r26, r28
    3818:	a1 58       	subi	r26, 0x81	; 129
    381a:	be 4f       	sbci	r27, 0xFE	; 254
    381c:	fe 01       	movw	r30, r28
    381e:	e1 58       	subi	r30, 0x81	; 129
    3820:	fe 4f       	sbci	r31, 0xFE	; 254
    3822:	80 81       	ld	r24, Z
    3824:	91 81       	ldd	r25, Z+1	; 0x01
    3826:	01 97       	sbiw	r24, 0x01	; 1
    3828:	11 96       	adiw	r26, 0x01	; 1
    382a:	9c 93       	st	X, r25
    382c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    382e:	fe 01       	movw	r30, r28
    3830:	e1 58       	subi	r30, 0x81	; 129
    3832:	fe 4f       	sbci	r31, 0xFE	; 254
    3834:	80 81       	ld	r24, Z
    3836:	91 81       	ldd	r25, Z+1	; 0x01
    3838:	00 97       	sbiw	r24, 0x00	; 0
    383a:	d1 f6       	brne	.-76     	; 0x37f0 <MyStory+0x9b4>
    383c:	27 c0       	rjmp	.+78     	; 0x388c <MyStory+0xa50>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    383e:	8e 01       	movw	r16, r28
    3840:	01 58       	subi	r16, 0x81	; 129
    3842:	1e 4f       	sbci	r17, 0xFE	; 254
    3844:	fe 01       	movw	r30, r28
    3846:	ef 57       	subi	r30, 0x7F	; 127
    3848:	fe 4f       	sbci	r31, 0xFE	; 254
    384a:	60 81       	ld	r22, Z
    384c:	71 81       	ldd	r23, Z+1	; 0x01
    384e:	82 81       	ldd	r24, Z+2	; 0x02
    3850:	93 81       	ldd	r25, Z+3	; 0x03
    3852:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3856:	dc 01       	movw	r26, r24
    3858:	cb 01       	movw	r24, r22
    385a:	f8 01       	movw	r30, r16
    385c:	91 83       	std	Z+1, r25	; 0x01
    385e:	80 83       	st	Z, r24
    3860:	de 01       	movw	r26, r28
    3862:	a5 58       	subi	r26, 0x85	; 133
    3864:	be 4f       	sbci	r27, 0xFE	; 254
    3866:	fe 01       	movw	r30, r28
    3868:	e1 58       	subi	r30, 0x81	; 129
    386a:	fe 4f       	sbci	r31, 0xFE	; 254
    386c:	80 81       	ld	r24, Z
    386e:	91 81       	ldd	r25, Z+1	; 0x01
    3870:	8d 93       	st	X+, r24
    3872:	9c 93       	st	X, r25
    3874:	fe 01       	movw	r30, r28
    3876:	e5 58       	subi	r30, 0x85	; 133
    3878:	fe 4f       	sbci	r31, 0xFE	; 254
    387a:	80 81       	ld	r24, Z
    387c:	91 81       	ldd	r25, Z+1	; 0x01
    387e:	01 97       	sbiw	r24, 0x01	; 1
    3880:	f1 f7       	brne	.-4      	; 0x387e <MyStory+0xa42>
    3882:	fe 01       	movw	r30, r28
    3884:	e5 58       	subi	r30, 0x85	; 133
    3886:	fe 4f       	sbci	r31, 0xFE	; 254
    3888:	91 83       	std	Z+1, r25	; 0x01
    388a:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("year in college.");
    388c:	87 e1       	ldi	r24, 0x17	; 23
    388e:	91 e0       	ldi	r25, 0x01	; 1
    3890:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,0);
    3894:	83 e0       	ldi	r24, 0x03	; 3
    3896:	60 e0       	ldi	r22, 0x00	; 0
    3898:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    389c:	fe 01       	movw	r30, r28
    389e:	e9 58       	subi	r30, 0x89	; 137
    38a0:	fe 4f       	sbci	r31, 0xFE	; 254
    38a2:	80 e0       	ldi	r24, 0x00	; 0
    38a4:	90 e0       	ldi	r25, 0x00	; 0
    38a6:	aa ef       	ldi	r26, 0xFA	; 250
    38a8:	b3 e4       	ldi	r27, 0x43	; 67
    38aa:	80 83       	st	Z, r24
    38ac:	91 83       	std	Z+1, r25	; 0x01
    38ae:	a2 83       	std	Z+2, r26	; 0x02
    38b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38b2:	8e 01       	movw	r16, r28
    38b4:	0d 58       	subi	r16, 0x8D	; 141
    38b6:	1e 4f       	sbci	r17, 0xFE	; 254
    38b8:	fe 01       	movw	r30, r28
    38ba:	e9 58       	subi	r30, 0x89	; 137
    38bc:	fe 4f       	sbci	r31, 0xFE	; 254
    38be:	60 81       	ld	r22, Z
    38c0:	71 81       	ldd	r23, Z+1	; 0x01
    38c2:	82 81       	ldd	r24, Z+2	; 0x02
    38c4:	93 81       	ldd	r25, Z+3	; 0x03
    38c6:	20 e0       	ldi	r18, 0x00	; 0
    38c8:	30 e0       	ldi	r19, 0x00	; 0
    38ca:	4a ef       	ldi	r20, 0xFA	; 250
    38cc:	54 e4       	ldi	r21, 0x44	; 68
    38ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    38d2:	dc 01       	movw	r26, r24
    38d4:	cb 01       	movw	r24, r22
    38d6:	f8 01       	movw	r30, r16
    38d8:	80 83       	st	Z, r24
    38da:	91 83       	std	Z+1, r25	; 0x01
    38dc:	a2 83       	std	Z+2, r26	; 0x02
    38de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38e0:	fe 01       	movw	r30, r28
    38e2:	ed 58       	subi	r30, 0x8D	; 141
    38e4:	fe 4f       	sbci	r31, 0xFE	; 254
    38e6:	60 81       	ld	r22, Z
    38e8:	71 81       	ldd	r23, Z+1	; 0x01
    38ea:	82 81       	ldd	r24, Z+2	; 0x02
    38ec:	93 81       	ldd	r25, Z+3	; 0x03
    38ee:	20 e0       	ldi	r18, 0x00	; 0
    38f0:	30 e0       	ldi	r19, 0x00	; 0
    38f2:	40 e8       	ldi	r20, 0x80	; 128
    38f4:	5f e3       	ldi	r21, 0x3F	; 63
    38f6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    38fa:	88 23       	and	r24, r24
    38fc:	44 f4       	brge	.+16     	; 0x390e <MyStory+0xad2>
		__ticks = 1;
    38fe:	fe 01       	movw	r30, r28
    3900:	ef 58       	subi	r30, 0x8F	; 143
    3902:	fe 4f       	sbci	r31, 0xFE	; 254
    3904:	81 e0       	ldi	r24, 0x01	; 1
    3906:	90 e0       	ldi	r25, 0x00	; 0
    3908:	91 83       	std	Z+1, r25	; 0x01
    390a:	80 83       	st	Z, r24
    390c:	64 c0       	rjmp	.+200    	; 0x39d6 <MyStory+0xb9a>
	else if (__tmp > 65535)
    390e:	fe 01       	movw	r30, r28
    3910:	ed 58       	subi	r30, 0x8D	; 141
    3912:	fe 4f       	sbci	r31, 0xFE	; 254
    3914:	60 81       	ld	r22, Z
    3916:	71 81       	ldd	r23, Z+1	; 0x01
    3918:	82 81       	ldd	r24, Z+2	; 0x02
    391a:	93 81       	ldd	r25, Z+3	; 0x03
    391c:	20 e0       	ldi	r18, 0x00	; 0
    391e:	3f ef       	ldi	r19, 0xFF	; 255
    3920:	4f e7       	ldi	r20, 0x7F	; 127
    3922:	57 e4       	ldi	r21, 0x47	; 71
    3924:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3928:	18 16       	cp	r1, r24
    392a:	0c f0       	brlt	.+2      	; 0x392e <MyStory+0xaf2>
    392c:	43 c0       	rjmp	.+134    	; 0x39b4 <MyStory+0xb78>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    392e:	fe 01       	movw	r30, r28
    3930:	e9 58       	subi	r30, 0x89	; 137
    3932:	fe 4f       	sbci	r31, 0xFE	; 254
    3934:	60 81       	ld	r22, Z
    3936:	71 81       	ldd	r23, Z+1	; 0x01
    3938:	82 81       	ldd	r24, Z+2	; 0x02
    393a:	93 81       	ldd	r25, Z+3	; 0x03
    393c:	20 e0       	ldi	r18, 0x00	; 0
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	40 e2       	ldi	r20, 0x20	; 32
    3942:	51 e4       	ldi	r21, 0x41	; 65
    3944:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3948:	dc 01       	movw	r26, r24
    394a:	cb 01       	movw	r24, r22
    394c:	8e 01       	movw	r16, r28
    394e:	0f 58       	subi	r16, 0x8F	; 143
    3950:	1e 4f       	sbci	r17, 0xFE	; 254
    3952:	bc 01       	movw	r22, r24
    3954:	cd 01       	movw	r24, r26
    3956:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    395a:	dc 01       	movw	r26, r24
    395c:	cb 01       	movw	r24, r22
    395e:	f8 01       	movw	r30, r16
    3960:	91 83       	std	Z+1, r25	; 0x01
    3962:	80 83       	st	Z, r24
    3964:	1f c0       	rjmp	.+62     	; 0x39a4 <MyStory+0xb68>
    3966:	fe 01       	movw	r30, r28
    3968:	e1 59       	subi	r30, 0x91	; 145
    396a:	fe 4f       	sbci	r31, 0xFE	; 254
    396c:	88 ec       	ldi	r24, 0xC8	; 200
    396e:	90 e0       	ldi	r25, 0x00	; 0
    3970:	91 83       	std	Z+1, r25	; 0x01
    3972:	80 83       	st	Z, r24
    3974:	fe 01       	movw	r30, r28
    3976:	e1 59       	subi	r30, 0x91	; 145
    3978:	fe 4f       	sbci	r31, 0xFE	; 254
    397a:	80 81       	ld	r24, Z
    397c:	91 81       	ldd	r25, Z+1	; 0x01
    397e:	01 97       	sbiw	r24, 0x01	; 1
    3980:	f1 f7       	brne	.-4      	; 0x397e <MyStory+0xb42>
    3982:	fe 01       	movw	r30, r28
    3984:	e1 59       	subi	r30, 0x91	; 145
    3986:	fe 4f       	sbci	r31, 0xFE	; 254
    3988:	91 83       	std	Z+1, r25	; 0x01
    398a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    398c:	de 01       	movw	r26, r28
    398e:	af 58       	subi	r26, 0x8F	; 143
    3990:	be 4f       	sbci	r27, 0xFE	; 254
    3992:	fe 01       	movw	r30, r28
    3994:	ef 58       	subi	r30, 0x8F	; 143
    3996:	fe 4f       	sbci	r31, 0xFE	; 254
    3998:	80 81       	ld	r24, Z
    399a:	91 81       	ldd	r25, Z+1	; 0x01
    399c:	01 97       	sbiw	r24, 0x01	; 1
    399e:	11 96       	adiw	r26, 0x01	; 1
    39a0:	9c 93       	st	X, r25
    39a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39a4:	fe 01       	movw	r30, r28
    39a6:	ef 58       	subi	r30, 0x8F	; 143
    39a8:	fe 4f       	sbci	r31, 0xFE	; 254
    39aa:	80 81       	ld	r24, Z
    39ac:	91 81       	ldd	r25, Z+1	; 0x01
    39ae:	00 97       	sbiw	r24, 0x00	; 0
    39b0:	d1 f6       	brne	.-76     	; 0x3966 <MyStory+0xb2a>
    39b2:	27 c0       	rjmp	.+78     	; 0x3a02 <MyStory+0xbc6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39b4:	8e 01       	movw	r16, r28
    39b6:	0f 58       	subi	r16, 0x8F	; 143
    39b8:	1e 4f       	sbci	r17, 0xFE	; 254
    39ba:	fe 01       	movw	r30, r28
    39bc:	ed 58       	subi	r30, 0x8D	; 141
    39be:	fe 4f       	sbci	r31, 0xFE	; 254
    39c0:	60 81       	ld	r22, Z
    39c2:	71 81       	ldd	r23, Z+1	; 0x01
    39c4:	82 81       	ldd	r24, Z+2	; 0x02
    39c6:	93 81       	ldd	r25, Z+3	; 0x03
    39c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39cc:	dc 01       	movw	r26, r24
    39ce:	cb 01       	movw	r24, r22
    39d0:	f8 01       	movw	r30, r16
    39d2:	91 83       	std	Z+1, r25	; 0x01
    39d4:	80 83       	st	Z, r24
    39d6:	de 01       	movw	r26, r28
    39d8:	a3 59       	subi	r26, 0x93	; 147
    39da:	be 4f       	sbci	r27, 0xFE	; 254
    39dc:	fe 01       	movw	r30, r28
    39de:	ef 58       	subi	r30, 0x8F	; 143
    39e0:	fe 4f       	sbci	r31, 0xFE	; 254
    39e2:	80 81       	ld	r24, Z
    39e4:	91 81       	ldd	r25, Z+1	; 0x01
    39e6:	8d 93       	st	X+, r24
    39e8:	9c 93       	st	X, r25
    39ea:	fe 01       	movw	r30, r28
    39ec:	e3 59       	subi	r30, 0x93	; 147
    39ee:	fe 4f       	sbci	r31, 0xFE	; 254
    39f0:	80 81       	ld	r24, Z
    39f2:	91 81       	ldd	r25, Z+1	; 0x01
    39f4:	01 97       	sbiw	r24, 0x01	; 1
    39f6:	f1 f7       	brne	.-4      	; 0x39f4 <MyStory+0xbb8>
    39f8:	fe 01       	movw	r30, r28
    39fa:	e3 59       	subi	r30, 0x93	; 147
    39fc:	fe 4f       	sbci	r31, 0xFE	; 254
    39fe:	91 83       	std	Z+1, r25	; 0x01
    3a00:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("i can't tell u how ");
    3a02:	88 e2       	ldi	r24, 0x28	; 40
    3a04:	91 e0       	ldi	r25, 0x01	; 1
    3a06:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    3a0a:	fe 01       	movw	r30, r28
    3a0c:	e7 59       	subi	r30, 0x97	; 151
    3a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a10:	80 e0       	ldi	r24, 0x00	; 0
    3a12:	90 e0       	ldi	r25, 0x00	; 0
    3a14:	aa e7       	ldi	r26, 0x7A	; 122
    3a16:	b4 e4       	ldi	r27, 0x44	; 68
    3a18:	80 83       	st	Z, r24
    3a1a:	91 83       	std	Z+1, r25	; 0x01
    3a1c:	a2 83       	std	Z+2, r26	; 0x02
    3a1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a20:	8e 01       	movw	r16, r28
    3a22:	0b 59       	subi	r16, 0x9B	; 155
    3a24:	1e 4f       	sbci	r17, 0xFE	; 254
    3a26:	fe 01       	movw	r30, r28
    3a28:	e7 59       	subi	r30, 0x97	; 151
    3a2a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a2c:	60 81       	ld	r22, Z
    3a2e:	71 81       	ldd	r23, Z+1	; 0x01
    3a30:	82 81       	ldd	r24, Z+2	; 0x02
    3a32:	93 81       	ldd	r25, Z+3	; 0x03
    3a34:	20 e0       	ldi	r18, 0x00	; 0
    3a36:	30 e0       	ldi	r19, 0x00	; 0
    3a38:	4a ef       	ldi	r20, 0xFA	; 250
    3a3a:	54 e4       	ldi	r21, 0x44	; 68
    3a3c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3a40:	dc 01       	movw	r26, r24
    3a42:	cb 01       	movw	r24, r22
    3a44:	f8 01       	movw	r30, r16
    3a46:	80 83       	st	Z, r24
    3a48:	91 83       	std	Z+1, r25	; 0x01
    3a4a:	a2 83       	std	Z+2, r26	; 0x02
    3a4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a4e:	fe 01       	movw	r30, r28
    3a50:	eb 59       	subi	r30, 0x9B	; 155
    3a52:	fe 4f       	sbci	r31, 0xFE	; 254
    3a54:	60 81       	ld	r22, Z
    3a56:	71 81       	ldd	r23, Z+1	; 0x01
    3a58:	82 81       	ldd	r24, Z+2	; 0x02
    3a5a:	93 81       	ldd	r25, Z+3	; 0x03
    3a5c:	20 e0       	ldi	r18, 0x00	; 0
    3a5e:	30 e0       	ldi	r19, 0x00	; 0
    3a60:	40 e8       	ldi	r20, 0x80	; 128
    3a62:	5f e3       	ldi	r21, 0x3F	; 63
    3a64:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3a68:	88 23       	and	r24, r24
    3a6a:	44 f4       	brge	.+16     	; 0x3a7c <MyStory+0xc40>
		__ticks = 1;
    3a6c:	fe 01       	movw	r30, r28
    3a6e:	ed 59       	subi	r30, 0x9D	; 157
    3a70:	fe 4f       	sbci	r31, 0xFE	; 254
    3a72:	81 e0       	ldi	r24, 0x01	; 1
    3a74:	90 e0       	ldi	r25, 0x00	; 0
    3a76:	91 83       	std	Z+1, r25	; 0x01
    3a78:	80 83       	st	Z, r24
    3a7a:	64 c0       	rjmp	.+200    	; 0x3b44 <MyStory+0xd08>
	else if (__tmp > 65535)
    3a7c:	fe 01       	movw	r30, r28
    3a7e:	eb 59       	subi	r30, 0x9B	; 155
    3a80:	fe 4f       	sbci	r31, 0xFE	; 254
    3a82:	60 81       	ld	r22, Z
    3a84:	71 81       	ldd	r23, Z+1	; 0x01
    3a86:	82 81       	ldd	r24, Z+2	; 0x02
    3a88:	93 81       	ldd	r25, Z+3	; 0x03
    3a8a:	20 e0       	ldi	r18, 0x00	; 0
    3a8c:	3f ef       	ldi	r19, 0xFF	; 255
    3a8e:	4f e7       	ldi	r20, 0x7F	; 127
    3a90:	57 e4       	ldi	r21, 0x47	; 71
    3a92:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3a96:	18 16       	cp	r1, r24
    3a98:	0c f0       	brlt	.+2      	; 0x3a9c <MyStory+0xc60>
    3a9a:	43 c0       	rjmp	.+134    	; 0x3b22 <MyStory+0xce6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a9c:	fe 01       	movw	r30, r28
    3a9e:	e7 59       	subi	r30, 0x97	; 151
    3aa0:	fe 4f       	sbci	r31, 0xFE	; 254
    3aa2:	60 81       	ld	r22, Z
    3aa4:	71 81       	ldd	r23, Z+1	; 0x01
    3aa6:	82 81       	ldd	r24, Z+2	; 0x02
    3aa8:	93 81       	ldd	r25, Z+3	; 0x03
    3aaa:	20 e0       	ldi	r18, 0x00	; 0
    3aac:	30 e0       	ldi	r19, 0x00	; 0
    3aae:	40 e2       	ldi	r20, 0x20	; 32
    3ab0:	51 e4       	ldi	r21, 0x41	; 65
    3ab2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3ab6:	dc 01       	movw	r26, r24
    3ab8:	cb 01       	movw	r24, r22
    3aba:	8e 01       	movw	r16, r28
    3abc:	0d 59       	subi	r16, 0x9D	; 157
    3abe:	1e 4f       	sbci	r17, 0xFE	; 254
    3ac0:	bc 01       	movw	r22, r24
    3ac2:	cd 01       	movw	r24, r26
    3ac4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ac8:	dc 01       	movw	r26, r24
    3aca:	cb 01       	movw	r24, r22
    3acc:	f8 01       	movw	r30, r16
    3ace:	91 83       	std	Z+1, r25	; 0x01
    3ad0:	80 83       	st	Z, r24
    3ad2:	1f c0       	rjmp	.+62     	; 0x3b12 <MyStory+0xcd6>
    3ad4:	fe 01       	movw	r30, r28
    3ad6:	ef 59       	subi	r30, 0x9F	; 159
    3ad8:	fe 4f       	sbci	r31, 0xFE	; 254
    3ada:	88 ec       	ldi	r24, 0xC8	; 200
    3adc:	90 e0       	ldi	r25, 0x00	; 0
    3ade:	91 83       	std	Z+1, r25	; 0x01
    3ae0:	80 83       	st	Z, r24
    3ae2:	fe 01       	movw	r30, r28
    3ae4:	ef 59       	subi	r30, 0x9F	; 159
    3ae6:	fe 4f       	sbci	r31, 0xFE	; 254
    3ae8:	80 81       	ld	r24, Z
    3aea:	91 81       	ldd	r25, Z+1	; 0x01
    3aec:	01 97       	sbiw	r24, 0x01	; 1
    3aee:	f1 f7       	brne	.-4      	; 0x3aec <MyStory+0xcb0>
    3af0:	fe 01       	movw	r30, r28
    3af2:	ef 59       	subi	r30, 0x9F	; 159
    3af4:	fe 4f       	sbci	r31, 0xFE	; 254
    3af6:	91 83       	std	Z+1, r25	; 0x01
    3af8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3afa:	de 01       	movw	r26, r28
    3afc:	ad 59       	subi	r26, 0x9D	; 157
    3afe:	be 4f       	sbci	r27, 0xFE	; 254
    3b00:	fe 01       	movw	r30, r28
    3b02:	ed 59       	subi	r30, 0x9D	; 157
    3b04:	fe 4f       	sbci	r31, 0xFE	; 254
    3b06:	80 81       	ld	r24, Z
    3b08:	91 81       	ldd	r25, Z+1	; 0x01
    3b0a:	01 97       	sbiw	r24, 0x01	; 1
    3b0c:	11 96       	adiw	r26, 0x01	; 1
    3b0e:	9c 93       	st	X, r25
    3b10:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b12:	fe 01       	movw	r30, r28
    3b14:	ed 59       	subi	r30, 0x9D	; 157
    3b16:	fe 4f       	sbci	r31, 0xFE	; 254
    3b18:	80 81       	ld	r24, Z
    3b1a:	91 81       	ldd	r25, Z+1	; 0x01
    3b1c:	00 97       	sbiw	r24, 0x00	; 0
    3b1e:	d1 f6       	brne	.-76     	; 0x3ad4 <MyStory+0xc98>
    3b20:	27 c0       	rjmp	.+78     	; 0x3b70 <MyStory+0xd34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b22:	8e 01       	movw	r16, r28
    3b24:	0d 59       	subi	r16, 0x9D	; 157
    3b26:	1e 4f       	sbci	r17, 0xFE	; 254
    3b28:	fe 01       	movw	r30, r28
    3b2a:	eb 59       	subi	r30, 0x9B	; 155
    3b2c:	fe 4f       	sbci	r31, 0xFE	; 254
    3b2e:	60 81       	ld	r22, Z
    3b30:	71 81       	ldd	r23, Z+1	; 0x01
    3b32:	82 81       	ldd	r24, Z+2	; 0x02
    3b34:	93 81       	ldd	r25, Z+3	; 0x03
    3b36:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b3a:	dc 01       	movw	r26, r24
    3b3c:	cb 01       	movw	r24, r22
    3b3e:	f8 01       	movw	r30, r16
    3b40:	91 83       	std	Z+1, r25	; 0x01
    3b42:	80 83       	st	Z, r24
    3b44:	de 01       	movw	r26, r28
    3b46:	a1 5a       	subi	r26, 0xA1	; 161
    3b48:	be 4f       	sbci	r27, 0xFE	; 254
    3b4a:	fe 01       	movw	r30, r28
    3b4c:	ed 59       	subi	r30, 0x9D	; 157
    3b4e:	fe 4f       	sbci	r31, 0xFE	; 254
    3b50:	80 81       	ld	r24, Z
    3b52:	91 81       	ldd	r25, Z+1	; 0x01
    3b54:	8d 93       	st	X+, r24
    3b56:	9c 93       	st	X, r25
    3b58:	fe 01       	movw	r30, r28
    3b5a:	e1 5a       	subi	r30, 0xA1	; 161
    3b5c:	fe 4f       	sbci	r31, 0xFE	; 254
    3b5e:	80 81       	ld	r24, Z
    3b60:	91 81       	ldd	r25, Z+1	; 0x01
    3b62:	01 97       	sbiw	r24, 0x01	; 1
    3b64:	f1 f7       	brne	.-4      	; 0x3b62 <MyStory+0xd26>
    3b66:	fe 01       	movw	r30, r28
    3b68:	e1 5a       	subi	r30, 0xA1	; 161
    3b6a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b6c:	91 83       	std	Z+1, r25	; 0x01
    3b6e:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear();  //clear
    3b70:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    3b74:	80 e0       	ldi	r24, 0x00	; 0
    3b76:	60 e0       	ldi	r22, 0x00	; 0
    3b78:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    3b7c:	fe 01       	movw	r30, r28
    3b7e:	e5 5a       	subi	r30, 0xA5	; 165
    3b80:	fe 4f       	sbci	r31, 0xFE	; 254
    3b82:	80 e0       	ldi	r24, 0x00	; 0
    3b84:	90 e0       	ldi	r25, 0x00	; 0
    3b86:	aa ef       	ldi	r26, 0xFA	; 250
    3b88:	b3 e4       	ldi	r27, 0x43	; 67
    3b8a:	80 83       	st	Z, r24
    3b8c:	91 83       	std	Z+1, r25	; 0x01
    3b8e:	a2 83       	std	Z+2, r26	; 0x02
    3b90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b92:	8e 01       	movw	r16, r28
    3b94:	09 5a       	subi	r16, 0xA9	; 169
    3b96:	1e 4f       	sbci	r17, 0xFE	; 254
    3b98:	fe 01       	movw	r30, r28
    3b9a:	e5 5a       	subi	r30, 0xA5	; 165
    3b9c:	fe 4f       	sbci	r31, 0xFE	; 254
    3b9e:	60 81       	ld	r22, Z
    3ba0:	71 81       	ldd	r23, Z+1	; 0x01
    3ba2:	82 81       	ldd	r24, Z+2	; 0x02
    3ba4:	93 81       	ldd	r25, Z+3	; 0x03
    3ba6:	20 e0       	ldi	r18, 0x00	; 0
    3ba8:	30 e0       	ldi	r19, 0x00	; 0
    3baa:	4a ef       	ldi	r20, 0xFA	; 250
    3bac:	54 e4       	ldi	r21, 0x44	; 68
    3bae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3bb2:	dc 01       	movw	r26, r24
    3bb4:	cb 01       	movw	r24, r22
    3bb6:	f8 01       	movw	r30, r16
    3bb8:	80 83       	st	Z, r24
    3bba:	91 83       	std	Z+1, r25	; 0x01
    3bbc:	a2 83       	std	Z+2, r26	; 0x02
    3bbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bc0:	fe 01       	movw	r30, r28
    3bc2:	e9 5a       	subi	r30, 0xA9	; 169
    3bc4:	fe 4f       	sbci	r31, 0xFE	; 254
    3bc6:	60 81       	ld	r22, Z
    3bc8:	71 81       	ldd	r23, Z+1	; 0x01
    3bca:	82 81       	ldd	r24, Z+2	; 0x02
    3bcc:	93 81       	ldd	r25, Z+3	; 0x03
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	40 e8       	ldi	r20, 0x80	; 128
    3bd4:	5f e3       	ldi	r21, 0x3F	; 63
    3bd6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3bda:	88 23       	and	r24, r24
    3bdc:	44 f4       	brge	.+16     	; 0x3bee <MyStory+0xdb2>
		__ticks = 1;
    3bde:	fe 01       	movw	r30, r28
    3be0:	eb 5a       	subi	r30, 0xAB	; 171
    3be2:	fe 4f       	sbci	r31, 0xFE	; 254
    3be4:	81 e0       	ldi	r24, 0x01	; 1
    3be6:	90 e0       	ldi	r25, 0x00	; 0
    3be8:	91 83       	std	Z+1, r25	; 0x01
    3bea:	80 83       	st	Z, r24
    3bec:	64 c0       	rjmp	.+200    	; 0x3cb6 <MyStory+0xe7a>
	else if (__tmp > 65535)
    3bee:	fe 01       	movw	r30, r28
    3bf0:	e9 5a       	subi	r30, 0xA9	; 169
    3bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    3bf4:	60 81       	ld	r22, Z
    3bf6:	71 81       	ldd	r23, Z+1	; 0x01
    3bf8:	82 81       	ldd	r24, Z+2	; 0x02
    3bfa:	93 81       	ldd	r25, Z+3	; 0x03
    3bfc:	20 e0       	ldi	r18, 0x00	; 0
    3bfe:	3f ef       	ldi	r19, 0xFF	; 255
    3c00:	4f e7       	ldi	r20, 0x7F	; 127
    3c02:	57 e4       	ldi	r21, 0x47	; 71
    3c04:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3c08:	18 16       	cp	r1, r24
    3c0a:	0c f0       	brlt	.+2      	; 0x3c0e <MyStory+0xdd2>
    3c0c:	43 c0       	rjmp	.+134    	; 0x3c94 <MyStory+0xe58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c0e:	fe 01       	movw	r30, r28
    3c10:	e5 5a       	subi	r30, 0xA5	; 165
    3c12:	fe 4f       	sbci	r31, 0xFE	; 254
    3c14:	60 81       	ld	r22, Z
    3c16:	71 81       	ldd	r23, Z+1	; 0x01
    3c18:	82 81       	ldd	r24, Z+2	; 0x02
    3c1a:	93 81       	ldd	r25, Z+3	; 0x03
    3c1c:	20 e0       	ldi	r18, 0x00	; 0
    3c1e:	30 e0       	ldi	r19, 0x00	; 0
    3c20:	40 e2       	ldi	r20, 0x20	; 32
    3c22:	51 e4       	ldi	r21, 0x41	; 65
    3c24:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3c28:	dc 01       	movw	r26, r24
    3c2a:	cb 01       	movw	r24, r22
    3c2c:	8e 01       	movw	r16, r28
    3c2e:	0b 5a       	subi	r16, 0xAB	; 171
    3c30:	1e 4f       	sbci	r17, 0xFE	; 254
    3c32:	bc 01       	movw	r22, r24
    3c34:	cd 01       	movw	r24, r26
    3c36:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c3a:	dc 01       	movw	r26, r24
    3c3c:	cb 01       	movw	r24, r22
    3c3e:	f8 01       	movw	r30, r16
    3c40:	91 83       	std	Z+1, r25	; 0x01
    3c42:	80 83       	st	Z, r24
    3c44:	1f c0       	rjmp	.+62     	; 0x3c84 <MyStory+0xe48>
    3c46:	fe 01       	movw	r30, r28
    3c48:	ed 5a       	subi	r30, 0xAD	; 173
    3c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c4c:	88 ec       	ldi	r24, 0xC8	; 200
    3c4e:	90 e0       	ldi	r25, 0x00	; 0
    3c50:	91 83       	std	Z+1, r25	; 0x01
    3c52:	80 83       	st	Z, r24
    3c54:	fe 01       	movw	r30, r28
    3c56:	ed 5a       	subi	r30, 0xAD	; 173
    3c58:	fe 4f       	sbci	r31, 0xFE	; 254
    3c5a:	80 81       	ld	r24, Z
    3c5c:	91 81       	ldd	r25, Z+1	; 0x01
    3c5e:	01 97       	sbiw	r24, 0x01	; 1
    3c60:	f1 f7       	brne	.-4      	; 0x3c5e <MyStory+0xe22>
    3c62:	fe 01       	movw	r30, r28
    3c64:	ed 5a       	subi	r30, 0xAD	; 173
    3c66:	fe 4f       	sbci	r31, 0xFE	; 254
    3c68:	91 83       	std	Z+1, r25	; 0x01
    3c6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c6c:	de 01       	movw	r26, r28
    3c6e:	ab 5a       	subi	r26, 0xAB	; 171
    3c70:	be 4f       	sbci	r27, 0xFE	; 254
    3c72:	fe 01       	movw	r30, r28
    3c74:	eb 5a       	subi	r30, 0xAB	; 171
    3c76:	fe 4f       	sbci	r31, 0xFE	; 254
    3c78:	80 81       	ld	r24, Z
    3c7a:	91 81       	ldd	r25, Z+1	; 0x01
    3c7c:	01 97       	sbiw	r24, 0x01	; 1
    3c7e:	11 96       	adiw	r26, 0x01	; 1
    3c80:	9c 93       	st	X, r25
    3c82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c84:	fe 01       	movw	r30, r28
    3c86:	eb 5a       	subi	r30, 0xAB	; 171
    3c88:	fe 4f       	sbci	r31, 0xFE	; 254
    3c8a:	80 81       	ld	r24, Z
    3c8c:	91 81       	ldd	r25, Z+1	; 0x01
    3c8e:	00 97       	sbiw	r24, 0x00	; 0
    3c90:	d1 f6       	brne	.-76     	; 0x3c46 <MyStory+0xe0a>
    3c92:	27 c0       	rjmp	.+78     	; 0x3ce2 <MyStory+0xea6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c94:	8e 01       	movw	r16, r28
    3c96:	0b 5a       	subi	r16, 0xAB	; 171
    3c98:	1e 4f       	sbci	r17, 0xFE	; 254
    3c9a:	fe 01       	movw	r30, r28
    3c9c:	e9 5a       	subi	r30, 0xA9	; 169
    3c9e:	fe 4f       	sbci	r31, 0xFE	; 254
    3ca0:	60 81       	ld	r22, Z
    3ca2:	71 81       	ldd	r23, Z+1	; 0x01
    3ca4:	82 81       	ldd	r24, Z+2	; 0x02
    3ca6:	93 81       	ldd	r25, Z+3	; 0x03
    3ca8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3cac:	dc 01       	movw	r26, r24
    3cae:	cb 01       	movw	r24, r22
    3cb0:	f8 01       	movw	r30, r16
    3cb2:	91 83       	std	Z+1, r25	; 0x01
    3cb4:	80 83       	st	Z, r24
    3cb6:	de 01       	movw	r26, r28
    3cb8:	af 5a       	subi	r26, 0xAF	; 175
    3cba:	be 4f       	sbci	r27, 0xFE	; 254
    3cbc:	fe 01       	movw	r30, r28
    3cbe:	eb 5a       	subi	r30, 0xAB	; 171
    3cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    3cc2:	80 81       	ld	r24, Z
    3cc4:	91 81       	ldd	r25, Z+1	; 0x01
    3cc6:	8d 93       	st	X+, r24
    3cc8:	9c 93       	st	X, r25
    3cca:	fe 01       	movw	r30, r28
    3ccc:	ef 5a       	subi	r30, 0xAF	; 175
    3cce:	fe 4f       	sbci	r31, 0xFE	; 254
    3cd0:	80 81       	ld	r24, Z
    3cd2:	91 81       	ldd	r25, Z+1	; 0x01
    3cd4:	01 97       	sbiw	r24, 0x01	; 1
    3cd6:	f1 f7       	brne	.-4      	; 0x3cd4 <MyStory+0xe98>
    3cd8:	fe 01       	movw	r30, r28
    3cda:	ef 5a       	subi	r30, 0xAF	; 175
    3cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    3cde:	91 83       	std	Z+1, r25	; 0x01
    3ce0:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("this year was ");
    3ce2:	8c e3       	ldi	r24, 0x3C	; 60
    3ce4:	91 e0       	ldi	r25, 0x01	; 1
    3ce6:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    3cea:	81 e0       	ldi	r24, 0x01	; 1
    3cec:	60 e0       	ldi	r22, 0x00	; 0
    3cee:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    3cf2:	fe 01       	movw	r30, r28
    3cf4:	e3 5b       	subi	r30, 0xB3	; 179
    3cf6:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf8:	80 e0       	ldi	r24, 0x00	; 0
    3cfa:	90 e0       	ldi	r25, 0x00	; 0
    3cfc:	aa ef       	ldi	r26, 0xFA	; 250
    3cfe:	b3 e4       	ldi	r27, 0x43	; 67
    3d00:	80 83       	st	Z, r24
    3d02:	91 83       	std	Z+1, r25	; 0x01
    3d04:	a2 83       	std	Z+2, r26	; 0x02
    3d06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d08:	8e 01       	movw	r16, r28
    3d0a:	07 5b       	subi	r16, 0xB7	; 183
    3d0c:	1e 4f       	sbci	r17, 0xFE	; 254
    3d0e:	fe 01       	movw	r30, r28
    3d10:	e3 5b       	subi	r30, 0xB3	; 179
    3d12:	fe 4f       	sbci	r31, 0xFE	; 254
    3d14:	60 81       	ld	r22, Z
    3d16:	71 81       	ldd	r23, Z+1	; 0x01
    3d18:	82 81       	ldd	r24, Z+2	; 0x02
    3d1a:	93 81       	ldd	r25, Z+3	; 0x03
    3d1c:	20 e0       	ldi	r18, 0x00	; 0
    3d1e:	30 e0       	ldi	r19, 0x00	; 0
    3d20:	4a ef       	ldi	r20, 0xFA	; 250
    3d22:	54 e4       	ldi	r21, 0x44	; 68
    3d24:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d28:	dc 01       	movw	r26, r24
    3d2a:	cb 01       	movw	r24, r22
    3d2c:	f8 01       	movw	r30, r16
    3d2e:	80 83       	st	Z, r24
    3d30:	91 83       	std	Z+1, r25	; 0x01
    3d32:	a2 83       	std	Z+2, r26	; 0x02
    3d34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d36:	fe 01       	movw	r30, r28
    3d38:	e7 5b       	subi	r30, 0xB7	; 183
    3d3a:	fe 4f       	sbci	r31, 0xFE	; 254
    3d3c:	60 81       	ld	r22, Z
    3d3e:	71 81       	ldd	r23, Z+1	; 0x01
    3d40:	82 81       	ldd	r24, Z+2	; 0x02
    3d42:	93 81       	ldd	r25, Z+3	; 0x03
    3d44:	20 e0       	ldi	r18, 0x00	; 0
    3d46:	30 e0       	ldi	r19, 0x00	; 0
    3d48:	40 e8       	ldi	r20, 0x80	; 128
    3d4a:	5f e3       	ldi	r21, 0x3F	; 63
    3d4c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3d50:	88 23       	and	r24, r24
    3d52:	44 f4       	brge	.+16     	; 0x3d64 <MyStory+0xf28>
		__ticks = 1;
    3d54:	fe 01       	movw	r30, r28
    3d56:	e9 5b       	subi	r30, 0xB9	; 185
    3d58:	fe 4f       	sbci	r31, 0xFE	; 254
    3d5a:	81 e0       	ldi	r24, 0x01	; 1
    3d5c:	90 e0       	ldi	r25, 0x00	; 0
    3d5e:	91 83       	std	Z+1, r25	; 0x01
    3d60:	80 83       	st	Z, r24
    3d62:	64 c0       	rjmp	.+200    	; 0x3e2c <MyStory+0xff0>
	else if (__tmp > 65535)
    3d64:	fe 01       	movw	r30, r28
    3d66:	e7 5b       	subi	r30, 0xB7	; 183
    3d68:	fe 4f       	sbci	r31, 0xFE	; 254
    3d6a:	60 81       	ld	r22, Z
    3d6c:	71 81       	ldd	r23, Z+1	; 0x01
    3d6e:	82 81       	ldd	r24, Z+2	; 0x02
    3d70:	93 81       	ldd	r25, Z+3	; 0x03
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	3f ef       	ldi	r19, 0xFF	; 255
    3d76:	4f e7       	ldi	r20, 0x7F	; 127
    3d78:	57 e4       	ldi	r21, 0x47	; 71
    3d7a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3d7e:	18 16       	cp	r1, r24
    3d80:	0c f0       	brlt	.+2      	; 0x3d84 <MyStory+0xf48>
    3d82:	43 c0       	rjmp	.+134    	; 0x3e0a <MyStory+0xfce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d84:	fe 01       	movw	r30, r28
    3d86:	e3 5b       	subi	r30, 0xB3	; 179
    3d88:	fe 4f       	sbci	r31, 0xFE	; 254
    3d8a:	60 81       	ld	r22, Z
    3d8c:	71 81       	ldd	r23, Z+1	; 0x01
    3d8e:	82 81       	ldd	r24, Z+2	; 0x02
    3d90:	93 81       	ldd	r25, Z+3	; 0x03
    3d92:	20 e0       	ldi	r18, 0x00	; 0
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	40 e2       	ldi	r20, 0x20	; 32
    3d98:	51 e4       	ldi	r21, 0x41	; 65
    3d9a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d9e:	dc 01       	movw	r26, r24
    3da0:	cb 01       	movw	r24, r22
    3da2:	8e 01       	movw	r16, r28
    3da4:	09 5b       	subi	r16, 0xB9	; 185
    3da6:	1e 4f       	sbci	r17, 0xFE	; 254
    3da8:	bc 01       	movw	r22, r24
    3daa:	cd 01       	movw	r24, r26
    3dac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3db0:	dc 01       	movw	r26, r24
    3db2:	cb 01       	movw	r24, r22
    3db4:	f8 01       	movw	r30, r16
    3db6:	91 83       	std	Z+1, r25	; 0x01
    3db8:	80 83       	st	Z, r24
    3dba:	1f c0       	rjmp	.+62     	; 0x3dfa <MyStory+0xfbe>
    3dbc:	fe 01       	movw	r30, r28
    3dbe:	eb 5b       	subi	r30, 0xBB	; 187
    3dc0:	fe 4f       	sbci	r31, 0xFE	; 254
    3dc2:	88 ec       	ldi	r24, 0xC8	; 200
    3dc4:	90 e0       	ldi	r25, 0x00	; 0
    3dc6:	91 83       	std	Z+1, r25	; 0x01
    3dc8:	80 83       	st	Z, r24
    3dca:	fe 01       	movw	r30, r28
    3dcc:	eb 5b       	subi	r30, 0xBB	; 187
    3dce:	fe 4f       	sbci	r31, 0xFE	; 254
    3dd0:	80 81       	ld	r24, Z
    3dd2:	91 81       	ldd	r25, Z+1	; 0x01
    3dd4:	01 97       	sbiw	r24, 0x01	; 1
    3dd6:	f1 f7       	brne	.-4      	; 0x3dd4 <MyStory+0xf98>
    3dd8:	fe 01       	movw	r30, r28
    3dda:	eb 5b       	subi	r30, 0xBB	; 187
    3ddc:	fe 4f       	sbci	r31, 0xFE	; 254
    3dde:	91 83       	std	Z+1, r25	; 0x01
    3de0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3de2:	de 01       	movw	r26, r28
    3de4:	a9 5b       	subi	r26, 0xB9	; 185
    3de6:	be 4f       	sbci	r27, 0xFE	; 254
    3de8:	fe 01       	movw	r30, r28
    3dea:	e9 5b       	subi	r30, 0xB9	; 185
    3dec:	fe 4f       	sbci	r31, 0xFE	; 254
    3dee:	80 81       	ld	r24, Z
    3df0:	91 81       	ldd	r25, Z+1	; 0x01
    3df2:	01 97       	sbiw	r24, 0x01	; 1
    3df4:	11 96       	adiw	r26, 0x01	; 1
    3df6:	9c 93       	st	X, r25
    3df8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	e9 5b       	subi	r30, 0xB9	; 185
    3dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    3e00:	80 81       	ld	r24, Z
    3e02:	91 81       	ldd	r25, Z+1	; 0x01
    3e04:	00 97       	sbiw	r24, 0x00	; 0
    3e06:	d1 f6       	brne	.-76     	; 0x3dbc <MyStory+0xf80>
    3e08:	27 c0       	rjmp	.+78     	; 0x3e58 <MyStory+0x101c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e0a:	8e 01       	movw	r16, r28
    3e0c:	09 5b       	subi	r16, 0xB9	; 185
    3e0e:	1e 4f       	sbci	r17, 0xFE	; 254
    3e10:	fe 01       	movw	r30, r28
    3e12:	e7 5b       	subi	r30, 0xB7	; 183
    3e14:	fe 4f       	sbci	r31, 0xFE	; 254
    3e16:	60 81       	ld	r22, Z
    3e18:	71 81       	ldd	r23, Z+1	; 0x01
    3e1a:	82 81       	ldd	r24, Z+2	; 0x02
    3e1c:	93 81       	ldd	r25, Z+3	; 0x03
    3e1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e22:	dc 01       	movw	r26, r24
    3e24:	cb 01       	movw	r24, r22
    3e26:	f8 01       	movw	r30, r16
    3e28:	91 83       	std	Z+1, r25	; 0x01
    3e2a:	80 83       	st	Z, r24
    3e2c:	de 01       	movw	r26, r28
    3e2e:	ad 5b       	subi	r26, 0xBD	; 189
    3e30:	be 4f       	sbci	r27, 0xFE	; 254
    3e32:	fe 01       	movw	r30, r28
    3e34:	e9 5b       	subi	r30, 0xB9	; 185
    3e36:	fe 4f       	sbci	r31, 0xFE	; 254
    3e38:	80 81       	ld	r24, Z
    3e3a:	91 81       	ldd	r25, Z+1	; 0x01
    3e3c:	8d 93       	st	X+, r24
    3e3e:	9c 93       	st	X, r25
    3e40:	fe 01       	movw	r30, r28
    3e42:	ed 5b       	subi	r30, 0xBD	; 189
    3e44:	fe 4f       	sbci	r31, 0xFE	; 254
    3e46:	80 81       	ld	r24, Z
    3e48:	91 81       	ldd	r25, Z+1	; 0x01
    3e4a:	01 97       	sbiw	r24, 0x01	; 1
    3e4c:	f1 f7       	brne	.-4      	; 0x3e4a <MyStory+0x100e>
    3e4e:	fe 01       	movw	r30, r28
    3e50:	ed 5b       	subi	r30, 0xBD	; 189
    3e52:	fe 4f       	sbci	r31, 0xFE	; 254
    3e54:	91 83       	std	Z+1, r25	; 0x01
    3e56:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("difficult for me ");
    3e58:	8b e4       	ldi	r24, 0x4B	; 75
    3e5a:	91 e0       	ldi	r25, 0x01	; 1
    3e5c:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    3e60:	82 e0       	ldi	r24, 0x02	; 2
    3e62:	60 e0       	ldi	r22, 0x00	; 0
    3e64:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    3e68:	fe 01       	movw	r30, r28
    3e6a:	e1 5c       	subi	r30, 0xC1	; 193
    3e6c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e6e:	80 e0       	ldi	r24, 0x00	; 0
    3e70:	90 e0       	ldi	r25, 0x00	; 0
    3e72:	aa ef       	ldi	r26, 0xFA	; 250
    3e74:	b3 e4       	ldi	r27, 0x43	; 67
    3e76:	80 83       	st	Z, r24
    3e78:	91 83       	std	Z+1, r25	; 0x01
    3e7a:	a2 83       	std	Z+2, r26	; 0x02
    3e7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e7e:	8e 01       	movw	r16, r28
    3e80:	05 5c       	subi	r16, 0xC5	; 197
    3e82:	1e 4f       	sbci	r17, 0xFE	; 254
    3e84:	fe 01       	movw	r30, r28
    3e86:	e1 5c       	subi	r30, 0xC1	; 193
    3e88:	fe 4f       	sbci	r31, 0xFE	; 254
    3e8a:	60 81       	ld	r22, Z
    3e8c:	71 81       	ldd	r23, Z+1	; 0x01
    3e8e:	82 81       	ldd	r24, Z+2	; 0x02
    3e90:	93 81       	ldd	r25, Z+3	; 0x03
    3e92:	20 e0       	ldi	r18, 0x00	; 0
    3e94:	30 e0       	ldi	r19, 0x00	; 0
    3e96:	4a ef       	ldi	r20, 0xFA	; 250
    3e98:	54 e4       	ldi	r21, 0x44	; 68
    3e9a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e9e:	dc 01       	movw	r26, r24
    3ea0:	cb 01       	movw	r24, r22
    3ea2:	f8 01       	movw	r30, r16
    3ea4:	80 83       	st	Z, r24
    3ea6:	91 83       	std	Z+1, r25	; 0x01
    3ea8:	a2 83       	std	Z+2, r26	; 0x02
    3eaa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3eac:	fe 01       	movw	r30, r28
    3eae:	e5 5c       	subi	r30, 0xC5	; 197
    3eb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3eb2:	60 81       	ld	r22, Z
    3eb4:	71 81       	ldd	r23, Z+1	; 0x01
    3eb6:	82 81       	ldd	r24, Z+2	; 0x02
    3eb8:	93 81       	ldd	r25, Z+3	; 0x03
    3eba:	20 e0       	ldi	r18, 0x00	; 0
    3ebc:	30 e0       	ldi	r19, 0x00	; 0
    3ebe:	40 e8       	ldi	r20, 0x80	; 128
    3ec0:	5f e3       	ldi	r21, 0x3F	; 63
    3ec2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3ec6:	88 23       	and	r24, r24
    3ec8:	44 f4       	brge	.+16     	; 0x3eda <MyStory+0x109e>
		__ticks = 1;
    3eca:	fe 01       	movw	r30, r28
    3ecc:	e7 5c       	subi	r30, 0xC7	; 199
    3ece:	fe 4f       	sbci	r31, 0xFE	; 254
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	91 83       	std	Z+1, r25	; 0x01
    3ed6:	80 83       	st	Z, r24
    3ed8:	64 c0       	rjmp	.+200    	; 0x3fa2 <MyStory+0x1166>
	else if (__tmp > 65535)
    3eda:	fe 01       	movw	r30, r28
    3edc:	e5 5c       	subi	r30, 0xC5	; 197
    3ede:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee0:	60 81       	ld	r22, Z
    3ee2:	71 81       	ldd	r23, Z+1	; 0x01
    3ee4:	82 81       	ldd	r24, Z+2	; 0x02
    3ee6:	93 81       	ldd	r25, Z+3	; 0x03
    3ee8:	20 e0       	ldi	r18, 0x00	; 0
    3eea:	3f ef       	ldi	r19, 0xFF	; 255
    3eec:	4f e7       	ldi	r20, 0x7F	; 127
    3eee:	57 e4       	ldi	r21, 0x47	; 71
    3ef0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3ef4:	18 16       	cp	r1, r24
    3ef6:	0c f0       	brlt	.+2      	; 0x3efa <MyStory+0x10be>
    3ef8:	43 c0       	rjmp	.+134    	; 0x3f80 <MyStory+0x1144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3efa:	fe 01       	movw	r30, r28
    3efc:	e1 5c       	subi	r30, 0xC1	; 193
    3efe:	fe 4f       	sbci	r31, 0xFE	; 254
    3f00:	60 81       	ld	r22, Z
    3f02:	71 81       	ldd	r23, Z+1	; 0x01
    3f04:	82 81       	ldd	r24, Z+2	; 0x02
    3f06:	93 81       	ldd	r25, Z+3	; 0x03
    3f08:	20 e0       	ldi	r18, 0x00	; 0
    3f0a:	30 e0       	ldi	r19, 0x00	; 0
    3f0c:	40 e2       	ldi	r20, 0x20	; 32
    3f0e:	51 e4       	ldi	r21, 0x41	; 65
    3f10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3f14:	dc 01       	movw	r26, r24
    3f16:	cb 01       	movw	r24, r22
    3f18:	8e 01       	movw	r16, r28
    3f1a:	07 5c       	subi	r16, 0xC7	; 199
    3f1c:	1e 4f       	sbci	r17, 0xFE	; 254
    3f1e:	bc 01       	movw	r22, r24
    3f20:	cd 01       	movw	r24, r26
    3f22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f26:	dc 01       	movw	r26, r24
    3f28:	cb 01       	movw	r24, r22
    3f2a:	f8 01       	movw	r30, r16
    3f2c:	91 83       	std	Z+1, r25	; 0x01
    3f2e:	80 83       	st	Z, r24
    3f30:	1f c0       	rjmp	.+62     	; 0x3f70 <MyStory+0x1134>
    3f32:	fe 01       	movw	r30, r28
    3f34:	e9 5c       	subi	r30, 0xC9	; 201
    3f36:	fe 4f       	sbci	r31, 0xFE	; 254
    3f38:	88 ec       	ldi	r24, 0xC8	; 200
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	91 83       	std	Z+1, r25	; 0x01
    3f3e:	80 83       	st	Z, r24
    3f40:	fe 01       	movw	r30, r28
    3f42:	e9 5c       	subi	r30, 0xC9	; 201
    3f44:	fe 4f       	sbci	r31, 0xFE	; 254
    3f46:	80 81       	ld	r24, Z
    3f48:	91 81       	ldd	r25, Z+1	; 0x01
    3f4a:	01 97       	sbiw	r24, 0x01	; 1
    3f4c:	f1 f7       	brne	.-4      	; 0x3f4a <MyStory+0x110e>
    3f4e:	fe 01       	movw	r30, r28
    3f50:	e9 5c       	subi	r30, 0xC9	; 201
    3f52:	fe 4f       	sbci	r31, 0xFE	; 254
    3f54:	91 83       	std	Z+1, r25	; 0x01
    3f56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f58:	de 01       	movw	r26, r28
    3f5a:	a7 5c       	subi	r26, 0xC7	; 199
    3f5c:	be 4f       	sbci	r27, 0xFE	; 254
    3f5e:	fe 01       	movw	r30, r28
    3f60:	e7 5c       	subi	r30, 0xC7	; 199
    3f62:	fe 4f       	sbci	r31, 0xFE	; 254
    3f64:	80 81       	ld	r24, Z
    3f66:	91 81       	ldd	r25, Z+1	; 0x01
    3f68:	01 97       	sbiw	r24, 0x01	; 1
    3f6a:	11 96       	adiw	r26, 0x01	; 1
    3f6c:	9c 93       	st	X, r25
    3f6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f70:	fe 01       	movw	r30, r28
    3f72:	e7 5c       	subi	r30, 0xC7	; 199
    3f74:	fe 4f       	sbci	r31, 0xFE	; 254
    3f76:	80 81       	ld	r24, Z
    3f78:	91 81       	ldd	r25, Z+1	; 0x01
    3f7a:	00 97       	sbiw	r24, 0x00	; 0
    3f7c:	d1 f6       	brne	.-76     	; 0x3f32 <MyStory+0x10f6>
    3f7e:	27 c0       	rjmp	.+78     	; 0x3fce <MyStory+0x1192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f80:	8e 01       	movw	r16, r28
    3f82:	07 5c       	subi	r16, 0xC7	; 199
    3f84:	1e 4f       	sbci	r17, 0xFE	; 254
    3f86:	fe 01       	movw	r30, r28
    3f88:	e5 5c       	subi	r30, 0xC5	; 197
    3f8a:	fe 4f       	sbci	r31, 0xFE	; 254
    3f8c:	60 81       	ld	r22, Z
    3f8e:	71 81       	ldd	r23, Z+1	; 0x01
    3f90:	82 81       	ldd	r24, Z+2	; 0x02
    3f92:	93 81       	ldd	r25, Z+3	; 0x03
    3f94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f98:	dc 01       	movw	r26, r24
    3f9a:	cb 01       	movw	r24, r22
    3f9c:	f8 01       	movw	r30, r16
    3f9e:	91 83       	std	Z+1, r25	; 0x01
    3fa0:	80 83       	st	Z, r24
    3fa2:	de 01       	movw	r26, r28
    3fa4:	ab 5c       	subi	r26, 0xCB	; 203
    3fa6:	be 4f       	sbci	r27, 0xFE	; 254
    3fa8:	fe 01       	movw	r30, r28
    3faa:	e7 5c       	subi	r30, 0xC7	; 199
    3fac:	fe 4f       	sbci	r31, 0xFE	; 254
    3fae:	80 81       	ld	r24, Z
    3fb0:	91 81       	ldd	r25, Z+1	; 0x01
    3fb2:	8d 93       	st	X+, r24
    3fb4:	9c 93       	st	X, r25
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	eb 5c       	subi	r30, 0xCB	; 203
    3fba:	fe 4f       	sbci	r31, 0xFE	; 254
    3fbc:	80 81       	ld	r24, Z
    3fbe:	91 81       	ldd	r25, Z+1	; 0x01
    3fc0:	01 97       	sbiw	r24, 0x01	; 1
    3fc2:	f1 f7       	brne	.-4      	; 0x3fc0 <MyStory+0x1184>
    3fc4:	fe 01       	movw	r30, r28
    3fc6:	eb 5c       	subi	r30, 0xCB	; 203
    3fc8:	fe 4f       	sbci	r31, 0xFE	; 254
    3fca:	91 83       	std	Z+1, r25	; 0x01
    3fcc:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("cuz u can't fall ");
    3fce:	8d e5       	ldi	r24, 0x5D	; 93
    3fd0:	91 e0       	ldi	r25, 0x01	; 1
    3fd2:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>


	LCD_GoTo(3,0);
    3fd6:	83 e0       	ldi	r24, 0x03	; 3
    3fd8:	60 e0       	ldi	r22, 0x00	; 0
    3fda:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    3fde:	fe 01       	movw	r30, r28
    3fe0:	ef 5c       	subi	r30, 0xCF	; 207
    3fe2:	fe 4f       	sbci	r31, 0xFE	; 254
    3fe4:	80 e0       	ldi	r24, 0x00	; 0
    3fe6:	90 e0       	ldi	r25, 0x00	; 0
    3fe8:	aa ef       	ldi	r26, 0xFA	; 250
    3fea:	b3 e4       	ldi	r27, 0x43	; 67
    3fec:	80 83       	st	Z, r24
    3fee:	91 83       	std	Z+1, r25	; 0x01
    3ff0:	a2 83       	std	Z+2, r26	; 0x02
    3ff2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ff4:	8e 01       	movw	r16, r28
    3ff6:	03 5d       	subi	r16, 0xD3	; 211
    3ff8:	1e 4f       	sbci	r17, 0xFE	; 254
    3ffa:	fe 01       	movw	r30, r28
    3ffc:	ef 5c       	subi	r30, 0xCF	; 207
    3ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    4000:	60 81       	ld	r22, Z
    4002:	71 81       	ldd	r23, Z+1	; 0x01
    4004:	82 81       	ldd	r24, Z+2	; 0x02
    4006:	93 81       	ldd	r25, Z+3	; 0x03
    4008:	20 e0       	ldi	r18, 0x00	; 0
    400a:	30 e0       	ldi	r19, 0x00	; 0
    400c:	4a ef       	ldi	r20, 0xFA	; 250
    400e:	54 e4       	ldi	r21, 0x44	; 68
    4010:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4014:	dc 01       	movw	r26, r24
    4016:	cb 01       	movw	r24, r22
    4018:	f8 01       	movw	r30, r16
    401a:	80 83       	st	Z, r24
    401c:	91 83       	std	Z+1, r25	; 0x01
    401e:	a2 83       	std	Z+2, r26	; 0x02
    4020:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4022:	fe 01       	movw	r30, r28
    4024:	e3 5d       	subi	r30, 0xD3	; 211
    4026:	fe 4f       	sbci	r31, 0xFE	; 254
    4028:	60 81       	ld	r22, Z
    402a:	71 81       	ldd	r23, Z+1	; 0x01
    402c:	82 81       	ldd	r24, Z+2	; 0x02
    402e:	93 81       	ldd	r25, Z+3	; 0x03
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	30 e0       	ldi	r19, 0x00	; 0
    4034:	40 e8       	ldi	r20, 0x80	; 128
    4036:	5f e3       	ldi	r21, 0x3F	; 63
    4038:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    403c:	88 23       	and	r24, r24
    403e:	44 f4       	brge	.+16     	; 0x4050 <MyStory+0x1214>
		__ticks = 1;
    4040:	fe 01       	movw	r30, r28
    4042:	e5 5d       	subi	r30, 0xD5	; 213
    4044:	fe 4f       	sbci	r31, 0xFE	; 254
    4046:	81 e0       	ldi	r24, 0x01	; 1
    4048:	90 e0       	ldi	r25, 0x00	; 0
    404a:	91 83       	std	Z+1, r25	; 0x01
    404c:	80 83       	st	Z, r24
    404e:	64 c0       	rjmp	.+200    	; 0x4118 <MyStory+0x12dc>
	else if (__tmp > 65535)
    4050:	fe 01       	movw	r30, r28
    4052:	e3 5d       	subi	r30, 0xD3	; 211
    4054:	fe 4f       	sbci	r31, 0xFE	; 254
    4056:	60 81       	ld	r22, Z
    4058:	71 81       	ldd	r23, Z+1	; 0x01
    405a:	82 81       	ldd	r24, Z+2	; 0x02
    405c:	93 81       	ldd	r25, Z+3	; 0x03
    405e:	20 e0       	ldi	r18, 0x00	; 0
    4060:	3f ef       	ldi	r19, 0xFF	; 255
    4062:	4f e7       	ldi	r20, 0x7F	; 127
    4064:	57 e4       	ldi	r21, 0x47	; 71
    4066:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    406a:	18 16       	cp	r1, r24
    406c:	0c f0       	brlt	.+2      	; 0x4070 <MyStory+0x1234>
    406e:	43 c0       	rjmp	.+134    	; 0x40f6 <MyStory+0x12ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4070:	fe 01       	movw	r30, r28
    4072:	ef 5c       	subi	r30, 0xCF	; 207
    4074:	fe 4f       	sbci	r31, 0xFE	; 254
    4076:	60 81       	ld	r22, Z
    4078:	71 81       	ldd	r23, Z+1	; 0x01
    407a:	82 81       	ldd	r24, Z+2	; 0x02
    407c:	93 81       	ldd	r25, Z+3	; 0x03
    407e:	20 e0       	ldi	r18, 0x00	; 0
    4080:	30 e0       	ldi	r19, 0x00	; 0
    4082:	40 e2       	ldi	r20, 0x20	; 32
    4084:	51 e4       	ldi	r21, 0x41	; 65
    4086:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    408a:	dc 01       	movw	r26, r24
    408c:	cb 01       	movw	r24, r22
    408e:	8e 01       	movw	r16, r28
    4090:	05 5d       	subi	r16, 0xD5	; 213
    4092:	1e 4f       	sbci	r17, 0xFE	; 254
    4094:	bc 01       	movw	r22, r24
    4096:	cd 01       	movw	r24, r26
    4098:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    409c:	dc 01       	movw	r26, r24
    409e:	cb 01       	movw	r24, r22
    40a0:	f8 01       	movw	r30, r16
    40a2:	91 83       	std	Z+1, r25	; 0x01
    40a4:	80 83       	st	Z, r24
    40a6:	1f c0       	rjmp	.+62     	; 0x40e6 <MyStory+0x12aa>
    40a8:	fe 01       	movw	r30, r28
    40aa:	e7 5d       	subi	r30, 0xD7	; 215
    40ac:	fe 4f       	sbci	r31, 0xFE	; 254
    40ae:	88 ec       	ldi	r24, 0xC8	; 200
    40b0:	90 e0       	ldi	r25, 0x00	; 0
    40b2:	91 83       	std	Z+1, r25	; 0x01
    40b4:	80 83       	st	Z, r24
    40b6:	fe 01       	movw	r30, r28
    40b8:	e7 5d       	subi	r30, 0xD7	; 215
    40ba:	fe 4f       	sbci	r31, 0xFE	; 254
    40bc:	80 81       	ld	r24, Z
    40be:	91 81       	ldd	r25, Z+1	; 0x01
    40c0:	01 97       	sbiw	r24, 0x01	; 1
    40c2:	f1 f7       	brne	.-4      	; 0x40c0 <MyStory+0x1284>
    40c4:	fe 01       	movw	r30, r28
    40c6:	e7 5d       	subi	r30, 0xD7	; 215
    40c8:	fe 4f       	sbci	r31, 0xFE	; 254
    40ca:	91 83       	std	Z+1, r25	; 0x01
    40cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40ce:	de 01       	movw	r26, r28
    40d0:	a5 5d       	subi	r26, 0xD5	; 213
    40d2:	be 4f       	sbci	r27, 0xFE	; 254
    40d4:	fe 01       	movw	r30, r28
    40d6:	e5 5d       	subi	r30, 0xD5	; 213
    40d8:	fe 4f       	sbci	r31, 0xFE	; 254
    40da:	80 81       	ld	r24, Z
    40dc:	91 81       	ldd	r25, Z+1	; 0x01
    40de:	01 97       	sbiw	r24, 0x01	; 1
    40e0:	11 96       	adiw	r26, 0x01	; 1
    40e2:	9c 93       	st	X, r25
    40e4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40e6:	fe 01       	movw	r30, r28
    40e8:	e5 5d       	subi	r30, 0xD5	; 213
    40ea:	fe 4f       	sbci	r31, 0xFE	; 254
    40ec:	80 81       	ld	r24, Z
    40ee:	91 81       	ldd	r25, Z+1	; 0x01
    40f0:	00 97       	sbiw	r24, 0x00	; 0
    40f2:	d1 f6       	brne	.-76     	; 0x40a8 <MyStory+0x126c>
    40f4:	27 c0       	rjmp	.+78     	; 0x4144 <MyStory+0x1308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40f6:	8e 01       	movw	r16, r28
    40f8:	05 5d       	subi	r16, 0xD5	; 213
    40fa:	1e 4f       	sbci	r17, 0xFE	; 254
    40fc:	fe 01       	movw	r30, r28
    40fe:	e3 5d       	subi	r30, 0xD3	; 211
    4100:	fe 4f       	sbci	r31, 0xFE	; 254
    4102:	60 81       	ld	r22, Z
    4104:	71 81       	ldd	r23, Z+1	; 0x01
    4106:	82 81       	ldd	r24, Z+2	; 0x02
    4108:	93 81       	ldd	r25, Z+3	; 0x03
    410a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    410e:	dc 01       	movw	r26, r24
    4110:	cb 01       	movw	r24, r22
    4112:	f8 01       	movw	r30, r16
    4114:	91 83       	std	Z+1, r25	; 0x01
    4116:	80 83       	st	Z, r24
    4118:	de 01       	movw	r26, r28
    411a:	a9 5d       	subi	r26, 0xD9	; 217
    411c:	be 4f       	sbci	r27, 0xFE	; 254
    411e:	fe 01       	movw	r30, r28
    4120:	e5 5d       	subi	r30, 0xD5	; 213
    4122:	fe 4f       	sbci	r31, 0xFE	; 254
    4124:	80 81       	ld	r24, Z
    4126:	91 81       	ldd	r25, Z+1	; 0x01
    4128:	8d 93       	st	X+, r24
    412a:	9c 93       	st	X, r25
    412c:	fe 01       	movw	r30, r28
    412e:	e9 5d       	subi	r30, 0xD9	; 217
    4130:	fe 4f       	sbci	r31, 0xFE	; 254
    4132:	80 81       	ld	r24, Z
    4134:	91 81       	ldd	r25, Z+1	; 0x01
    4136:	01 97       	sbiw	r24, 0x01	; 1
    4138:	f1 f7       	brne	.-4      	; 0x4136 <MyStory+0x12fa>
    413a:	fe 01       	movw	r30, r28
    413c:	e9 5d       	subi	r30, 0xD9	; 217
    413e:	fe 4f       	sbci	r31, 0xFE	; 254
    4140:	91 83       	std	Z+1, r25	; 0x01
    4142:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("down or be weak ");
    4144:	8f e6       	ldi	r24, 0x6F	; 111
    4146:	91 e0       	ldi	r25, 0x01	; 1
    4148:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    414c:	fe 01       	movw	r30, r28
    414e:	ed 5d       	subi	r30, 0xDD	; 221
    4150:	fe 4f       	sbci	r31, 0xFE	; 254
    4152:	80 e0       	ldi	r24, 0x00	; 0
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	aa e7       	ldi	r26, 0x7A	; 122
    4158:	b4 e4       	ldi	r27, 0x44	; 68
    415a:	80 83       	st	Z, r24
    415c:	91 83       	std	Z+1, r25	; 0x01
    415e:	a2 83       	std	Z+2, r26	; 0x02
    4160:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4162:	8e 01       	movw	r16, r28
    4164:	01 5e       	subi	r16, 0xE1	; 225
    4166:	1e 4f       	sbci	r17, 0xFE	; 254
    4168:	fe 01       	movw	r30, r28
    416a:	ed 5d       	subi	r30, 0xDD	; 221
    416c:	fe 4f       	sbci	r31, 0xFE	; 254
    416e:	60 81       	ld	r22, Z
    4170:	71 81       	ldd	r23, Z+1	; 0x01
    4172:	82 81       	ldd	r24, Z+2	; 0x02
    4174:	93 81       	ldd	r25, Z+3	; 0x03
    4176:	20 e0       	ldi	r18, 0x00	; 0
    4178:	30 e0       	ldi	r19, 0x00	; 0
    417a:	4a ef       	ldi	r20, 0xFA	; 250
    417c:	54 e4       	ldi	r21, 0x44	; 68
    417e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4182:	dc 01       	movw	r26, r24
    4184:	cb 01       	movw	r24, r22
    4186:	f8 01       	movw	r30, r16
    4188:	80 83       	st	Z, r24
    418a:	91 83       	std	Z+1, r25	; 0x01
    418c:	a2 83       	std	Z+2, r26	; 0x02
    418e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4190:	fe 01       	movw	r30, r28
    4192:	e1 5e       	subi	r30, 0xE1	; 225
    4194:	fe 4f       	sbci	r31, 0xFE	; 254
    4196:	60 81       	ld	r22, Z
    4198:	71 81       	ldd	r23, Z+1	; 0x01
    419a:	82 81       	ldd	r24, Z+2	; 0x02
    419c:	93 81       	ldd	r25, Z+3	; 0x03
    419e:	20 e0       	ldi	r18, 0x00	; 0
    41a0:	30 e0       	ldi	r19, 0x00	; 0
    41a2:	40 e8       	ldi	r20, 0x80	; 128
    41a4:	5f e3       	ldi	r21, 0x3F	; 63
    41a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    41aa:	88 23       	and	r24, r24
    41ac:	44 f4       	brge	.+16     	; 0x41be <MyStory+0x1382>
		__ticks = 1;
    41ae:	fe 01       	movw	r30, r28
    41b0:	e3 5e       	subi	r30, 0xE3	; 227
    41b2:	fe 4f       	sbci	r31, 0xFE	; 254
    41b4:	81 e0       	ldi	r24, 0x01	; 1
    41b6:	90 e0       	ldi	r25, 0x00	; 0
    41b8:	91 83       	std	Z+1, r25	; 0x01
    41ba:	80 83       	st	Z, r24
    41bc:	64 c0       	rjmp	.+200    	; 0x4286 <MyStory+0x144a>
	else if (__tmp > 65535)
    41be:	fe 01       	movw	r30, r28
    41c0:	e1 5e       	subi	r30, 0xE1	; 225
    41c2:	fe 4f       	sbci	r31, 0xFE	; 254
    41c4:	60 81       	ld	r22, Z
    41c6:	71 81       	ldd	r23, Z+1	; 0x01
    41c8:	82 81       	ldd	r24, Z+2	; 0x02
    41ca:	93 81       	ldd	r25, Z+3	; 0x03
    41cc:	20 e0       	ldi	r18, 0x00	; 0
    41ce:	3f ef       	ldi	r19, 0xFF	; 255
    41d0:	4f e7       	ldi	r20, 0x7F	; 127
    41d2:	57 e4       	ldi	r21, 0x47	; 71
    41d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    41d8:	18 16       	cp	r1, r24
    41da:	0c f0       	brlt	.+2      	; 0x41de <MyStory+0x13a2>
    41dc:	43 c0       	rjmp	.+134    	; 0x4264 <MyStory+0x1428>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41de:	fe 01       	movw	r30, r28
    41e0:	ed 5d       	subi	r30, 0xDD	; 221
    41e2:	fe 4f       	sbci	r31, 0xFE	; 254
    41e4:	60 81       	ld	r22, Z
    41e6:	71 81       	ldd	r23, Z+1	; 0x01
    41e8:	82 81       	ldd	r24, Z+2	; 0x02
    41ea:	93 81       	ldd	r25, Z+3	; 0x03
    41ec:	20 e0       	ldi	r18, 0x00	; 0
    41ee:	30 e0       	ldi	r19, 0x00	; 0
    41f0:	40 e2       	ldi	r20, 0x20	; 32
    41f2:	51 e4       	ldi	r21, 0x41	; 65
    41f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    41f8:	dc 01       	movw	r26, r24
    41fa:	cb 01       	movw	r24, r22
    41fc:	8e 01       	movw	r16, r28
    41fe:	03 5e       	subi	r16, 0xE3	; 227
    4200:	1e 4f       	sbci	r17, 0xFE	; 254
    4202:	bc 01       	movw	r22, r24
    4204:	cd 01       	movw	r24, r26
    4206:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    420a:	dc 01       	movw	r26, r24
    420c:	cb 01       	movw	r24, r22
    420e:	f8 01       	movw	r30, r16
    4210:	91 83       	std	Z+1, r25	; 0x01
    4212:	80 83       	st	Z, r24
    4214:	1f c0       	rjmp	.+62     	; 0x4254 <MyStory+0x1418>
    4216:	fe 01       	movw	r30, r28
    4218:	e5 5e       	subi	r30, 0xE5	; 229
    421a:	fe 4f       	sbci	r31, 0xFE	; 254
    421c:	88 ec       	ldi	r24, 0xC8	; 200
    421e:	90 e0       	ldi	r25, 0x00	; 0
    4220:	91 83       	std	Z+1, r25	; 0x01
    4222:	80 83       	st	Z, r24
    4224:	fe 01       	movw	r30, r28
    4226:	e5 5e       	subi	r30, 0xE5	; 229
    4228:	fe 4f       	sbci	r31, 0xFE	; 254
    422a:	80 81       	ld	r24, Z
    422c:	91 81       	ldd	r25, Z+1	; 0x01
    422e:	01 97       	sbiw	r24, 0x01	; 1
    4230:	f1 f7       	brne	.-4      	; 0x422e <MyStory+0x13f2>
    4232:	fe 01       	movw	r30, r28
    4234:	e5 5e       	subi	r30, 0xE5	; 229
    4236:	fe 4f       	sbci	r31, 0xFE	; 254
    4238:	91 83       	std	Z+1, r25	; 0x01
    423a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    423c:	de 01       	movw	r26, r28
    423e:	a3 5e       	subi	r26, 0xE3	; 227
    4240:	be 4f       	sbci	r27, 0xFE	; 254
    4242:	fe 01       	movw	r30, r28
    4244:	e3 5e       	subi	r30, 0xE3	; 227
    4246:	fe 4f       	sbci	r31, 0xFE	; 254
    4248:	80 81       	ld	r24, Z
    424a:	91 81       	ldd	r25, Z+1	; 0x01
    424c:	01 97       	sbiw	r24, 0x01	; 1
    424e:	11 96       	adiw	r26, 0x01	; 1
    4250:	9c 93       	st	X, r25
    4252:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4254:	fe 01       	movw	r30, r28
    4256:	e3 5e       	subi	r30, 0xE3	; 227
    4258:	fe 4f       	sbci	r31, 0xFE	; 254
    425a:	80 81       	ld	r24, Z
    425c:	91 81       	ldd	r25, Z+1	; 0x01
    425e:	00 97       	sbiw	r24, 0x00	; 0
    4260:	d1 f6       	brne	.-76     	; 0x4216 <MyStory+0x13da>
    4262:	27 c0       	rjmp	.+78     	; 0x42b2 <MyStory+0x1476>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4264:	8e 01       	movw	r16, r28
    4266:	03 5e       	subi	r16, 0xE3	; 227
    4268:	1e 4f       	sbci	r17, 0xFE	; 254
    426a:	fe 01       	movw	r30, r28
    426c:	e1 5e       	subi	r30, 0xE1	; 225
    426e:	fe 4f       	sbci	r31, 0xFE	; 254
    4270:	60 81       	ld	r22, Z
    4272:	71 81       	ldd	r23, Z+1	; 0x01
    4274:	82 81       	ldd	r24, Z+2	; 0x02
    4276:	93 81       	ldd	r25, Z+3	; 0x03
    4278:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    427c:	dc 01       	movw	r26, r24
    427e:	cb 01       	movw	r24, r22
    4280:	f8 01       	movw	r30, r16
    4282:	91 83       	std	Z+1, r25	; 0x01
    4284:	80 83       	st	Z, r24
    4286:	de 01       	movw	r26, r28
    4288:	a7 5e       	subi	r26, 0xE7	; 231
    428a:	be 4f       	sbci	r27, 0xFE	; 254
    428c:	fe 01       	movw	r30, r28
    428e:	e3 5e       	subi	r30, 0xE3	; 227
    4290:	fe 4f       	sbci	r31, 0xFE	; 254
    4292:	80 81       	ld	r24, Z
    4294:	91 81       	ldd	r25, Z+1	; 0x01
    4296:	8d 93       	st	X+, r24
    4298:	9c 93       	st	X, r25
    429a:	fe 01       	movw	r30, r28
    429c:	e7 5e       	subi	r30, 0xE7	; 231
    429e:	fe 4f       	sbci	r31, 0xFE	; 254
    42a0:	80 81       	ld	r24, Z
    42a2:	91 81       	ldd	r25, Z+1	; 0x01
    42a4:	01 97       	sbiw	r24, 0x01	; 1
    42a6:	f1 f7       	brne	.-4      	; 0x42a4 <MyStory+0x1468>
    42a8:	fe 01       	movw	r30, r28
    42aa:	e7 5e       	subi	r30, 0xE7	; 231
    42ac:	fe 4f       	sbci	r31, 0xFE	; 254
    42ae:	91 83       	std	Z+1, r25	; 0x01
    42b0:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear();  //clear
    42b2:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    42b6:	80 e0       	ldi	r24, 0x00	; 0
    42b8:	60 e0       	ldi	r22, 0x00	; 0
    42ba:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    42be:	fe 01       	movw	r30, r28
    42c0:	eb 5e       	subi	r30, 0xEB	; 235
    42c2:	fe 4f       	sbci	r31, 0xFE	; 254
    42c4:	80 e0       	ldi	r24, 0x00	; 0
    42c6:	90 e0       	ldi	r25, 0x00	; 0
    42c8:	aa ef       	ldi	r26, 0xFA	; 250
    42ca:	b3 e4       	ldi	r27, 0x43	; 67
    42cc:	80 83       	st	Z, r24
    42ce:	91 83       	std	Z+1, r25	; 0x01
    42d0:	a2 83       	std	Z+2, r26	; 0x02
    42d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42d4:	8e 01       	movw	r16, r28
    42d6:	0f 5e       	subi	r16, 0xEF	; 239
    42d8:	1e 4f       	sbci	r17, 0xFE	; 254
    42da:	fe 01       	movw	r30, r28
    42dc:	eb 5e       	subi	r30, 0xEB	; 235
    42de:	fe 4f       	sbci	r31, 0xFE	; 254
    42e0:	60 81       	ld	r22, Z
    42e2:	71 81       	ldd	r23, Z+1	; 0x01
    42e4:	82 81       	ldd	r24, Z+2	; 0x02
    42e6:	93 81       	ldd	r25, Z+3	; 0x03
    42e8:	20 e0       	ldi	r18, 0x00	; 0
    42ea:	30 e0       	ldi	r19, 0x00	; 0
    42ec:	4a ef       	ldi	r20, 0xFA	; 250
    42ee:	54 e4       	ldi	r21, 0x44	; 68
    42f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    42f4:	dc 01       	movw	r26, r24
    42f6:	cb 01       	movw	r24, r22
    42f8:	f8 01       	movw	r30, r16
    42fa:	80 83       	st	Z, r24
    42fc:	91 83       	std	Z+1, r25	; 0x01
    42fe:	a2 83       	std	Z+2, r26	; 0x02
    4300:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4302:	fe 01       	movw	r30, r28
    4304:	ef 5e       	subi	r30, 0xEF	; 239
    4306:	fe 4f       	sbci	r31, 0xFE	; 254
    4308:	60 81       	ld	r22, Z
    430a:	71 81       	ldd	r23, Z+1	; 0x01
    430c:	82 81       	ldd	r24, Z+2	; 0x02
    430e:	93 81       	ldd	r25, Z+3	; 0x03
    4310:	20 e0       	ldi	r18, 0x00	; 0
    4312:	30 e0       	ldi	r19, 0x00	; 0
    4314:	40 e8       	ldi	r20, 0x80	; 128
    4316:	5f e3       	ldi	r21, 0x3F	; 63
    4318:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    431c:	88 23       	and	r24, r24
    431e:	44 f4       	brge	.+16     	; 0x4330 <MyStory+0x14f4>
		__ticks = 1;
    4320:	fe 01       	movw	r30, r28
    4322:	e1 5f       	subi	r30, 0xF1	; 241
    4324:	fe 4f       	sbci	r31, 0xFE	; 254
    4326:	81 e0       	ldi	r24, 0x01	; 1
    4328:	90 e0       	ldi	r25, 0x00	; 0
    432a:	91 83       	std	Z+1, r25	; 0x01
    432c:	80 83       	st	Z, r24
    432e:	64 c0       	rjmp	.+200    	; 0x43f8 <MyStory+0x15bc>
	else if (__tmp > 65535)
    4330:	fe 01       	movw	r30, r28
    4332:	ef 5e       	subi	r30, 0xEF	; 239
    4334:	fe 4f       	sbci	r31, 0xFE	; 254
    4336:	60 81       	ld	r22, Z
    4338:	71 81       	ldd	r23, Z+1	; 0x01
    433a:	82 81       	ldd	r24, Z+2	; 0x02
    433c:	93 81       	ldd	r25, Z+3	; 0x03
    433e:	20 e0       	ldi	r18, 0x00	; 0
    4340:	3f ef       	ldi	r19, 0xFF	; 255
    4342:	4f e7       	ldi	r20, 0x7F	; 127
    4344:	57 e4       	ldi	r21, 0x47	; 71
    4346:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    434a:	18 16       	cp	r1, r24
    434c:	0c f0       	brlt	.+2      	; 0x4350 <MyStory+0x1514>
    434e:	43 c0       	rjmp	.+134    	; 0x43d6 <MyStory+0x159a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4350:	fe 01       	movw	r30, r28
    4352:	eb 5e       	subi	r30, 0xEB	; 235
    4354:	fe 4f       	sbci	r31, 0xFE	; 254
    4356:	60 81       	ld	r22, Z
    4358:	71 81       	ldd	r23, Z+1	; 0x01
    435a:	82 81       	ldd	r24, Z+2	; 0x02
    435c:	93 81       	ldd	r25, Z+3	; 0x03
    435e:	20 e0       	ldi	r18, 0x00	; 0
    4360:	30 e0       	ldi	r19, 0x00	; 0
    4362:	40 e2       	ldi	r20, 0x20	; 32
    4364:	51 e4       	ldi	r21, 0x41	; 65
    4366:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    436a:	dc 01       	movw	r26, r24
    436c:	cb 01       	movw	r24, r22
    436e:	8e 01       	movw	r16, r28
    4370:	01 5f       	subi	r16, 0xF1	; 241
    4372:	1e 4f       	sbci	r17, 0xFE	; 254
    4374:	bc 01       	movw	r22, r24
    4376:	cd 01       	movw	r24, r26
    4378:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    437c:	dc 01       	movw	r26, r24
    437e:	cb 01       	movw	r24, r22
    4380:	f8 01       	movw	r30, r16
    4382:	91 83       	std	Z+1, r25	; 0x01
    4384:	80 83       	st	Z, r24
    4386:	1f c0       	rjmp	.+62     	; 0x43c6 <MyStory+0x158a>
    4388:	fe 01       	movw	r30, r28
    438a:	e3 5f       	subi	r30, 0xF3	; 243
    438c:	fe 4f       	sbci	r31, 0xFE	; 254
    438e:	88 ec       	ldi	r24, 0xC8	; 200
    4390:	90 e0       	ldi	r25, 0x00	; 0
    4392:	91 83       	std	Z+1, r25	; 0x01
    4394:	80 83       	st	Z, r24
    4396:	fe 01       	movw	r30, r28
    4398:	e3 5f       	subi	r30, 0xF3	; 243
    439a:	fe 4f       	sbci	r31, 0xFE	; 254
    439c:	80 81       	ld	r24, Z
    439e:	91 81       	ldd	r25, Z+1	; 0x01
    43a0:	01 97       	sbiw	r24, 0x01	; 1
    43a2:	f1 f7       	brne	.-4      	; 0x43a0 <MyStory+0x1564>
    43a4:	fe 01       	movw	r30, r28
    43a6:	e3 5f       	subi	r30, 0xF3	; 243
    43a8:	fe 4f       	sbci	r31, 0xFE	; 254
    43aa:	91 83       	std	Z+1, r25	; 0x01
    43ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43ae:	de 01       	movw	r26, r28
    43b0:	a1 5f       	subi	r26, 0xF1	; 241
    43b2:	be 4f       	sbci	r27, 0xFE	; 254
    43b4:	fe 01       	movw	r30, r28
    43b6:	e1 5f       	subi	r30, 0xF1	; 241
    43b8:	fe 4f       	sbci	r31, 0xFE	; 254
    43ba:	80 81       	ld	r24, Z
    43bc:	91 81       	ldd	r25, Z+1	; 0x01
    43be:	01 97       	sbiw	r24, 0x01	; 1
    43c0:	11 96       	adiw	r26, 0x01	; 1
    43c2:	9c 93       	st	X, r25
    43c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43c6:	fe 01       	movw	r30, r28
    43c8:	e1 5f       	subi	r30, 0xF1	; 241
    43ca:	fe 4f       	sbci	r31, 0xFE	; 254
    43cc:	80 81       	ld	r24, Z
    43ce:	91 81       	ldd	r25, Z+1	; 0x01
    43d0:	00 97       	sbiw	r24, 0x00	; 0
    43d2:	d1 f6       	brne	.-76     	; 0x4388 <MyStory+0x154c>
    43d4:	27 c0       	rjmp	.+78     	; 0x4424 <MyStory+0x15e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43d6:	8e 01       	movw	r16, r28
    43d8:	01 5f       	subi	r16, 0xF1	; 241
    43da:	1e 4f       	sbci	r17, 0xFE	; 254
    43dc:	fe 01       	movw	r30, r28
    43de:	ef 5e       	subi	r30, 0xEF	; 239
    43e0:	fe 4f       	sbci	r31, 0xFE	; 254
    43e2:	60 81       	ld	r22, Z
    43e4:	71 81       	ldd	r23, Z+1	; 0x01
    43e6:	82 81       	ldd	r24, Z+2	; 0x02
    43e8:	93 81       	ldd	r25, Z+3	; 0x03
    43ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43ee:	dc 01       	movw	r26, r24
    43f0:	cb 01       	movw	r24, r22
    43f2:	f8 01       	movw	r30, r16
    43f4:	91 83       	std	Z+1, r25	; 0x01
    43f6:	80 83       	st	Z, r24
    43f8:	de 01       	movw	r26, r28
    43fa:	a5 5f       	subi	r26, 0xF5	; 245
    43fc:	be 4f       	sbci	r27, 0xFE	; 254
    43fe:	fe 01       	movw	r30, r28
    4400:	e1 5f       	subi	r30, 0xF1	; 241
    4402:	fe 4f       	sbci	r31, 0xFE	; 254
    4404:	80 81       	ld	r24, Z
    4406:	91 81       	ldd	r25, Z+1	; 0x01
    4408:	8d 93       	st	X+, r24
    440a:	9c 93       	st	X, r25
    440c:	fe 01       	movw	r30, r28
    440e:	e5 5f       	subi	r30, 0xF5	; 245
    4410:	fe 4f       	sbci	r31, 0xFE	; 254
    4412:	80 81       	ld	r24, Z
    4414:	91 81       	ldd	r25, Z+1	; 0x01
    4416:	01 97       	sbiw	r24, 0x01	; 1
    4418:	f1 f7       	brne	.-4      	; 0x4416 <MyStory+0x15da>
    441a:	fe 01       	movw	r30, r28
    441c:	e5 5f       	subi	r30, 0xF5	; 245
    441e:	fe 4f       	sbci	r31, 0xFE	; 254
    4420:	91 83       	std	Z+1, r25	; 0x01
    4422:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("besides the grad ");
    4424:	80 e8       	ldi	r24, 0x80	; 128
    4426:	91 e0       	ldi	r25, 0x01	; 1
    4428:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    442c:	81 e0       	ldi	r24, 0x01	; 1
    442e:	60 e0       	ldi	r22, 0x00	; 0
    4430:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4434:	fe 01       	movw	r30, r28
    4436:	e9 5f       	subi	r30, 0xF9	; 249
    4438:	fe 4f       	sbci	r31, 0xFE	; 254
    443a:	80 e0       	ldi	r24, 0x00	; 0
    443c:	90 e0       	ldi	r25, 0x00	; 0
    443e:	aa ef       	ldi	r26, 0xFA	; 250
    4440:	b3 e4       	ldi	r27, 0x43	; 67
    4442:	80 83       	st	Z, r24
    4444:	91 83       	std	Z+1, r25	; 0x01
    4446:	a2 83       	std	Z+2, r26	; 0x02
    4448:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    444a:	8e 01       	movw	r16, r28
    444c:	0d 5f       	subi	r16, 0xFD	; 253
    444e:	1e 4f       	sbci	r17, 0xFE	; 254
    4450:	fe 01       	movw	r30, r28
    4452:	e9 5f       	subi	r30, 0xF9	; 249
    4454:	fe 4f       	sbci	r31, 0xFE	; 254
    4456:	60 81       	ld	r22, Z
    4458:	71 81       	ldd	r23, Z+1	; 0x01
    445a:	82 81       	ldd	r24, Z+2	; 0x02
    445c:	93 81       	ldd	r25, Z+3	; 0x03
    445e:	20 e0       	ldi	r18, 0x00	; 0
    4460:	30 e0       	ldi	r19, 0x00	; 0
    4462:	4a ef       	ldi	r20, 0xFA	; 250
    4464:	54 e4       	ldi	r21, 0x44	; 68
    4466:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    446a:	dc 01       	movw	r26, r24
    446c:	cb 01       	movw	r24, r22
    446e:	f8 01       	movw	r30, r16
    4470:	80 83       	st	Z, r24
    4472:	91 83       	std	Z+1, r25	; 0x01
    4474:	a2 83       	std	Z+2, r26	; 0x02
    4476:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4478:	fe 01       	movw	r30, r28
    447a:	ed 5f       	subi	r30, 0xFD	; 253
    447c:	fe 4f       	sbci	r31, 0xFE	; 254
    447e:	60 81       	ld	r22, Z
    4480:	71 81       	ldd	r23, Z+1	; 0x01
    4482:	82 81       	ldd	r24, Z+2	; 0x02
    4484:	93 81       	ldd	r25, Z+3	; 0x03
    4486:	20 e0       	ldi	r18, 0x00	; 0
    4488:	30 e0       	ldi	r19, 0x00	; 0
    448a:	40 e8       	ldi	r20, 0x80	; 128
    448c:	5f e3       	ldi	r21, 0x3F	; 63
    448e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4492:	88 23       	and	r24, r24
    4494:	44 f4       	brge	.+16     	; 0x44a6 <MyStory+0x166a>
		__ticks = 1;
    4496:	fe 01       	movw	r30, r28
    4498:	ef 5f       	subi	r30, 0xFF	; 255
    449a:	fe 4f       	sbci	r31, 0xFE	; 254
    449c:	81 e0       	ldi	r24, 0x01	; 1
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	91 83       	std	Z+1, r25	; 0x01
    44a2:	80 83       	st	Z, r24
    44a4:	64 c0       	rjmp	.+200    	; 0x456e <MyStory+0x1732>
	else if (__tmp > 65535)
    44a6:	fe 01       	movw	r30, r28
    44a8:	ed 5f       	subi	r30, 0xFD	; 253
    44aa:	fe 4f       	sbci	r31, 0xFE	; 254
    44ac:	60 81       	ld	r22, Z
    44ae:	71 81       	ldd	r23, Z+1	; 0x01
    44b0:	82 81       	ldd	r24, Z+2	; 0x02
    44b2:	93 81       	ldd	r25, Z+3	; 0x03
    44b4:	20 e0       	ldi	r18, 0x00	; 0
    44b6:	3f ef       	ldi	r19, 0xFF	; 255
    44b8:	4f e7       	ldi	r20, 0x7F	; 127
    44ba:	57 e4       	ldi	r21, 0x47	; 71
    44bc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    44c0:	18 16       	cp	r1, r24
    44c2:	0c f0       	brlt	.+2      	; 0x44c6 <MyStory+0x168a>
    44c4:	43 c0       	rjmp	.+134    	; 0x454c <MyStory+0x1710>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44c6:	fe 01       	movw	r30, r28
    44c8:	e9 5f       	subi	r30, 0xF9	; 249
    44ca:	fe 4f       	sbci	r31, 0xFE	; 254
    44cc:	60 81       	ld	r22, Z
    44ce:	71 81       	ldd	r23, Z+1	; 0x01
    44d0:	82 81       	ldd	r24, Z+2	; 0x02
    44d2:	93 81       	ldd	r25, Z+3	; 0x03
    44d4:	20 e0       	ldi	r18, 0x00	; 0
    44d6:	30 e0       	ldi	r19, 0x00	; 0
    44d8:	40 e2       	ldi	r20, 0x20	; 32
    44da:	51 e4       	ldi	r21, 0x41	; 65
    44dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44e0:	dc 01       	movw	r26, r24
    44e2:	cb 01       	movw	r24, r22
    44e4:	8e 01       	movw	r16, r28
    44e6:	0f 5f       	subi	r16, 0xFF	; 255
    44e8:	1e 4f       	sbci	r17, 0xFE	; 254
    44ea:	bc 01       	movw	r22, r24
    44ec:	cd 01       	movw	r24, r26
    44ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44f2:	dc 01       	movw	r26, r24
    44f4:	cb 01       	movw	r24, r22
    44f6:	f8 01       	movw	r30, r16
    44f8:	91 83       	std	Z+1, r25	; 0x01
    44fa:	80 83       	st	Z, r24
    44fc:	1f c0       	rjmp	.+62     	; 0x453c <MyStory+0x1700>
    44fe:	fe 01       	movw	r30, r28
    4500:	e1 50       	subi	r30, 0x01	; 1
    4502:	ff 4f       	sbci	r31, 0xFF	; 255
    4504:	88 ec       	ldi	r24, 0xC8	; 200
    4506:	90 e0       	ldi	r25, 0x00	; 0
    4508:	91 83       	std	Z+1, r25	; 0x01
    450a:	80 83       	st	Z, r24
    450c:	fe 01       	movw	r30, r28
    450e:	e1 50       	subi	r30, 0x01	; 1
    4510:	ff 4f       	sbci	r31, 0xFF	; 255
    4512:	80 81       	ld	r24, Z
    4514:	91 81       	ldd	r25, Z+1	; 0x01
    4516:	01 97       	sbiw	r24, 0x01	; 1
    4518:	f1 f7       	brne	.-4      	; 0x4516 <MyStory+0x16da>
    451a:	fe 01       	movw	r30, r28
    451c:	e1 50       	subi	r30, 0x01	; 1
    451e:	ff 4f       	sbci	r31, 0xFF	; 255
    4520:	91 83       	std	Z+1, r25	; 0x01
    4522:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4524:	de 01       	movw	r26, r28
    4526:	af 5f       	subi	r26, 0xFF	; 255
    4528:	be 4f       	sbci	r27, 0xFE	; 254
    452a:	fe 01       	movw	r30, r28
    452c:	ef 5f       	subi	r30, 0xFF	; 255
    452e:	fe 4f       	sbci	r31, 0xFE	; 254
    4530:	80 81       	ld	r24, Z
    4532:	91 81       	ldd	r25, Z+1	; 0x01
    4534:	01 97       	sbiw	r24, 0x01	; 1
    4536:	11 96       	adiw	r26, 0x01	; 1
    4538:	9c 93       	st	X, r25
    453a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    453c:	fe 01       	movw	r30, r28
    453e:	ef 5f       	subi	r30, 0xFF	; 255
    4540:	fe 4f       	sbci	r31, 0xFE	; 254
    4542:	80 81       	ld	r24, Z
    4544:	91 81       	ldd	r25, Z+1	; 0x01
    4546:	00 97       	sbiw	r24, 0x00	; 0
    4548:	d1 f6       	brne	.-76     	; 0x44fe <MyStory+0x16c2>
    454a:	27 c0       	rjmp	.+78     	; 0x459a <MyStory+0x175e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    454c:	8e 01       	movw	r16, r28
    454e:	0f 5f       	subi	r16, 0xFF	; 255
    4550:	1e 4f       	sbci	r17, 0xFE	; 254
    4552:	fe 01       	movw	r30, r28
    4554:	ed 5f       	subi	r30, 0xFD	; 253
    4556:	fe 4f       	sbci	r31, 0xFE	; 254
    4558:	60 81       	ld	r22, Z
    455a:	71 81       	ldd	r23, Z+1	; 0x01
    455c:	82 81       	ldd	r24, Z+2	; 0x02
    455e:	93 81       	ldd	r25, Z+3	; 0x03
    4560:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4564:	dc 01       	movw	r26, r24
    4566:	cb 01       	movw	r24, r22
    4568:	f8 01       	movw	r30, r16
    456a:	91 83       	std	Z+1, r25	; 0x01
    456c:	80 83       	st	Z, r24
    456e:	de 01       	movw	r26, r28
    4570:	a3 50       	subi	r26, 0x03	; 3
    4572:	bf 4f       	sbci	r27, 0xFF	; 255
    4574:	fe 01       	movw	r30, r28
    4576:	ef 5f       	subi	r30, 0xFF	; 255
    4578:	fe 4f       	sbci	r31, 0xFE	; 254
    457a:	80 81       	ld	r24, Z
    457c:	91 81       	ldd	r25, Z+1	; 0x01
    457e:	8d 93       	st	X+, r24
    4580:	9c 93       	st	X, r25
    4582:	fe 01       	movw	r30, r28
    4584:	e3 50       	subi	r30, 0x03	; 3
    4586:	ff 4f       	sbci	r31, 0xFF	; 255
    4588:	80 81       	ld	r24, Z
    458a:	91 81       	ldd	r25, Z+1	; 0x01
    458c:	01 97       	sbiw	r24, 0x01	; 1
    458e:	f1 f7       	brne	.-4      	; 0x458c <MyStory+0x1750>
    4590:	fe 01       	movw	r30, r28
    4592:	e3 50       	subi	r30, 0x03	; 3
    4594:	ff 4f       	sbci	r31, 0xFF	; 255
    4596:	91 83       	std	Z+1, r25	; 0x01
    4598:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("Project and the ");
    459a:	82 e9       	ldi	r24, 0x92	; 146
    459c:	91 e0       	ldi	r25, 0x01	; 1
    459e:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    45a2:	82 e0       	ldi	r24, 0x02	; 2
    45a4:	60 e0       	ldi	r22, 0x00	; 0
    45a6:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    45aa:	fe 01       	movw	r30, r28
    45ac:	e7 50       	subi	r30, 0x07	; 7
    45ae:	ff 4f       	sbci	r31, 0xFF	; 255
    45b0:	80 e0       	ldi	r24, 0x00	; 0
    45b2:	90 e0       	ldi	r25, 0x00	; 0
    45b4:	aa e7       	ldi	r26, 0x7A	; 122
    45b6:	b4 e4       	ldi	r27, 0x44	; 68
    45b8:	80 83       	st	Z, r24
    45ba:	91 83       	std	Z+1, r25	; 0x01
    45bc:	a2 83       	std	Z+2, r26	; 0x02
    45be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45c0:	8e 01       	movw	r16, r28
    45c2:	0b 50       	subi	r16, 0x0B	; 11
    45c4:	1f 4f       	sbci	r17, 0xFF	; 255
    45c6:	fe 01       	movw	r30, r28
    45c8:	e7 50       	subi	r30, 0x07	; 7
    45ca:	ff 4f       	sbci	r31, 0xFF	; 255
    45cc:	60 81       	ld	r22, Z
    45ce:	71 81       	ldd	r23, Z+1	; 0x01
    45d0:	82 81       	ldd	r24, Z+2	; 0x02
    45d2:	93 81       	ldd	r25, Z+3	; 0x03
    45d4:	20 e0       	ldi	r18, 0x00	; 0
    45d6:	30 e0       	ldi	r19, 0x00	; 0
    45d8:	4a ef       	ldi	r20, 0xFA	; 250
    45da:	54 e4       	ldi	r21, 0x44	; 68
    45dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45e0:	dc 01       	movw	r26, r24
    45e2:	cb 01       	movw	r24, r22
    45e4:	f8 01       	movw	r30, r16
    45e6:	80 83       	st	Z, r24
    45e8:	91 83       	std	Z+1, r25	; 0x01
    45ea:	a2 83       	std	Z+2, r26	; 0x02
    45ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45ee:	fe 01       	movw	r30, r28
    45f0:	eb 50       	subi	r30, 0x0B	; 11
    45f2:	ff 4f       	sbci	r31, 0xFF	; 255
    45f4:	60 81       	ld	r22, Z
    45f6:	71 81       	ldd	r23, Z+1	; 0x01
    45f8:	82 81       	ldd	r24, Z+2	; 0x02
    45fa:	93 81       	ldd	r25, Z+3	; 0x03
    45fc:	20 e0       	ldi	r18, 0x00	; 0
    45fe:	30 e0       	ldi	r19, 0x00	; 0
    4600:	40 e8       	ldi	r20, 0x80	; 128
    4602:	5f e3       	ldi	r21, 0x3F	; 63
    4604:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4608:	88 23       	and	r24, r24
    460a:	44 f4       	brge	.+16     	; 0x461c <MyStory+0x17e0>
		__ticks = 1;
    460c:	fe 01       	movw	r30, r28
    460e:	ed 50       	subi	r30, 0x0D	; 13
    4610:	ff 4f       	sbci	r31, 0xFF	; 255
    4612:	81 e0       	ldi	r24, 0x01	; 1
    4614:	90 e0       	ldi	r25, 0x00	; 0
    4616:	91 83       	std	Z+1, r25	; 0x01
    4618:	80 83       	st	Z, r24
    461a:	64 c0       	rjmp	.+200    	; 0x46e4 <MyStory+0x18a8>
	else if (__tmp > 65535)
    461c:	fe 01       	movw	r30, r28
    461e:	eb 50       	subi	r30, 0x0B	; 11
    4620:	ff 4f       	sbci	r31, 0xFF	; 255
    4622:	60 81       	ld	r22, Z
    4624:	71 81       	ldd	r23, Z+1	; 0x01
    4626:	82 81       	ldd	r24, Z+2	; 0x02
    4628:	93 81       	ldd	r25, Z+3	; 0x03
    462a:	20 e0       	ldi	r18, 0x00	; 0
    462c:	3f ef       	ldi	r19, 0xFF	; 255
    462e:	4f e7       	ldi	r20, 0x7F	; 127
    4630:	57 e4       	ldi	r21, 0x47	; 71
    4632:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4636:	18 16       	cp	r1, r24
    4638:	0c f0       	brlt	.+2      	; 0x463c <MyStory+0x1800>
    463a:	43 c0       	rjmp	.+134    	; 0x46c2 <MyStory+0x1886>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    463c:	fe 01       	movw	r30, r28
    463e:	e7 50       	subi	r30, 0x07	; 7
    4640:	ff 4f       	sbci	r31, 0xFF	; 255
    4642:	60 81       	ld	r22, Z
    4644:	71 81       	ldd	r23, Z+1	; 0x01
    4646:	82 81       	ldd	r24, Z+2	; 0x02
    4648:	93 81       	ldd	r25, Z+3	; 0x03
    464a:	20 e0       	ldi	r18, 0x00	; 0
    464c:	30 e0       	ldi	r19, 0x00	; 0
    464e:	40 e2       	ldi	r20, 0x20	; 32
    4650:	51 e4       	ldi	r21, 0x41	; 65
    4652:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4656:	dc 01       	movw	r26, r24
    4658:	cb 01       	movw	r24, r22
    465a:	8e 01       	movw	r16, r28
    465c:	0d 50       	subi	r16, 0x0D	; 13
    465e:	1f 4f       	sbci	r17, 0xFF	; 255
    4660:	bc 01       	movw	r22, r24
    4662:	cd 01       	movw	r24, r26
    4664:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4668:	dc 01       	movw	r26, r24
    466a:	cb 01       	movw	r24, r22
    466c:	f8 01       	movw	r30, r16
    466e:	91 83       	std	Z+1, r25	; 0x01
    4670:	80 83       	st	Z, r24
    4672:	1f c0       	rjmp	.+62     	; 0x46b2 <MyStory+0x1876>
    4674:	fe 01       	movw	r30, r28
    4676:	ef 50       	subi	r30, 0x0F	; 15
    4678:	ff 4f       	sbci	r31, 0xFF	; 255
    467a:	88 ec       	ldi	r24, 0xC8	; 200
    467c:	90 e0       	ldi	r25, 0x00	; 0
    467e:	91 83       	std	Z+1, r25	; 0x01
    4680:	80 83       	st	Z, r24
    4682:	fe 01       	movw	r30, r28
    4684:	ef 50       	subi	r30, 0x0F	; 15
    4686:	ff 4f       	sbci	r31, 0xFF	; 255
    4688:	80 81       	ld	r24, Z
    468a:	91 81       	ldd	r25, Z+1	; 0x01
    468c:	01 97       	sbiw	r24, 0x01	; 1
    468e:	f1 f7       	brne	.-4      	; 0x468c <MyStory+0x1850>
    4690:	fe 01       	movw	r30, r28
    4692:	ef 50       	subi	r30, 0x0F	; 15
    4694:	ff 4f       	sbci	r31, 0xFF	; 255
    4696:	91 83       	std	Z+1, r25	; 0x01
    4698:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    469a:	de 01       	movw	r26, r28
    469c:	ad 50       	subi	r26, 0x0D	; 13
    469e:	bf 4f       	sbci	r27, 0xFF	; 255
    46a0:	fe 01       	movw	r30, r28
    46a2:	ed 50       	subi	r30, 0x0D	; 13
    46a4:	ff 4f       	sbci	r31, 0xFF	; 255
    46a6:	80 81       	ld	r24, Z
    46a8:	91 81       	ldd	r25, Z+1	; 0x01
    46aa:	01 97       	sbiw	r24, 0x01	; 1
    46ac:	11 96       	adiw	r26, 0x01	; 1
    46ae:	9c 93       	st	X, r25
    46b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46b2:	fe 01       	movw	r30, r28
    46b4:	ed 50       	subi	r30, 0x0D	; 13
    46b6:	ff 4f       	sbci	r31, 0xFF	; 255
    46b8:	80 81       	ld	r24, Z
    46ba:	91 81       	ldd	r25, Z+1	; 0x01
    46bc:	00 97       	sbiw	r24, 0x00	; 0
    46be:	d1 f6       	brne	.-76     	; 0x4674 <MyStory+0x1838>
    46c0:	27 c0       	rjmp	.+78     	; 0x4710 <MyStory+0x18d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46c2:	8e 01       	movw	r16, r28
    46c4:	0d 50       	subi	r16, 0x0D	; 13
    46c6:	1f 4f       	sbci	r17, 0xFF	; 255
    46c8:	fe 01       	movw	r30, r28
    46ca:	eb 50       	subi	r30, 0x0B	; 11
    46cc:	ff 4f       	sbci	r31, 0xFF	; 255
    46ce:	60 81       	ld	r22, Z
    46d0:	71 81       	ldd	r23, Z+1	; 0x01
    46d2:	82 81       	ldd	r24, Z+2	; 0x02
    46d4:	93 81       	ldd	r25, Z+3	; 0x03
    46d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46da:	dc 01       	movw	r26, r24
    46dc:	cb 01       	movw	r24, r22
    46de:	f8 01       	movw	r30, r16
    46e0:	91 83       	std	Z+1, r25	; 0x01
    46e2:	80 83       	st	Z, r24
    46e4:	de 01       	movw	r26, r28
    46e6:	a1 51       	subi	r26, 0x11	; 17
    46e8:	bf 4f       	sbci	r27, 0xFF	; 255
    46ea:	fe 01       	movw	r30, r28
    46ec:	ed 50       	subi	r30, 0x0D	; 13
    46ee:	ff 4f       	sbci	r31, 0xFF	; 255
    46f0:	80 81       	ld	r24, Z
    46f2:	91 81       	ldd	r25, Z+1	; 0x01
    46f4:	8d 93       	st	X+, r24
    46f6:	9c 93       	st	X, r25
    46f8:	fe 01       	movw	r30, r28
    46fa:	e1 51       	subi	r30, 0x11	; 17
    46fc:	ff 4f       	sbci	r31, 0xFF	; 255
    46fe:	80 81       	ld	r24, Z
    4700:	91 81       	ldd	r25, Z+1	; 0x01
    4702:	01 97       	sbiw	r24, 0x01	; 1
    4704:	f1 f7       	brne	.-4      	; 0x4702 <MyStory+0x18c6>
    4706:	fe 01       	movw	r30, r28
    4708:	e1 51       	subi	r30, 0x11	; 17
    470a:	ff 4f       	sbci	r31, 0xFF	; 255
    470c:	91 83       	std	Z+1, r25	; 0x01
    470e:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_WriteString("difficultness of ");
    4710:	83 ea       	ldi	r24, 0xA3	; 163
    4712:	91 e0       	ldi	r25, 0x01	; 1
    4714:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,0);
    4718:	83 e0       	ldi	r24, 0x03	; 3
    471a:	60 e0       	ldi	r22, 0x00	; 0
    471c:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4720:	fe 01       	movw	r30, r28
    4722:	e5 51       	subi	r30, 0x15	; 21
    4724:	ff 4f       	sbci	r31, 0xFF	; 255
    4726:	80 e0       	ldi	r24, 0x00	; 0
    4728:	90 e0       	ldi	r25, 0x00	; 0
    472a:	aa ef       	ldi	r26, 0xFA	; 250
    472c:	b3 e4       	ldi	r27, 0x43	; 67
    472e:	80 83       	st	Z, r24
    4730:	91 83       	std	Z+1, r25	; 0x01
    4732:	a2 83       	std	Z+2, r26	; 0x02
    4734:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4736:	8e 01       	movw	r16, r28
    4738:	09 51       	subi	r16, 0x19	; 25
    473a:	1f 4f       	sbci	r17, 0xFF	; 255
    473c:	fe 01       	movw	r30, r28
    473e:	e5 51       	subi	r30, 0x15	; 21
    4740:	ff 4f       	sbci	r31, 0xFF	; 255
    4742:	60 81       	ld	r22, Z
    4744:	71 81       	ldd	r23, Z+1	; 0x01
    4746:	82 81       	ldd	r24, Z+2	; 0x02
    4748:	93 81       	ldd	r25, Z+3	; 0x03
    474a:	20 e0       	ldi	r18, 0x00	; 0
    474c:	30 e0       	ldi	r19, 0x00	; 0
    474e:	4a ef       	ldi	r20, 0xFA	; 250
    4750:	54 e4       	ldi	r21, 0x44	; 68
    4752:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4756:	dc 01       	movw	r26, r24
    4758:	cb 01       	movw	r24, r22
    475a:	f8 01       	movw	r30, r16
    475c:	80 83       	st	Z, r24
    475e:	91 83       	std	Z+1, r25	; 0x01
    4760:	a2 83       	std	Z+2, r26	; 0x02
    4762:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4764:	fe 01       	movw	r30, r28
    4766:	e9 51       	subi	r30, 0x19	; 25
    4768:	ff 4f       	sbci	r31, 0xFF	; 255
    476a:	60 81       	ld	r22, Z
    476c:	71 81       	ldd	r23, Z+1	; 0x01
    476e:	82 81       	ldd	r24, Z+2	; 0x02
    4770:	93 81       	ldd	r25, Z+3	; 0x03
    4772:	20 e0       	ldi	r18, 0x00	; 0
    4774:	30 e0       	ldi	r19, 0x00	; 0
    4776:	40 e8       	ldi	r20, 0x80	; 128
    4778:	5f e3       	ldi	r21, 0x3F	; 63
    477a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    477e:	88 23       	and	r24, r24
    4780:	44 f4       	brge	.+16     	; 0x4792 <MyStory+0x1956>
		__ticks = 1;
    4782:	fe 01       	movw	r30, r28
    4784:	eb 51       	subi	r30, 0x1B	; 27
    4786:	ff 4f       	sbci	r31, 0xFF	; 255
    4788:	81 e0       	ldi	r24, 0x01	; 1
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	91 83       	std	Z+1, r25	; 0x01
    478e:	80 83       	st	Z, r24
    4790:	64 c0       	rjmp	.+200    	; 0x485a <MyStory+0x1a1e>
	else if (__tmp > 65535)
    4792:	fe 01       	movw	r30, r28
    4794:	e9 51       	subi	r30, 0x19	; 25
    4796:	ff 4f       	sbci	r31, 0xFF	; 255
    4798:	60 81       	ld	r22, Z
    479a:	71 81       	ldd	r23, Z+1	; 0x01
    479c:	82 81       	ldd	r24, Z+2	; 0x02
    479e:	93 81       	ldd	r25, Z+3	; 0x03
    47a0:	20 e0       	ldi	r18, 0x00	; 0
    47a2:	3f ef       	ldi	r19, 0xFF	; 255
    47a4:	4f e7       	ldi	r20, 0x7F	; 127
    47a6:	57 e4       	ldi	r21, 0x47	; 71
    47a8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    47ac:	18 16       	cp	r1, r24
    47ae:	0c f0       	brlt	.+2      	; 0x47b2 <MyStory+0x1976>
    47b0:	43 c0       	rjmp	.+134    	; 0x4838 <MyStory+0x19fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47b2:	fe 01       	movw	r30, r28
    47b4:	e5 51       	subi	r30, 0x15	; 21
    47b6:	ff 4f       	sbci	r31, 0xFF	; 255
    47b8:	60 81       	ld	r22, Z
    47ba:	71 81       	ldd	r23, Z+1	; 0x01
    47bc:	82 81       	ldd	r24, Z+2	; 0x02
    47be:	93 81       	ldd	r25, Z+3	; 0x03
    47c0:	20 e0       	ldi	r18, 0x00	; 0
    47c2:	30 e0       	ldi	r19, 0x00	; 0
    47c4:	40 e2       	ldi	r20, 0x20	; 32
    47c6:	51 e4       	ldi	r21, 0x41	; 65
    47c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    47cc:	dc 01       	movw	r26, r24
    47ce:	cb 01       	movw	r24, r22
    47d0:	8e 01       	movw	r16, r28
    47d2:	0b 51       	subi	r16, 0x1B	; 27
    47d4:	1f 4f       	sbci	r17, 0xFF	; 255
    47d6:	bc 01       	movw	r22, r24
    47d8:	cd 01       	movw	r24, r26
    47da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47de:	dc 01       	movw	r26, r24
    47e0:	cb 01       	movw	r24, r22
    47e2:	f8 01       	movw	r30, r16
    47e4:	91 83       	std	Z+1, r25	; 0x01
    47e6:	80 83       	st	Z, r24
    47e8:	1f c0       	rjmp	.+62     	; 0x4828 <MyStory+0x19ec>
    47ea:	fe 01       	movw	r30, r28
    47ec:	ed 51       	subi	r30, 0x1D	; 29
    47ee:	ff 4f       	sbci	r31, 0xFF	; 255
    47f0:	88 ec       	ldi	r24, 0xC8	; 200
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	91 83       	std	Z+1, r25	; 0x01
    47f6:	80 83       	st	Z, r24
    47f8:	fe 01       	movw	r30, r28
    47fa:	ed 51       	subi	r30, 0x1D	; 29
    47fc:	ff 4f       	sbci	r31, 0xFF	; 255
    47fe:	80 81       	ld	r24, Z
    4800:	91 81       	ldd	r25, Z+1	; 0x01
    4802:	01 97       	sbiw	r24, 0x01	; 1
    4804:	f1 f7       	brne	.-4      	; 0x4802 <MyStory+0x19c6>
    4806:	fe 01       	movw	r30, r28
    4808:	ed 51       	subi	r30, 0x1D	; 29
    480a:	ff 4f       	sbci	r31, 0xFF	; 255
    480c:	91 83       	std	Z+1, r25	; 0x01
    480e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4810:	de 01       	movw	r26, r28
    4812:	ab 51       	subi	r26, 0x1B	; 27
    4814:	bf 4f       	sbci	r27, 0xFF	; 255
    4816:	fe 01       	movw	r30, r28
    4818:	eb 51       	subi	r30, 0x1B	; 27
    481a:	ff 4f       	sbci	r31, 0xFF	; 255
    481c:	80 81       	ld	r24, Z
    481e:	91 81       	ldd	r25, Z+1	; 0x01
    4820:	01 97       	sbiw	r24, 0x01	; 1
    4822:	11 96       	adiw	r26, 0x01	; 1
    4824:	9c 93       	st	X, r25
    4826:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4828:	fe 01       	movw	r30, r28
    482a:	eb 51       	subi	r30, 0x1B	; 27
    482c:	ff 4f       	sbci	r31, 0xFF	; 255
    482e:	80 81       	ld	r24, Z
    4830:	91 81       	ldd	r25, Z+1	; 0x01
    4832:	00 97       	sbiw	r24, 0x00	; 0
    4834:	d1 f6       	brne	.-76     	; 0x47ea <MyStory+0x19ae>
    4836:	27 c0       	rjmp	.+78     	; 0x4886 <MyStory+0x1a4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4838:	8e 01       	movw	r16, r28
    483a:	0b 51       	subi	r16, 0x1B	; 27
    483c:	1f 4f       	sbci	r17, 0xFF	; 255
    483e:	fe 01       	movw	r30, r28
    4840:	e9 51       	subi	r30, 0x19	; 25
    4842:	ff 4f       	sbci	r31, 0xFF	; 255
    4844:	60 81       	ld	r22, Z
    4846:	71 81       	ldd	r23, Z+1	; 0x01
    4848:	82 81       	ldd	r24, Z+2	; 0x02
    484a:	93 81       	ldd	r25, Z+3	; 0x03
    484c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4850:	dc 01       	movw	r26, r24
    4852:	cb 01       	movw	r24, r22
    4854:	f8 01       	movw	r30, r16
    4856:	91 83       	std	Z+1, r25	; 0x01
    4858:	80 83       	st	Z, r24
    485a:	de 01       	movw	r26, r28
    485c:	af 51       	subi	r26, 0x1F	; 31
    485e:	bf 4f       	sbci	r27, 0xFF	; 255
    4860:	fe 01       	movw	r30, r28
    4862:	eb 51       	subi	r30, 0x1B	; 27
    4864:	ff 4f       	sbci	r31, 0xFF	; 255
    4866:	80 81       	ld	r24, Z
    4868:	91 81       	ldd	r25, Z+1	; 0x01
    486a:	8d 93       	st	X+, r24
    486c:	9c 93       	st	X, r25
    486e:	fe 01       	movw	r30, r28
    4870:	ef 51       	subi	r30, 0x1F	; 31
    4872:	ff 4f       	sbci	r31, 0xFF	; 255
    4874:	80 81       	ld	r24, Z
    4876:	91 81       	ldd	r25, Z+1	; 0x01
    4878:	01 97       	sbiw	r24, 0x01	; 1
    487a:	f1 f7       	brne	.-4      	; 0x4878 <MyStory+0x1a3c>
    487c:	fe 01       	movw	r30, r28
    487e:	ef 51       	subi	r30, 0x1F	; 31
    4880:	ff 4f       	sbci	r31, 0xFF	; 255
    4882:	91 83       	std	Z+1, r25	; 0x01
    4884:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("Engineering AinShams.");
    4886:	85 eb       	ldi	r24, 0xB5	; 181
    4888:	91 e0       	ldi	r25, 0x01	; 1
    488a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    488e:	fe 01       	movw	r30, r28
    4890:	e3 52       	subi	r30, 0x23	; 35
    4892:	ff 4f       	sbci	r31, 0xFF	; 255
    4894:	80 e0       	ldi	r24, 0x00	; 0
    4896:	90 e0       	ldi	r25, 0x00	; 0
    4898:	aa e7       	ldi	r26, 0x7A	; 122
    489a:	b4 e4       	ldi	r27, 0x44	; 68
    489c:	80 83       	st	Z, r24
    489e:	91 83       	std	Z+1, r25	; 0x01
    48a0:	a2 83       	std	Z+2, r26	; 0x02
    48a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48a4:	8e 01       	movw	r16, r28
    48a6:	07 52       	subi	r16, 0x27	; 39
    48a8:	1f 4f       	sbci	r17, 0xFF	; 255
    48aa:	fe 01       	movw	r30, r28
    48ac:	e3 52       	subi	r30, 0x23	; 35
    48ae:	ff 4f       	sbci	r31, 0xFF	; 255
    48b0:	60 81       	ld	r22, Z
    48b2:	71 81       	ldd	r23, Z+1	; 0x01
    48b4:	82 81       	ldd	r24, Z+2	; 0x02
    48b6:	93 81       	ldd	r25, Z+3	; 0x03
    48b8:	20 e0       	ldi	r18, 0x00	; 0
    48ba:	30 e0       	ldi	r19, 0x00	; 0
    48bc:	4a ef       	ldi	r20, 0xFA	; 250
    48be:	54 e4       	ldi	r21, 0x44	; 68
    48c0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    48c4:	dc 01       	movw	r26, r24
    48c6:	cb 01       	movw	r24, r22
    48c8:	f8 01       	movw	r30, r16
    48ca:	80 83       	st	Z, r24
    48cc:	91 83       	std	Z+1, r25	; 0x01
    48ce:	a2 83       	std	Z+2, r26	; 0x02
    48d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    48d2:	fe 01       	movw	r30, r28
    48d4:	e7 52       	subi	r30, 0x27	; 39
    48d6:	ff 4f       	sbci	r31, 0xFF	; 255
    48d8:	60 81       	ld	r22, Z
    48da:	71 81       	ldd	r23, Z+1	; 0x01
    48dc:	82 81       	ldd	r24, Z+2	; 0x02
    48de:	93 81       	ldd	r25, Z+3	; 0x03
    48e0:	20 e0       	ldi	r18, 0x00	; 0
    48e2:	30 e0       	ldi	r19, 0x00	; 0
    48e4:	40 e8       	ldi	r20, 0x80	; 128
    48e6:	5f e3       	ldi	r21, 0x3F	; 63
    48e8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    48ec:	88 23       	and	r24, r24
    48ee:	44 f4       	brge	.+16     	; 0x4900 <MyStory+0x1ac4>
		__ticks = 1;
    48f0:	fe 01       	movw	r30, r28
    48f2:	e9 52       	subi	r30, 0x29	; 41
    48f4:	ff 4f       	sbci	r31, 0xFF	; 255
    48f6:	81 e0       	ldi	r24, 0x01	; 1
    48f8:	90 e0       	ldi	r25, 0x00	; 0
    48fa:	91 83       	std	Z+1, r25	; 0x01
    48fc:	80 83       	st	Z, r24
    48fe:	64 c0       	rjmp	.+200    	; 0x49c8 <MyStory+0x1b8c>
	else if (__tmp > 65535)
    4900:	fe 01       	movw	r30, r28
    4902:	e7 52       	subi	r30, 0x27	; 39
    4904:	ff 4f       	sbci	r31, 0xFF	; 255
    4906:	60 81       	ld	r22, Z
    4908:	71 81       	ldd	r23, Z+1	; 0x01
    490a:	82 81       	ldd	r24, Z+2	; 0x02
    490c:	93 81       	ldd	r25, Z+3	; 0x03
    490e:	20 e0       	ldi	r18, 0x00	; 0
    4910:	3f ef       	ldi	r19, 0xFF	; 255
    4912:	4f e7       	ldi	r20, 0x7F	; 127
    4914:	57 e4       	ldi	r21, 0x47	; 71
    4916:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    491a:	18 16       	cp	r1, r24
    491c:	0c f0       	brlt	.+2      	; 0x4920 <MyStory+0x1ae4>
    491e:	43 c0       	rjmp	.+134    	; 0x49a6 <MyStory+0x1b6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4920:	fe 01       	movw	r30, r28
    4922:	e3 52       	subi	r30, 0x23	; 35
    4924:	ff 4f       	sbci	r31, 0xFF	; 255
    4926:	60 81       	ld	r22, Z
    4928:	71 81       	ldd	r23, Z+1	; 0x01
    492a:	82 81       	ldd	r24, Z+2	; 0x02
    492c:	93 81       	ldd	r25, Z+3	; 0x03
    492e:	20 e0       	ldi	r18, 0x00	; 0
    4930:	30 e0       	ldi	r19, 0x00	; 0
    4932:	40 e2       	ldi	r20, 0x20	; 32
    4934:	51 e4       	ldi	r21, 0x41	; 65
    4936:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    493a:	dc 01       	movw	r26, r24
    493c:	cb 01       	movw	r24, r22
    493e:	8e 01       	movw	r16, r28
    4940:	09 52       	subi	r16, 0x29	; 41
    4942:	1f 4f       	sbci	r17, 0xFF	; 255
    4944:	bc 01       	movw	r22, r24
    4946:	cd 01       	movw	r24, r26
    4948:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    494c:	dc 01       	movw	r26, r24
    494e:	cb 01       	movw	r24, r22
    4950:	f8 01       	movw	r30, r16
    4952:	91 83       	std	Z+1, r25	; 0x01
    4954:	80 83       	st	Z, r24
    4956:	1f c0       	rjmp	.+62     	; 0x4996 <MyStory+0x1b5a>
    4958:	fe 01       	movw	r30, r28
    495a:	eb 52       	subi	r30, 0x2B	; 43
    495c:	ff 4f       	sbci	r31, 0xFF	; 255
    495e:	88 ec       	ldi	r24, 0xC8	; 200
    4960:	90 e0       	ldi	r25, 0x00	; 0
    4962:	91 83       	std	Z+1, r25	; 0x01
    4964:	80 83       	st	Z, r24
    4966:	fe 01       	movw	r30, r28
    4968:	eb 52       	subi	r30, 0x2B	; 43
    496a:	ff 4f       	sbci	r31, 0xFF	; 255
    496c:	80 81       	ld	r24, Z
    496e:	91 81       	ldd	r25, Z+1	; 0x01
    4970:	01 97       	sbiw	r24, 0x01	; 1
    4972:	f1 f7       	brne	.-4      	; 0x4970 <MyStory+0x1b34>
    4974:	fe 01       	movw	r30, r28
    4976:	eb 52       	subi	r30, 0x2B	; 43
    4978:	ff 4f       	sbci	r31, 0xFF	; 255
    497a:	91 83       	std	Z+1, r25	; 0x01
    497c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    497e:	de 01       	movw	r26, r28
    4980:	a9 52       	subi	r26, 0x29	; 41
    4982:	bf 4f       	sbci	r27, 0xFF	; 255
    4984:	fe 01       	movw	r30, r28
    4986:	e9 52       	subi	r30, 0x29	; 41
    4988:	ff 4f       	sbci	r31, 0xFF	; 255
    498a:	80 81       	ld	r24, Z
    498c:	91 81       	ldd	r25, Z+1	; 0x01
    498e:	01 97       	sbiw	r24, 0x01	; 1
    4990:	11 96       	adiw	r26, 0x01	; 1
    4992:	9c 93       	st	X, r25
    4994:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4996:	fe 01       	movw	r30, r28
    4998:	e9 52       	subi	r30, 0x29	; 41
    499a:	ff 4f       	sbci	r31, 0xFF	; 255
    499c:	80 81       	ld	r24, Z
    499e:	91 81       	ldd	r25, Z+1	; 0x01
    49a0:	00 97       	sbiw	r24, 0x00	; 0
    49a2:	d1 f6       	brne	.-76     	; 0x4958 <MyStory+0x1b1c>
    49a4:	27 c0       	rjmp	.+78     	; 0x49f4 <MyStory+0x1bb8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49a6:	8e 01       	movw	r16, r28
    49a8:	09 52       	subi	r16, 0x29	; 41
    49aa:	1f 4f       	sbci	r17, 0xFF	; 255
    49ac:	fe 01       	movw	r30, r28
    49ae:	e7 52       	subi	r30, 0x27	; 39
    49b0:	ff 4f       	sbci	r31, 0xFF	; 255
    49b2:	60 81       	ld	r22, Z
    49b4:	71 81       	ldd	r23, Z+1	; 0x01
    49b6:	82 81       	ldd	r24, Z+2	; 0x02
    49b8:	93 81       	ldd	r25, Z+3	; 0x03
    49ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49be:	dc 01       	movw	r26, r24
    49c0:	cb 01       	movw	r24, r22
    49c2:	f8 01       	movw	r30, r16
    49c4:	91 83       	std	Z+1, r25	; 0x01
    49c6:	80 83       	st	Z, r24
    49c8:	de 01       	movw	r26, r28
    49ca:	ad 52       	subi	r26, 0x2D	; 45
    49cc:	bf 4f       	sbci	r27, 0xFF	; 255
    49ce:	fe 01       	movw	r30, r28
    49d0:	e9 52       	subi	r30, 0x29	; 41
    49d2:	ff 4f       	sbci	r31, 0xFF	; 255
    49d4:	80 81       	ld	r24, Z
    49d6:	91 81       	ldd	r25, Z+1	; 0x01
    49d8:	8d 93       	st	X+, r24
    49da:	9c 93       	st	X, r25
    49dc:	fe 01       	movw	r30, r28
    49de:	ed 52       	subi	r30, 0x2D	; 45
    49e0:	ff 4f       	sbci	r31, 0xFF	; 255
    49e2:	80 81       	ld	r24, Z
    49e4:	91 81       	ldd	r25, Z+1	; 0x01
    49e6:	01 97       	sbiw	r24, 0x01	; 1
    49e8:	f1 f7       	brne	.-4      	; 0x49e6 <MyStory+0x1baa>
    49ea:	fe 01       	movw	r30, r28
    49ec:	ed 52       	subi	r30, 0x2D	; 45
    49ee:	ff 4f       	sbci	r31, 0xFF	; 255
    49f0:	91 83       	std	Z+1, r25	; 0x01
    49f2:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear(); //clear
    49f4:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    49f8:	80 e0       	ldi	r24, 0x00	; 0
    49fa:	60 e0       	ldi	r22, 0x00	; 0
    49fc:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4a00:	fe 01       	movw	r30, r28
    4a02:	e1 53       	subi	r30, 0x31	; 49
    4a04:	ff 4f       	sbci	r31, 0xFF	; 255
    4a06:	80 e0       	ldi	r24, 0x00	; 0
    4a08:	90 e0       	ldi	r25, 0x00	; 0
    4a0a:	aa ef       	ldi	r26, 0xFA	; 250
    4a0c:	b3 e4       	ldi	r27, 0x43	; 67
    4a0e:	80 83       	st	Z, r24
    4a10:	91 83       	std	Z+1, r25	; 0x01
    4a12:	a2 83       	std	Z+2, r26	; 0x02
    4a14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a16:	8e 01       	movw	r16, r28
    4a18:	05 53       	subi	r16, 0x35	; 53
    4a1a:	1f 4f       	sbci	r17, 0xFF	; 255
    4a1c:	fe 01       	movw	r30, r28
    4a1e:	e1 53       	subi	r30, 0x31	; 49
    4a20:	ff 4f       	sbci	r31, 0xFF	; 255
    4a22:	60 81       	ld	r22, Z
    4a24:	71 81       	ldd	r23, Z+1	; 0x01
    4a26:	82 81       	ldd	r24, Z+2	; 0x02
    4a28:	93 81       	ldd	r25, Z+3	; 0x03
    4a2a:	20 e0       	ldi	r18, 0x00	; 0
    4a2c:	30 e0       	ldi	r19, 0x00	; 0
    4a2e:	4a ef       	ldi	r20, 0xFA	; 250
    4a30:	54 e4       	ldi	r21, 0x44	; 68
    4a32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4a36:	dc 01       	movw	r26, r24
    4a38:	cb 01       	movw	r24, r22
    4a3a:	f8 01       	movw	r30, r16
    4a3c:	80 83       	st	Z, r24
    4a3e:	91 83       	std	Z+1, r25	; 0x01
    4a40:	a2 83       	std	Z+2, r26	; 0x02
    4a42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a44:	fe 01       	movw	r30, r28
    4a46:	e5 53       	subi	r30, 0x35	; 53
    4a48:	ff 4f       	sbci	r31, 0xFF	; 255
    4a4a:	60 81       	ld	r22, Z
    4a4c:	71 81       	ldd	r23, Z+1	; 0x01
    4a4e:	82 81       	ldd	r24, Z+2	; 0x02
    4a50:	93 81       	ldd	r25, Z+3	; 0x03
    4a52:	20 e0       	ldi	r18, 0x00	; 0
    4a54:	30 e0       	ldi	r19, 0x00	; 0
    4a56:	40 e8       	ldi	r20, 0x80	; 128
    4a58:	5f e3       	ldi	r21, 0x3F	; 63
    4a5a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4a5e:	88 23       	and	r24, r24
    4a60:	44 f4       	brge	.+16     	; 0x4a72 <MyStory+0x1c36>
		__ticks = 1;
    4a62:	fe 01       	movw	r30, r28
    4a64:	e7 53       	subi	r30, 0x37	; 55
    4a66:	ff 4f       	sbci	r31, 0xFF	; 255
    4a68:	81 e0       	ldi	r24, 0x01	; 1
    4a6a:	90 e0       	ldi	r25, 0x00	; 0
    4a6c:	91 83       	std	Z+1, r25	; 0x01
    4a6e:	80 83       	st	Z, r24
    4a70:	64 c0       	rjmp	.+200    	; 0x4b3a <MyStory+0x1cfe>
	else if (__tmp > 65535)
    4a72:	fe 01       	movw	r30, r28
    4a74:	e5 53       	subi	r30, 0x35	; 53
    4a76:	ff 4f       	sbci	r31, 0xFF	; 255
    4a78:	60 81       	ld	r22, Z
    4a7a:	71 81       	ldd	r23, Z+1	; 0x01
    4a7c:	82 81       	ldd	r24, Z+2	; 0x02
    4a7e:	93 81       	ldd	r25, Z+3	; 0x03
    4a80:	20 e0       	ldi	r18, 0x00	; 0
    4a82:	3f ef       	ldi	r19, 0xFF	; 255
    4a84:	4f e7       	ldi	r20, 0x7F	; 127
    4a86:	57 e4       	ldi	r21, 0x47	; 71
    4a88:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4a8c:	18 16       	cp	r1, r24
    4a8e:	0c f0       	brlt	.+2      	; 0x4a92 <MyStory+0x1c56>
    4a90:	43 c0       	rjmp	.+134    	; 0x4b18 <MyStory+0x1cdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a92:	fe 01       	movw	r30, r28
    4a94:	e1 53       	subi	r30, 0x31	; 49
    4a96:	ff 4f       	sbci	r31, 0xFF	; 255
    4a98:	60 81       	ld	r22, Z
    4a9a:	71 81       	ldd	r23, Z+1	; 0x01
    4a9c:	82 81       	ldd	r24, Z+2	; 0x02
    4a9e:	93 81       	ldd	r25, Z+3	; 0x03
    4aa0:	20 e0       	ldi	r18, 0x00	; 0
    4aa2:	30 e0       	ldi	r19, 0x00	; 0
    4aa4:	40 e2       	ldi	r20, 0x20	; 32
    4aa6:	51 e4       	ldi	r21, 0x41	; 65
    4aa8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4aac:	dc 01       	movw	r26, r24
    4aae:	cb 01       	movw	r24, r22
    4ab0:	8e 01       	movw	r16, r28
    4ab2:	07 53       	subi	r16, 0x37	; 55
    4ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    4ab6:	bc 01       	movw	r22, r24
    4ab8:	cd 01       	movw	r24, r26
    4aba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4abe:	dc 01       	movw	r26, r24
    4ac0:	cb 01       	movw	r24, r22
    4ac2:	f8 01       	movw	r30, r16
    4ac4:	91 83       	std	Z+1, r25	; 0x01
    4ac6:	80 83       	st	Z, r24
    4ac8:	1f c0       	rjmp	.+62     	; 0x4b08 <MyStory+0x1ccc>
    4aca:	fe 01       	movw	r30, r28
    4acc:	e9 53       	subi	r30, 0x39	; 57
    4ace:	ff 4f       	sbci	r31, 0xFF	; 255
    4ad0:	88 ec       	ldi	r24, 0xC8	; 200
    4ad2:	90 e0       	ldi	r25, 0x00	; 0
    4ad4:	91 83       	std	Z+1, r25	; 0x01
    4ad6:	80 83       	st	Z, r24
    4ad8:	fe 01       	movw	r30, r28
    4ada:	e9 53       	subi	r30, 0x39	; 57
    4adc:	ff 4f       	sbci	r31, 0xFF	; 255
    4ade:	80 81       	ld	r24, Z
    4ae0:	91 81       	ldd	r25, Z+1	; 0x01
    4ae2:	01 97       	sbiw	r24, 0x01	; 1
    4ae4:	f1 f7       	brne	.-4      	; 0x4ae2 <MyStory+0x1ca6>
    4ae6:	fe 01       	movw	r30, r28
    4ae8:	e9 53       	subi	r30, 0x39	; 57
    4aea:	ff 4f       	sbci	r31, 0xFF	; 255
    4aec:	91 83       	std	Z+1, r25	; 0x01
    4aee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4af0:	de 01       	movw	r26, r28
    4af2:	a7 53       	subi	r26, 0x37	; 55
    4af4:	bf 4f       	sbci	r27, 0xFF	; 255
    4af6:	fe 01       	movw	r30, r28
    4af8:	e7 53       	subi	r30, 0x37	; 55
    4afa:	ff 4f       	sbci	r31, 0xFF	; 255
    4afc:	80 81       	ld	r24, Z
    4afe:	91 81       	ldd	r25, Z+1	; 0x01
    4b00:	01 97       	sbiw	r24, 0x01	; 1
    4b02:	11 96       	adiw	r26, 0x01	; 1
    4b04:	9c 93       	st	X, r25
    4b06:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b08:	fe 01       	movw	r30, r28
    4b0a:	e7 53       	subi	r30, 0x37	; 55
    4b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b0e:	80 81       	ld	r24, Z
    4b10:	91 81       	ldd	r25, Z+1	; 0x01
    4b12:	00 97       	sbiw	r24, 0x00	; 0
    4b14:	d1 f6       	brne	.-76     	; 0x4aca <MyStory+0x1c8e>
    4b16:	27 c0       	rjmp	.+78     	; 0x4b66 <MyStory+0x1d2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b18:	8e 01       	movw	r16, r28
    4b1a:	07 53       	subi	r16, 0x37	; 55
    4b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    4b1e:	fe 01       	movw	r30, r28
    4b20:	e5 53       	subi	r30, 0x35	; 53
    4b22:	ff 4f       	sbci	r31, 0xFF	; 255
    4b24:	60 81       	ld	r22, Z
    4b26:	71 81       	ldd	r23, Z+1	; 0x01
    4b28:	82 81       	ldd	r24, Z+2	; 0x02
    4b2a:	93 81       	ldd	r25, Z+3	; 0x03
    4b2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4b30:	dc 01       	movw	r26, r24
    4b32:	cb 01       	movw	r24, r22
    4b34:	f8 01       	movw	r30, r16
    4b36:	91 83       	std	Z+1, r25	; 0x01
    4b38:	80 83       	st	Z, r24
    4b3a:	de 01       	movw	r26, r28
    4b3c:	ab 53       	subi	r26, 0x3B	; 59
    4b3e:	bf 4f       	sbci	r27, 0xFF	; 255
    4b40:	fe 01       	movw	r30, r28
    4b42:	e7 53       	subi	r30, 0x37	; 55
    4b44:	ff 4f       	sbci	r31, 0xFF	; 255
    4b46:	80 81       	ld	r24, Z
    4b48:	91 81       	ldd	r25, Z+1	; 0x01
    4b4a:	8d 93       	st	X+, r24
    4b4c:	9c 93       	st	X, r25
    4b4e:	fe 01       	movw	r30, r28
    4b50:	eb 53       	subi	r30, 0x3B	; 59
    4b52:	ff 4f       	sbci	r31, 0xFF	; 255
    4b54:	80 81       	ld	r24, Z
    4b56:	91 81       	ldd	r25, Z+1	; 0x01
    4b58:	01 97       	sbiw	r24, 0x01	; 1
    4b5a:	f1 f7       	brne	.-4      	; 0x4b58 <MyStory+0x1d1c>
    4b5c:	fe 01       	movw	r30, r28
    4b5e:	eb 53       	subi	r30, 0x3B	; 59
    4b60:	ff 4f       	sbci	r31, 0xFF	; 255
    4b62:	91 83       	std	Z+1, r25	; 0x01
    4b64:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("but there's no ");
    4b66:	8b ec       	ldi	r24, 0xCB	; 203
    4b68:	91 e0       	ldi	r25, 0x01	; 1
    4b6a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    4b6e:	81 e0       	ldi	r24, 0x01	; 1
    4b70:	60 e0       	ldi	r22, 0x00	; 0
    4b72:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4b76:	fe 01       	movw	r30, r28
    4b78:	ef 53       	subi	r30, 0x3F	; 63
    4b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b7c:	80 e0       	ldi	r24, 0x00	; 0
    4b7e:	90 e0       	ldi	r25, 0x00	; 0
    4b80:	aa ef       	ldi	r26, 0xFA	; 250
    4b82:	b3 e4       	ldi	r27, 0x43	; 67
    4b84:	80 83       	st	Z, r24
    4b86:	91 83       	std	Z+1, r25	; 0x01
    4b88:	a2 83       	std	Z+2, r26	; 0x02
    4b8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b8c:	8e 01       	movw	r16, r28
    4b8e:	03 54       	subi	r16, 0x43	; 67
    4b90:	1f 4f       	sbci	r17, 0xFF	; 255
    4b92:	fe 01       	movw	r30, r28
    4b94:	ef 53       	subi	r30, 0x3F	; 63
    4b96:	ff 4f       	sbci	r31, 0xFF	; 255
    4b98:	60 81       	ld	r22, Z
    4b9a:	71 81       	ldd	r23, Z+1	; 0x01
    4b9c:	82 81       	ldd	r24, Z+2	; 0x02
    4b9e:	93 81       	ldd	r25, Z+3	; 0x03
    4ba0:	20 e0       	ldi	r18, 0x00	; 0
    4ba2:	30 e0       	ldi	r19, 0x00	; 0
    4ba4:	4a ef       	ldi	r20, 0xFA	; 250
    4ba6:	54 e4       	ldi	r21, 0x44	; 68
    4ba8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4bac:	dc 01       	movw	r26, r24
    4bae:	cb 01       	movw	r24, r22
    4bb0:	f8 01       	movw	r30, r16
    4bb2:	80 83       	st	Z, r24
    4bb4:	91 83       	std	Z+1, r25	; 0x01
    4bb6:	a2 83       	std	Z+2, r26	; 0x02
    4bb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4bba:	fe 01       	movw	r30, r28
    4bbc:	e3 54       	subi	r30, 0x43	; 67
    4bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    4bc0:	60 81       	ld	r22, Z
    4bc2:	71 81       	ldd	r23, Z+1	; 0x01
    4bc4:	82 81       	ldd	r24, Z+2	; 0x02
    4bc6:	93 81       	ldd	r25, Z+3	; 0x03
    4bc8:	20 e0       	ldi	r18, 0x00	; 0
    4bca:	30 e0       	ldi	r19, 0x00	; 0
    4bcc:	40 e8       	ldi	r20, 0x80	; 128
    4bce:	5f e3       	ldi	r21, 0x3F	; 63
    4bd0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4bd4:	88 23       	and	r24, r24
    4bd6:	44 f4       	brge	.+16     	; 0x4be8 <MyStory+0x1dac>
		__ticks = 1;
    4bd8:	fe 01       	movw	r30, r28
    4bda:	e5 54       	subi	r30, 0x45	; 69
    4bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    4bde:	81 e0       	ldi	r24, 0x01	; 1
    4be0:	90 e0       	ldi	r25, 0x00	; 0
    4be2:	91 83       	std	Z+1, r25	; 0x01
    4be4:	80 83       	st	Z, r24
    4be6:	64 c0       	rjmp	.+200    	; 0x4cb0 <MyStory+0x1e74>
	else if (__tmp > 65535)
    4be8:	fe 01       	movw	r30, r28
    4bea:	e3 54       	subi	r30, 0x43	; 67
    4bec:	ff 4f       	sbci	r31, 0xFF	; 255
    4bee:	60 81       	ld	r22, Z
    4bf0:	71 81       	ldd	r23, Z+1	; 0x01
    4bf2:	82 81       	ldd	r24, Z+2	; 0x02
    4bf4:	93 81       	ldd	r25, Z+3	; 0x03
    4bf6:	20 e0       	ldi	r18, 0x00	; 0
    4bf8:	3f ef       	ldi	r19, 0xFF	; 255
    4bfa:	4f e7       	ldi	r20, 0x7F	; 127
    4bfc:	57 e4       	ldi	r21, 0x47	; 71
    4bfe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4c02:	18 16       	cp	r1, r24
    4c04:	0c f0       	brlt	.+2      	; 0x4c08 <MyStory+0x1dcc>
    4c06:	43 c0       	rjmp	.+134    	; 0x4c8e <MyStory+0x1e52>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c08:	fe 01       	movw	r30, r28
    4c0a:	ef 53       	subi	r30, 0x3F	; 63
    4c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c0e:	60 81       	ld	r22, Z
    4c10:	71 81       	ldd	r23, Z+1	; 0x01
    4c12:	82 81       	ldd	r24, Z+2	; 0x02
    4c14:	93 81       	ldd	r25, Z+3	; 0x03
    4c16:	20 e0       	ldi	r18, 0x00	; 0
    4c18:	30 e0       	ldi	r19, 0x00	; 0
    4c1a:	40 e2       	ldi	r20, 0x20	; 32
    4c1c:	51 e4       	ldi	r21, 0x41	; 65
    4c1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4c22:	dc 01       	movw	r26, r24
    4c24:	cb 01       	movw	r24, r22
    4c26:	8e 01       	movw	r16, r28
    4c28:	05 54       	subi	r16, 0x45	; 69
    4c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    4c2c:	bc 01       	movw	r22, r24
    4c2e:	cd 01       	movw	r24, r26
    4c30:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4c34:	dc 01       	movw	r26, r24
    4c36:	cb 01       	movw	r24, r22
    4c38:	f8 01       	movw	r30, r16
    4c3a:	91 83       	std	Z+1, r25	; 0x01
    4c3c:	80 83       	st	Z, r24
    4c3e:	1f c0       	rjmp	.+62     	; 0x4c7e <MyStory+0x1e42>
    4c40:	fe 01       	movw	r30, r28
    4c42:	e7 54       	subi	r30, 0x47	; 71
    4c44:	ff 4f       	sbci	r31, 0xFF	; 255
    4c46:	88 ec       	ldi	r24, 0xC8	; 200
    4c48:	90 e0       	ldi	r25, 0x00	; 0
    4c4a:	91 83       	std	Z+1, r25	; 0x01
    4c4c:	80 83       	st	Z, r24
    4c4e:	fe 01       	movw	r30, r28
    4c50:	e7 54       	subi	r30, 0x47	; 71
    4c52:	ff 4f       	sbci	r31, 0xFF	; 255
    4c54:	80 81       	ld	r24, Z
    4c56:	91 81       	ldd	r25, Z+1	; 0x01
    4c58:	01 97       	sbiw	r24, 0x01	; 1
    4c5a:	f1 f7       	brne	.-4      	; 0x4c58 <MyStory+0x1e1c>
    4c5c:	fe 01       	movw	r30, r28
    4c5e:	e7 54       	subi	r30, 0x47	; 71
    4c60:	ff 4f       	sbci	r31, 0xFF	; 255
    4c62:	91 83       	std	Z+1, r25	; 0x01
    4c64:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c66:	de 01       	movw	r26, r28
    4c68:	a5 54       	subi	r26, 0x45	; 69
    4c6a:	bf 4f       	sbci	r27, 0xFF	; 255
    4c6c:	fe 01       	movw	r30, r28
    4c6e:	e5 54       	subi	r30, 0x45	; 69
    4c70:	ff 4f       	sbci	r31, 0xFF	; 255
    4c72:	80 81       	ld	r24, Z
    4c74:	91 81       	ldd	r25, Z+1	; 0x01
    4c76:	01 97       	sbiw	r24, 0x01	; 1
    4c78:	11 96       	adiw	r26, 0x01	; 1
    4c7a:	9c 93       	st	X, r25
    4c7c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c7e:	fe 01       	movw	r30, r28
    4c80:	e5 54       	subi	r30, 0x45	; 69
    4c82:	ff 4f       	sbci	r31, 0xFF	; 255
    4c84:	80 81       	ld	r24, Z
    4c86:	91 81       	ldd	r25, Z+1	; 0x01
    4c88:	00 97       	sbiw	r24, 0x00	; 0
    4c8a:	d1 f6       	brne	.-76     	; 0x4c40 <MyStory+0x1e04>
    4c8c:	27 c0       	rjmp	.+78     	; 0x4cdc <MyStory+0x1ea0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c8e:	8e 01       	movw	r16, r28
    4c90:	05 54       	subi	r16, 0x45	; 69
    4c92:	1f 4f       	sbci	r17, 0xFF	; 255
    4c94:	fe 01       	movw	r30, r28
    4c96:	e3 54       	subi	r30, 0x43	; 67
    4c98:	ff 4f       	sbci	r31, 0xFF	; 255
    4c9a:	60 81       	ld	r22, Z
    4c9c:	71 81       	ldd	r23, Z+1	; 0x01
    4c9e:	82 81       	ldd	r24, Z+2	; 0x02
    4ca0:	93 81       	ldd	r25, Z+3	; 0x03
    4ca2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ca6:	dc 01       	movw	r26, r24
    4ca8:	cb 01       	movw	r24, r22
    4caa:	f8 01       	movw	r30, r16
    4cac:	91 83       	std	Z+1, r25	; 0x01
    4cae:	80 83       	st	Z, r24
    4cb0:	de 01       	movw	r26, r28
    4cb2:	a9 54       	subi	r26, 0x49	; 73
    4cb4:	bf 4f       	sbci	r27, 0xFF	; 255
    4cb6:	fe 01       	movw	r30, r28
    4cb8:	e5 54       	subi	r30, 0x45	; 69
    4cba:	ff 4f       	sbci	r31, 0xFF	; 255
    4cbc:	80 81       	ld	r24, Z
    4cbe:	91 81       	ldd	r25, Z+1	; 0x01
    4cc0:	8d 93       	st	X+, r24
    4cc2:	9c 93       	st	X, r25
    4cc4:	fe 01       	movw	r30, r28
    4cc6:	e9 54       	subi	r30, 0x49	; 73
    4cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    4cca:	80 81       	ld	r24, Z
    4ccc:	91 81       	ldd	r25, Z+1	; 0x01
    4cce:	01 97       	sbiw	r24, 0x01	; 1
    4cd0:	f1 f7       	brne	.-4      	; 0x4cce <MyStory+0x1e92>
    4cd2:	fe 01       	movw	r30, r28
    4cd4:	e9 54       	subi	r30, 0x49	; 73
    4cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd8:	91 83       	std	Z+1, r25	; 0x01
    4cda:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("something impossible");
    4cdc:	8b ed       	ldi	r24, 0xDB	; 219
    4cde:	91 e0       	ldi	r25, 0x01	; 1
    4ce0:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    4ce4:	82 e0       	ldi	r24, 0x02	; 2
    4ce6:	60 e0       	ldi	r22, 0x00	; 0
    4ce8:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4cec:	fe 01       	movw	r30, r28
    4cee:	ed 54       	subi	r30, 0x4D	; 77
    4cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    4cf2:	80 e0       	ldi	r24, 0x00	; 0
    4cf4:	90 e0       	ldi	r25, 0x00	; 0
    4cf6:	aa ef       	ldi	r26, 0xFA	; 250
    4cf8:	b3 e4       	ldi	r27, 0x43	; 67
    4cfa:	80 83       	st	Z, r24
    4cfc:	91 83       	std	Z+1, r25	; 0x01
    4cfe:	a2 83       	std	Z+2, r26	; 0x02
    4d00:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d02:	8e 01       	movw	r16, r28
    4d04:	01 55       	subi	r16, 0x51	; 81
    4d06:	1f 4f       	sbci	r17, 0xFF	; 255
    4d08:	fe 01       	movw	r30, r28
    4d0a:	ed 54       	subi	r30, 0x4D	; 77
    4d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d0e:	60 81       	ld	r22, Z
    4d10:	71 81       	ldd	r23, Z+1	; 0x01
    4d12:	82 81       	ldd	r24, Z+2	; 0x02
    4d14:	93 81       	ldd	r25, Z+3	; 0x03
    4d16:	20 e0       	ldi	r18, 0x00	; 0
    4d18:	30 e0       	ldi	r19, 0x00	; 0
    4d1a:	4a ef       	ldi	r20, 0xFA	; 250
    4d1c:	54 e4       	ldi	r21, 0x44	; 68
    4d1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d22:	dc 01       	movw	r26, r24
    4d24:	cb 01       	movw	r24, r22
    4d26:	f8 01       	movw	r30, r16
    4d28:	80 83       	st	Z, r24
    4d2a:	91 83       	std	Z+1, r25	; 0x01
    4d2c:	a2 83       	std	Z+2, r26	; 0x02
    4d2e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d30:	fe 01       	movw	r30, r28
    4d32:	e1 55       	subi	r30, 0x51	; 81
    4d34:	ff 4f       	sbci	r31, 0xFF	; 255
    4d36:	60 81       	ld	r22, Z
    4d38:	71 81       	ldd	r23, Z+1	; 0x01
    4d3a:	82 81       	ldd	r24, Z+2	; 0x02
    4d3c:	93 81       	ldd	r25, Z+3	; 0x03
    4d3e:	20 e0       	ldi	r18, 0x00	; 0
    4d40:	30 e0       	ldi	r19, 0x00	; 0
    4d42:	40 e8       	ldi	r20, 0x80	; 128
    4d44:	5f e3       	ldi	r21, 0x3F	; 63
    4d46:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4d4a:	88 23       	and	r24, r24
    4d4c:	44 f4       	brge	.+16     	; 0x4d5e <MyStory+0x1f22>
		__ticks = 1;
    4d4e:	fe 01       	movw	r30, r28
    4d50:	e3 55       	subi	r30, 0x53	; 83
    4d52:	ff 4f       	sbci	r31, 0xFF	; 255
    4d54:	81 e0       	ldi	r24, 0x01	; 1
    4d56:	90 e0       	ldi	r25, 0x00	; 0
    4d58:	91 83       	std	Z+1, r25	; 0x01
    4d5a:	80 83       	st	Z, r24
    4d5c:	64 c0       	rjmp	.+200    	; 0x4e26 <MyStory+0x1fea>
	else if (__tmp > 65535)
    4d5e:	fe 01       	movw	r30, r28
    4d60:	e1 55       	subi	r30, 0x51	; 81
    4d62:	ff 4f       	sbci	r31, 0xFF	; 255
    4d64:	60 81       	ld	r22, Z
    4d66:	71 81       	ldd	r23, Z+1	; 0x01
    4d68:	82 81       	ldd	r24, Z+2	; 0x02
    4d6a:	93 81       	ldd	r25, Z+3	; 0x03
    4d6c:	20 e0       	ldi	r18, 0x00	; 0
    4d6e:	3f ef       	ldi	r19, 0xFF	; 255
    4d70:	4f e7       	ldi	r20, 0x7F	; 127
    4d72:	57 e4       	ldi	r21, 0x47	; 71
    4d74:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4d78:	18 16       	cp	r1, r24
    4d7a:	0c f0       	brlt	.+2      	; 0x4d7e <MyStory+0x1f42>
    4d7c:	43 c0       	rjmp	.+134    	; 0x4e04 <MyStory+0x1fc8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d7e:	fe 01       	movw	r30, r28
    4d80:	ed 54       	subi	r30, 0x4D	; 77
    4d82:	ff 4f       	sbci	r31, 0xFF	; 255
    4d84:	60 81       	ld	r22, Z
    4d86:	71 81       	ldd	r23, Z+1	; 0x01
    4d88:	82 81       	ldd	r24, Z+2	; 0x02
    4d8a:	93 81       	ldd	r25, Z+3	; 0x03
    4d8c:	20 e0       	ldi	r18, 0x00	; 0
    4d8e:	30 e0       	ldi	r19, 0x00	; 0
    4d90:	40 e2       	ldi	r20, 0x20	; 32
    4d92:	51 e4       	ldi	r21, 0x41	; 65
    4d94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d98:	dc 01       	movw	r26, r24
    4d9a:	cb 01       	movw	r24, r22
    4d9c:	8e 01       	movw	r16, r28
    4d9e:	03 55       	subi	r16, 0x53	; 83
    4da0:	1f 4f       	sbci	r17, 0xFF	; 255
    4da2:	bc 01       	movw	r22, r24
    4da4:	cd 01       	movw	r24, r26
    4da6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4daa:	dc 01       	movw	r26, r24
    4dac:	cb 01       	movw	r24, r22
    4dae:	f8 01       	movw	r30, r16
    4db0:	91 83       	std	Z+1, r25	; 0x01
    4db2:	80 83       	st	Z, r24
    4db4:	1f c0       	rjmp	.+62     	; 0x4df4 <MyStory+0x1fb8>
    4db6:	fe 01       	movw	r30, r28
    4db8:	e5 55       	subi	r30, 0x55	; 85
    4dba:	ff 4f       	sbci	r31, 0xFF	; 255
    4dbc:	88 ec       	ldi	r24, 0xC8	; 200
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	91 83       	std	Z+1, r25	; 0x01
    4dc2:	80 83       	st	Z, r24
    4dc4:	fe 01       	movw	r30, r28
    4dc6:	e5 55       	subi	r30, 0x55	; 85
    4dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    4dca:	80 81       	ld	r24, Z
    4dcc:	91 81       	ldd	r25, Z+1	; 0x01
    4dce:	01 97       	sbiw	r24, 0x01	; 1
    4dd0:	f1 f7       	brne	.-4      	; 0x4dce <MyStory+0x1f92>
    4dd2:	fe 01       	movw	r30, r28
    4dd4:	e5 55       	subi	r30, 0x55	; 85
    4dd6:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd8:	91 83       	std	Z+1, r25	; 0x01
    4dda:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ddc:	de 01       	movw	r26, r28
    4dde:	a3 55       	subi	r26, 0x53	; 83
    4de0:	bf 4f       	sbci	r27, 0xFF	; 255
    4de2:	fe 01       	movw	r30, r28
    4de4:	e3 55       	subi	r30, 0x53	; 83
    4de6:	ff 4f       	sbci	r31, 0xFF	; 255
    4de8:	80 81       	ld	r24, Z
    4dea:	91 81       	ldd	r25, Z+1	; 0x01
    4dec:	01 97       	sbiw	r24, 0x01	; 1
    4dee:	11 96       	adiw	r26, 0x01	; 1
    4df0:	9c 93       	st	X, r25
    4df2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4df4:	fe 01       	movw	r30, r28
    4df6:	e3 55       	subi	r30, 0x53	; 83
    4df8:	ff 4f       	sbci	r31, 0xFF	; 255
    4dfa:	80 81       	ld	r24, Z
    4dfc:	91 81       	ldd	r25, Z+1	; 0x01
    4dfe:	00 97       	sbiw	r24, 0x00	; 0
    4e00:	d1 f6       	brne	.-76     	; 0x4db6 <MyStory+0x1f7a>
    4e02:	27 c0       	rjmp	.+78     	; 0x4e52 <MyStory+0x2016>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e04:	8e 01       	movw	r16, r28
    4e06:	03 55       	subi	r16, 0x53	; 83
    4e08:	1f 4f       	sbci	r17, 0xFF	; 255
    4e0a:	fe 01       	movw	r30, r28
    4e0c:	e1 55       	subi	r30, 0x51	; 81
    4e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e10:	60 81       	ld	r22, Z
    4e12:	71 81       	ldd	r23, Z+1	; 0x01
    4e14:	82 81       	ldd	r24, Z+2	; 0x02
    4e16:	93 81       	ldd	r25, Z+3	; 0x03
    4e18:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e1c:	dc 01       	movw	r26, r24
    4e1e:	cb 01       	movw	r24, r22
    4e20:	f8 01       	movw	r30, r16
    4e22:	91 83       	std	Z+1, r25	; 0x01
    4e24:	80 83       	st	Z, r24
    4e26:	de 01       	movw	r26, r28
    4e28:	a7 55       	subi	r26, 0x57	; 87
    4e2a:	bf 4f       	sbci	r27, 0xFF	; 255
    4e2c:	fe 01       	movw	r30, r28
    4e2e:	e3 55       	subi	r30, 0x53	; 83
    4e30:	ff 4f       	sbci	r31, 0xFF	; 255
    4e32:	80 81       	ld	r24, Z
    4e34:	91 81       	ldd	r25, Z+1	; 0x01
    4e36:	8d 93       	st	X+, r24
    4e38:	9c 93       	st	X, r25
    4e3a:	fe 01       	movw	r30, r28
    4e3c:	e7 55       	subi	r30, 0x57	; 87
    4e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e40:	80 81       	ld	r24, Z
    4e42:	91 81       	ldd	r25, Z+1	; 0x01
    4e44:	01 97       	sbiw	r24, 0x01	; 1
    4e46:	f1 f7       	brne	.-4      	; 0x4e44 <MyStory+0x2008>
    4e48:	fe 01       	movw	r30, r28
    4e4a:	e7 55       	subi	r30, 0x57	; 87
    4e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4e:	91 83       	std	Z+1, r25	; 0x01
    4e50:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("Every thing need ");
    4e52:	80 ef       	ldi	r24, 0xF0	; 240
    4e54:	91 e0       	ldi	r25, 0x01	; 1
    4e56:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,0);
    4e5a:	83 e0       	ldi	r24, 0x03	; 3
    4e5c:	60 e0       	ldi	r22, 0x00	; 0
    4e5e:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    4e62:	fe 01       	movw	r30, r28
    4e64:	eb 55       	subi	r30, 0x5B	; 91
    4e66:	ff 4f       	sbci	r31, 0xFF	; 255
    4e68:	80 e0       	ldi	r24, 0x00	; 0
    4e6a:	90 e0       	ldi	r25, 0x00	; 0
    4e6c:	aa e7       	ldi	r26, 0x7A	; 122
    4e6e:	b4 e4       	ldi	r27, 0x44	; 68
    4e70:	80 83       	st	Z, r24
    4e72:	91 83       	std	Z+1, r25	; 0x01
    4e74:	a2 83       	std	Z+2, r26	; 0x02
    4e76:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e78:	8e 01       	movw	r16, r28
    4e7a:	0f 55       	subi	r16, 0x5F	; 95
    4e7c:	1f 4f       	sbci	r17, 0xFF	; 255
    4e7e:	fe 01       	movw	r30, r28
    4e80:	eb 55       	subi	r30, 0x5B	; 91
    4e82:	ff 4f       	sbci	r31, 0xFF	; 255
    4e84:	60 81       	ld	r22, Z
    4e86:	71 81       	ldd	r23, Z+1	; 0x01
    4e88:	82 81       	ldd	r24, Z+2	; 0x02
    4e8a:	93 81       	ldd	r25, Z+3	; 0x03
    4e8c:	20 e0       	ldi	r18, 0x00	; 0
    4e8e:	30 e0       	ldi	r19, 0x00	; 0
    4e90:	4a ef       	ldi	r20, 0xFA	; 250
    4e92:	54 e4       	ldi	r21, 0x44	; 68
    4e94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e98:	dc 01       	movw	r26, r24
    4e9a:	cb 01       	movw	r24, r22
    4e9c:	f8 01       	movw	r30, r16
    4e9e:	80 83       	st	Z, r24
    4ea0:	91 83       	std	Z+1, r25	; 0x01
    4ea2:	a2 83       	std	Z+2, r26	; 0x02
    4ea4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ea6:	fe 01       	movw	r30, r28
    4ea8:	ef 55       	subi	r30, 0x5F	; 95
    4eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    4eac:	60 81       	ld	r22, Z
    4eae:	71 81       	ldd	r23, Z+1	; 0x01
    4eb0:	82 81       	ldd	r24, Z+2	; 0x02
    4eb2:	93 81       	ldd	r25, Z+3	; 0x03
    4eb4:	20 e0       	ldi	r18, 0x00	; 0
    4eb6:	30 e0       	ldi	r19, 0x00	; 0
    4eb8:	40 e8       	ldi	r20, 0x80	; 128
    4eba:	5f e3       	ldi	r21, 0x3F	; 63
    4ebc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4ec0:	88 23       	and	r24, r24
    4ec2:	44 f4       	brge	.+16     	; 0x4ed4 <MyStory+0x2098>
		__ticks = 1;
    4ec4:	fe 01       	movw	r30, r28
    4ec6:	e1 56       	subi	r30, 0x61	; 97
    4ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    4eca:	81 e0       	ldi	r24, 0x01	; 1
    4ecc:	90 e0       	ldi	r25, 0x00	; 0
    4ece:	91 83       	std	Z+1, r25	; 0x01
    4ed0:	80 83       	st	Z, r24
    4ed2:	64 c0       	rjmp	.+200    	; 0x4f9c <MyStory+0x2160>
	else if (__tmp > 65535)
    4ed4:	fe 01       	movw	r30, r28
    4ed6:	ef 55       	subi	r30, 0x5F	; 95
    4ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    4eda:	60 81       	ld	r22, Z
    4edc:	71 81       	ldd	r23, Z+1	; 0x01
    4ede:	82 81       	ldd	r24, Z+2	; 0x02
    4ee0:	93 81       	ldd	r25, Z+3	; 0x03
    4ee2:	20 e0       	ldi	r18, 0x00	; 0
    4ee4:	3f ef       	ldi	r19, 0xFF	; 255
    4ee6:	4f e7       	ldi	r20, 0x7F	; 127
    4ee8:	57 e4       	ldi	r21, 0x47	; 71
    4eea:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4eee:	18 16       	cp	r1, r24
    4ef0:	0c f0       	brlt	.+2      	; 0x4ef4 <MyStory+0x20b8>
    4ef2:	43 c0       	rjmp	.+134    	; 0x4f7a <MyStory+0x213e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ef4:	fe 01       	movw	r30, r28
    4ef6:	eb 55       	subi	r30, 0x5B	; 91
    4ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    4efa:	60 81       	ld	r22, Z
    4efc:	71 81       	ldd	r23, Z+1	; 0x01
    4efe:	82 81       	ldd	r24, Z+2	; 0x02
    4f00:	93 81       	ldd	r25, Z+3	; 0x03
    4f02:	20 e0       	ldi	r18, 0x00	; 0
    4f04:	30 e0       	ldi	r19, 0x00	; 0
    4f06:	40 e2       	ldi	r20, 0x20	; 32
    4f08:	51 e4       	ldi	r21, 0x41	; 65
    4f0a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4f0e:	dc 01       	movw	r26, r24
    4f10:	cb 01       	movw	r24, r22
    4f12:	8e 01       	movw	r16, r28
    4f14:	01 56       	subi	r16, 0x61	; 97
    4f16:	1f 4f       	sbci	r17, 0xFF	; 255
    4f18:	bc 01       	movw	r22, r24
    4f1a:	cd 01       	movw	r24, r26
    4f1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f20:	dc 01       	movw	r26, r24
    4f22:	cb 01       	movw	r24, r22
    4f24:	f8 01       	movw	r30, r16
    4f26:	91 83       	std	Z+1, r25	; 0x01
    4f28:	80 83       	st	Z, r24
    4f2a:	1f c0       	rjmp	.+62     	; 0x4f6a <MyStory+0x212e>
    4f2c:	fe 01       	movw	r30, r28
    4f2e:	e3 56       	subi	r30, 0x63	; 99
    4f30:	ff 4f       	sbci	r31, 0xFF	; 255
    4f32:	88 ec       	ldi	r24, 0xC8	; 200
    4f34:	90 e0       	ldi	r25, 0x00	; 0
    4f36:	91 83       	std	Z+1, r25	; 0x01
    4f38:	80 83       	st	Z, r24
    4f3a:	fe 01       	movw	r30, r28
    4f3c:	e3 56       	subi	r30, 0x63	; 99
    4f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f40:	80 81       	ld	r24, Z
    4f42:	91 81       	ldd	r25, Z+1	; 0x01
    4f44:	01 97       	sbiw	r24, 0x01	; 1
    4f46:	f1 f7       	brne	.-4      	; 0x4f44 <MyStory+0x2108>
    4f48:	fe 01       	movw	r30, r28
    4f4a:	e3 56       	subi	r30, 0x63	; 99
    4f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f4e:	91 83       	std	Z+1, r25	; 0x01
    4f50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f52:	de 01       	movw	r26, r28
    4f54:	a1 56       	subi	r26, 0x61	; 97
    4f56:	bf 4f       	sbci	r27, 0xFF	; 255
    4f58:	fe 01       	movw	r30, r28
    4f5a:	e1 56       	subi	r30, 0x61	; 97
    4f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f5e:	80 81       	ld	r24, Z
    4f60:	91 81       	ldd	r25, Z+1	; 0x01
    4f62:	01 97       	sbiw	r24, 0x01	; 1
    4f64:	11 96       	adiw	r26, 0x01	; 1
    4f66:	9c 93       	st	X, r25
    4f68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f6a:	fe 01       	movw	r30, r28
    4f6c:	e1 56       	subi	r30, 0x61	; 97
    4f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f70:	80 81       	ld	r24, Z
    4f72:	91 81       	ldd	r25, Z+1	; 0x01
    4f74:	00 97       	sbiw	r24, 0x00	; 0
    4f76:	d1 f6       	brne	.-76     	; 0x4f2c <MyStory+0x20f0>
    4f78:	27 c0       	rjmp	.+78     	; 0x4fc8 <MyStory+0x218c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f7a:	8e 01       	movw	r16, r28
    4f7c:	01 56       	subi	r16, 0x61	; 97
    4f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    4f80:	fe 01       	movw	r30, r28
    4f82:	ef 55       	subi	r30, 0x5F	; 95
    4f84:	ff 4f       	sbci	r31, 0xFF	; 255
    4f86:	60 81       	ld	r22, Z
    4f88:	71 81       	ldd	r23, Z+1	; 0x01
    4f8a:	82 81       	ldd	r24, Z+2	; 0x02
    4f8c:	93 81       	ldd	r25, Z+3	; 0x03
    4f8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f92:	dc 01       	movw	r26, r24
    4f94:	cb 01       	movw	r24, r22
    4f96:	f8 01       	movw	r30, r16
    4f98:	91 83       	std	Z+1, r25	; 0x01
    4f9a:	80 83       	st	Z, r24
    4f9c:	de 01       	movw	r26, r28
    4f9e:	a5 56       	subi	r26, 0x65	; 101
    4fa0:	bf 4f       	sbci	r27, 0xFF	; 255
    4fa2:	fe 01       	movw	r30, r28
    4fa4:	e1 56       	subi	r30, 0x61	; 97
    4fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    4fa8:	80 81       	ld	r24, Z
    4faa:	91 81       	ldd	r25, Z+1	; 0x01
    4fac:	8d 93       	st	X+, r24
    4fae:	9c 93       	st	X, r25
    4fb0:	fe 01       	movw	r30, r28
    4fb2:	e5 56       	subi	r30, 0x65	; 101
    4fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb6:	80 81       	ld	r24, Z
    4fb8:	91 81       	ldd	r25, Z+1	; 0x01
    4fba:	01 97       	sbiw	r24, 0x01	; 1
    4fbc:	f1 f7       	brne	.-4      	; 0x4fba <MyStory+0x217e>
    4fbe:	fe 01       	movw	r30, r28
    4fc0:	e5 56       	subi	r30, 0x65	; 101
    4fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    4fc4:	91 83       	std	Z+1, r25	; 0x01
    4fc6:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_WriteString("Patience and Diligence.");
    4fc8:	82 e0       	ldi	r24, 0x02	; 2
    4fca:	92 e0       	ldi	r25, 0x02	; 2
    4fcc:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    4fd0:	fe 01       	movw	r30, r28
    4fd2:	e9 56       	subi	r30, 0x69	; 105
    4fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    4fd6:	80 e0       	ldi	r24, 0x00	; 0
    4fd8:	90 e0       	ldi	r25, 0x00	; 0
    4fda:	aa e7       	ldi	r26, 0x7A	; 122
    4fdc:	b4 e4       	ldi	r27, 0x44	; 68
    4fde:	80 83       	st	Z, r24
    4fe0:	91 83       	std	Z+1, r25	; 0x01
    4fe2:	a2 83       	std	Z+2, r26	; 0x02
    4fe4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fe6:	8e 01       	movw	r16, r28
    4fe8:	0d 56       	subi	r16, 0x6D	; 109
    4fea:	1f 4f       	sbci	r17, 0xFF	; 255
    4fec:	fe 01       	movw	r30, r28
    4fee:	e9 56       	subi	r30, 0x69	; 105
    4ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff2:	60 81       	ld	r22, Z
    4ff4:	71 81       	ldd	r23, Z+1	; 0x01
    4ff6:	82 81       	ldd	r24, Z+2	; 0x02
    4ff8:	93 81       	ldd	r25, Z+3	; 0x03
    4ffa:	20 e0       	ldi	r18, 0x00	; 0
    4ffc:	30 e0       	ldi	r19, 0x00	; 0
    4ffe:	4a ef       	ldi	r20, 0xFA	; 250
    5000:	54 e4       	ldi	r21, 0x44	; 68
    5002:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5006:	dc 01       	movw	r26, r24
    5008:	cb 01       	movw	r24, r22
    500a:	f8 01       	movw	r30, r16
    500c:	80 83       	st	Z, r24
    500e:	91 83       	std	Z+1, r25	; 0x01
    5010:	a2 83       	std	Z+2, r26	; 0x02
    5012:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5014:	fe 01       	movw	r30, r28
    5016:	ed 56       	subi	r30, 0x6D	; 109
    5018:	ff 4f       	sbci	r31, 0xFF	; 255
    501a:	60 81       	ld	r22, Z
    501c:	71 81       	ldd	r23, Z+1	; 0x01
    501e:	82 81       	ldd	r24, Z+2	; 0x02
    5020:	93 81       	ldd	r25, Z+3	; 0x03
    5022:	20 e0       	ldi	r18, 0x00	; 0
    5024:	30 e0       	ldi	r19, 0x00	; 0
    5026:	40 e8       	ldi	r20, 0x80	; 128
    5028:	5f e3       	ldi	r21, 0x3F	; 63
    502a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    502e:	88 23       	and	r24, r24
    5030:	44 f4       	brge	.+16     	; 0x5042 <MyStory+0x2206>
		__ticks = 1;
    5032:	fe 01       	movw	r30, r28
    5034:	ef 56       	subi	r30, 0x6F	; 111
    5036:	ff 4f       	sbci	r31, 0xFF	; 255
    5038:	81 e0       	ldi	r24, 0x01	; 1
    503a:	90 e0       	ldi	r25, 0x00	; 0
    503c:	91 83       	std	Z+1, r25	; 0x01
    503e:	80 83       	st	Z, r24
    5040:	64 c0       	rjmp	.+200    	; 0x510a <MyStory+0x22ce>
	else if (__tmp > 65535)
    5042:	fe 01       	movw	r30, r28
    5044:	ed 56       	subi	r30, 0x6D	; 109
    5046:	ff 4f       	sbci	r31, 0xFF	; 255
    5048:	60 81       	ld	r22, Z
    504a:	71 81       	ldd	r23, Z+1	; 0x01
    504c:	82 81       	ldd	r24, Z+2	; 0x02
    504e:	93 81       	ldd	r25, Z+3	; 0x03
    5050:	20 e0       	ldi	r18, 0x00	; 0
    5052:	3f ef       	ldi	r19, 0xFF	; 255
    5054:	4f e7       	ldi	r20, 0x7F	; 127
    5056:	57 e4       	ldi	r21, 0x47	; 71
    5058:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    505c:	18 16       	cp	r1, r24
    505e:	0c f0       	brlt	.+2      	; 0x5062 <MyStory+0x2226>
    5060:	43 c0       	rjmp	.+134    	; 0x50e8 <MyStory+0x22ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5062:	fe 01       	movw	r30, r28
    5064:	e9 56       	subi	r30, 0x69	; 105
    5066:	ff 4f       	sbci	r31, 0xFF	; 255
    5068:	60 81       	ld	r22, Z
    506a:	71 81       	ldd	r23, Z+1	; 0x01
    506c:	82 81       	ldd	r24, Z+2	; 0x02
    506e:	93 81       	ldd	r25, Z+3	; 0x03
    5070:	20 e0       	ldi	r18, 0x00	; 0
    5072:	30 e0       	ldi	r19, 0x00	; 0
    5074:	40 e2       	ldi	r20, 0x20	; 32
    5076:	51 e4       	ldi	r21, 0x41	; 65
    5078:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    507c:	dc 01       	movw	r26, r24
    507e:	cb 01       	movw	r24, r22
    5080:	8e 01       	movw	r16, r28
    5082:	0f 56       	subi	r16, 0x6F	; 111
    5084:	1f 4f       	sbci	r17, 0xFF	; 255
    5086:	bc 01       	movw	r22, r24
    5088:	cd 01       	movw	r24, r26
    508a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    508e:	dc 01       	movw	r26, r24
    5090:	cb 01       	movw	r24, r22
    5092:	f8 01       	movw	r30, r16
    5094:	91 83       	std	Z+1, r25	; 0x01
    5096:	80 83       	st	Z, r24
    5098:	1f c0       	rjmp	.+62     	; 0x50d8 <MyStory+0x229c>
    509a:	fe 01       	movw	r30, r28
    509c:	e1 57       	subi	r30, 0x71	; 113
    509e:	ff 4f       	sbci	r31, 0xFF	; 255
    50a0:	88 ec       	ldi	r24, 0xC8	; 200
    50a2:	90 e0       	ldi	r25, 0x00	; 0
    50a4:	91 83       	std	Z+1, r25	; 0x01
    50a6:	80 83       	st	Z, r24
    50a8:	fe 01       	movw	r30, r28
    50aa:	e1 57       	subi	r30, 0x71	; 113
    50ac:	ff 4f       	sbci	r31, 0xFF	; 255
    50ae:	80 81       	ld	r24, Z
    50b0:	91 81       	ldd	r25, Z+1	; 0x01
    50b2:	01 97       	sbiw	r24, 0x01	; 1
    50b4:	f1 f7       	brne	.-4      	; 0x50b2 <MyStory+0x2276>
    50b6:	fe 01       	movw	r30, r28
    50b8:	e1 57       	subi	r30, 0x71	; 113
    50ba:	ff 4f       	sbci	r31, 0xFF	; 255
    50bc:	91 83       	std	Z+1, r25	; 0x01
    50be:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50c0:	de 01       	movw	r26, r28
    50c2:	af 56       	subi	r26, 0x6F	; 111
    50c4:	bf 4f       	sbci	r27, 0xFF	; 255
    50c6:	fe 01       	movw	r30, r28
    50c8:	ef 56       	subi	r30, 0x6F	; 111
    50ca:	ff 4f       	sbci	r31, 0xFF	; 255
    50cc:	80 81       	ld	r24, Z
    50ce:	91 81       	ldd	r25, Z+1	; 0x01
    50d0:	01 97       	sbiw	r24, 0x01	; 1
    50d2:	11 96       	adiw	r26, 0x01	; 1
    50d4:	9c 93       	st	X, r25
    50d6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50d8:	fe 01       	movw	r30, r28
    50da:	ef 56       	subi	r30, 0x6F	; 111
    50dc:	ff 4f       	sbci	r31, 0xFF	; 255
    50de:	80 81       	ld	r24, Z
    50e0:	91 81       	ldd	r25, Z+1	; 0x01
    50e2:	00 97       	sbiw	r24, 0x00	; 0
    50e4:	d1 f6       	brne	.-76     	; 0x509a <MyStory+0x225e>
    50e6:	27 c0       	rjmp	.+78     	; 0x5136 <MyStory+0x22fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50e8:	8e 01       	movw	r16, r28
    50ea:	0f 56       	subi	r16, 0x6F	; 111
    50ec:	1f 4f       	sbci	r17, 0xFF	; 255
    50ee:	fe 01       	movw	r30, r28
    50f0:	ed 56       	subi	r30, 0x6D	; 109
    50f2:	ff 4f       	sbci	r31, 0xFF	; 255
    50f4:	60 81       	ld	r22, Z
    50f6:	71 81       	ldd	r23, Z+1	; 0x01
    50f8:	82 81       	ldd	r24, Z+2	; 0x02
    50fa:	93 81       	ldd	r25, Z+3	; 0x03
    50fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5100:	dc 01       	movw	r26, r24
    5102:	cb 01       	movw	r24, r22
    5104:	f8 01       	movw	r30, r16
    5106:	91 83       	std	Z+1, r25	; 0x01
    5108:	80 83       	st	Z, r24
    510a:	de 01       	movw	r26, r28
    510c:	a3 57       	subi	r26, 0x73	; 115
    510e:	bf 4f       	sbci	r27, 0xFF	; 255
    5110:	fe 01       	movw	r30, r28
    5112:	ef 56       	subi	r30, 0x6F	; 111
    5114:	ff 4f       	sbci	r31, 0xFF	; 255
    5116:	80 81       	ld	r24, Z
    5118:	91 81       	ldd	r25, Z+1	; 0x01
    511a:	8d 93       	st	X+, r24
    511c:	9c 93       	st	X, r25
    511e:	fe 01       	movw	r30, r28
    5120:	e3 57       	subi	r30, 0x73	; 115
    5122:	ff 4f       	sbci	r31, 0xFF	; 255
    5124:	80 81       	ld	r24, Z
    5126:	91 81       	ldd	r25, Z+1	; 0x01
    5128:	01 97       	sbiw	r24, 0x01	; 1
    512a:	f1 f7       	brne	.-4      	; 0x5128 <MyStory+0x22ec>
    512c:	fe 01       	movw	r30, r28
    512e:	e3 57       	subi	r30, 0x73	; 115
    5130:	ff 4f       	sbci	r31, 0xFF	; 255
    5132:	91 83       	std	Z+1, r25	; 0x01
    5134:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear();	//clear
    5136:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    513a:	80 e0       	ldi	r24, 0x00	; 0
    513c:	60 e0       	ldi	r22, 0x00	; 0
    513e:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    5142:	fe 01       	movw	r30, r28
    5144:	e7 57       	subi	r30, 0x77	; 119
    5146:	ff 4f       	sbci	r31, 0xFF	; 255
    5148:	80 e0       	ldi	r24, 0x00	; 0
    514a:	90 e0       	ldi	r25, 0x00	; 0
    514c:	aa ef       	ldi	r26, 0xFA	; 250
    514e:	b3 e4       	ldi	r27, 0x43	; 67
    5150:	80 83       	st	Z, r24
    5152:	91 83       	std	Z+1, r25	; 0x01
    5154:	a2 83       	std	Z+2, r26	; 0x02
    5156:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5158:	8e 01       	movw	r16, r28
    515a:	0b 57       	subi	r16, 0x7B	; 123
    515c:	1f 4f       	sbci	r17, 0xFF	; 255
    515e:	fe 01       	movw	r30, r28
    5160:	e7 57       	subi	r30, 0x77	; 119
    5162:	ff 4f       	sbci	r31, 0xFF	; 255
    5164:	60 81       	ld	r22, Z
    5166:	71 81       	ldd	r23, Z+1	; 0x01
    5168:	82 81       	ldd	r24, Z+2	; 0x02
    516a:	93 81       	ldd	r25, Z+3	; 0x03
    516c:	20 e0       	ldi	r18, 0x00	; 0
    516e:	30 e0       	ldi	r19, 0x00	; 0
    5170:	4a ef       	ldi	r20, 0xFA	; 250
    5172:	54 e4       	ldi	r21, 0x44	; 68
    5174:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5178:	dc 01       	movw	r26, r24
    517a:	cb 01       	movw	r24, r22
    517c:	f8 01       	movw	r30, r16
    517e:	80 83       	st	Z, r24
    5180:	91 83       	std	Z+1, r25	; 0x01
    5182:	a2 83       	std	Z+2, r26	; 0x02
    5184:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5186:	fe 01       	movw	r30, r28
    5188:	eb 57       	subi	r30, 0x7B	; 123
    518a:	ff 4f       	sbci	r31, 0xFF	; 255
    518c:	60 81       	ld	r22, Z
    518e:	71 81       	ldd	r23, Z+1	; 0x01
    5190:	82 81       	ldd	r24, Z+2	; 0x02
    5192:	93 81       	ldd	r25, Z+3	; 0x03
    5194:	20 e0       	ldi	r18, 0x00	; 0
    5196:	30 e0       	ldi	r19, 0x00	; 0
    5198:	40 e8       	ldi	r20, 0x80	; 128
    519a:	5f e3       	ldi	r21, 0x3F	; 63
    519c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    51a0:	88 23       	and	r24, r24
    51a2:	44 f4       	brge	.+16     	; 0x51b4 <MyStory+0x2378>
		__ticks = 1;
    51a4:	fe 01       	movw	r30, r28
    51a6:	ed 57       	subi	r30, 0x7D	; 125
    51a8:	ff 4f       	sbci	r31, 0xFF	; 255
    51aa:	81 e0       	ldi	r24, 0x01	; 1
    51ac:	90 e0       	ldi	r25, 0x00	; 0
    51ae:	91 83       	std	Z+1, r25	; 0x01
    51b0:	80 83       	st	Z, r24
    51b2:	64 c0       	rjmp	.+200    	; 0x527c <MyStory+0x2440>
	else if (__tmp > 65535)
    51b4:	fe 01       	movw	r30, r28
    51b6:	eb 57       	subi	r30, 0x7B	; 123
    51b8:	ff 4f       	sbci	r31, 0xFF	; 255
    51ba:	60 81       	ld	r22, Z
    51bc:	71 81       	ldd	r23, Z+1	; 0x01
    51be:	82 81       	ldd	r24, Z+2	; 0x02
    51c0:	93 81       	ldd	r25, Z+3	; 0x03
    51c2:	20 e0       	ldi	r18, 0x00	; 0
    51c4:	3f ef       	ldi	r19, 0xFF	; 255
    51c6:	4f e7       	ldi	r20, 0x7F	; 127
    51c8:	57 e4       	ldi	r21, 0x47	; 71
    51ca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    51ce:	18 16       	cp	r1, r24
    51d0:	0c f0       	brlt	.+2      	; 0x51d4 <MyStory+0x2398>
    51d2:	43 c0       	rjmp	.+134    	; 0x525a <MyStory+0x241e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51d4:	fe 01       	movw	r30, r28
    51d6:	e7 57       	subi	r30, 0x77	; 119
    51d8:	ff 4f       	sbci	r31, 0xFF	; 255
    51da:	60 81       	ld	r22, Z
    51dc:	71 81       	ldd	r23, Z+1	; 0x01
    51de:	82 81       	ldd	r24, Z+2	; 0x02
    51e0:	93 81       	ldd	r25, Z+3	; 0x03
    51e2:	20 e0       	ldi	r18, 0x00	; 0
    51e4:	30 e0       	ldi	r19, 0x00	; 0
    51e6:	40 e2       	ldi	r20, 0x20	; 32
    51e8:	51 e4       	ldi	r21, 0x41	; 65
    51ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    51ee:	dc 01       	movw	r26, r24
    51f0:	cb 01       	movw	r24, r22
    51f2:	8e 01       	movw	r16, r28
    51f4:	0d 57       	subi	r16, 0x7D	; 125
    51f6:	1f 4f       	sbci	r17, 0xFF	; 255
    51f8:	bc 01       	movw	r22, r24
    51fa:	cd 01       	movw	r24, r26
    51fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5200:	dc 01       	movw	r26, r24
    5202:	cb 01       	movw	r24, r22
    5204:	f8 01       	movw	r30, r16
    5206:	91 83       	std	Z+1, r25	; 0x01
    5208:	80 83       	st	Z, r24
    520a:	1f c0       	rjmp	.+62     	; 0x524a <MyStory+0x240e>
    520c:	fe 01       	movw	r30, r28
    520e:	ef 57       	subi	r30, 0x7F	; 127
    5210:	ff 4f       	sbci	r31, 0xFF	; 255
    5212:	88 ec       	ldi	r24, 0xC8	; 200
    5214:	90 e0       	ldi	r25, 0x00	; 0
    5216:	91 83       	std	Z+1, r25	; 0x01
    5218:	80 83       	st	Z, r24
    521a:	fe 01       	movw	r30, r28
    521c:	ef 57       	subi	r30, 0x7F	; 127
    521e:	ff 4f       	sbci	r31, 0xFF	; 255
    5220:	80 81       	ld	r24, Z
    5222:	91 81       	ldd	r25, Z+1	; 0x01
    5224:	01 97       	sbiw	r24, 0x01	; 1
    5226:	f1 f7       	brne	.-4      	; 0x5224 <MyStory+0x23e8>
    5228:	fe 01       	movw	r30, r28
    522a:	ef 57       	subi	r30, 0x7F	; 127
    522c:	ff 4f       	sbci	r31, 0xFF	; 255
    522e:	91 83       	std	Z+1, r25	; 0x01
    5230:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5232:	de 01       	movw	r26, r28
    5234:	ad 57       	subi	r26, 0x7D	; 125
    5236:	bf 4f       	sbci	r27, 0xFF	; 255
    5238:	fe 01       	movw	r30, r28
    523a:	ed 57       	subi	r30, 0x7D	; 125
    523c:	ff 4f       	sbci	r31, 0xFF	; 255
    523e:	80 81       	ld	r24, Z
    5240:	91 81       	ldd	r25, Z+1	; 0x01
    5242:	01 97       	sbiw	r24, 0x01	; 1
    5244:	11 96       	adiw	r26, 0x01	; 1
    5246:	9c 93       	st	X, r25
    5248:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    524a:	fe 01       	movw	r30, r28
    524c:	ed 57       	subi	r30, 0x7D	; 125
    524e:	ff 4f       	sbci	r31, 0xFF	; 255
    5250:	80 81       	ld	r24, Z
    5252:	91 81       	ldd	r25, Z+1	; 0x01
    5254:	00 97       	sbiw	r24, 0x00	; 0
    5256:	d1 f6       	brne	.-76     	; 0x520c <MyStory+0x23d0>
    5258:	27 c0       	rjmp	.+78     	; 0x52a8 <MyStory+0x246c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    525a:	8e 01       	movw	r16, r28
    525c:	0d 57       	subi	r16, 0x7D	; 125
    525e:	1f 4f       	sbci	r17, 0xFF	; 255
    5260:	fe 01       	movw	r30, r28
    5262:	eb 57       	subi	r30, 0x7B	; 123
    5264:	ff 4f       	sbci	r31, 0xFF	; 255
    5266:	60 81       	ld	r22, Z
    5268:	71 81       	ldd	r23, Z+1	; 0x01
    526a:	82 81       	ldd	r24, Z+2	; 0x02
    526c:	93 81       	ldd	r25, Z+3	; 0x03
    526e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5272:	dc 01       	movw	r26, r24
    5274:	cb 01       	movw	r24, r22
    5276:	f8 01       	movw	r30, r16
    5278:	91 83       	std	Z+1, r25	; 0x01
    527a:	80 83       	st	Z, r24
    527c:	de 01       	movw	r26, r28
    527e:	a1 58       	subi	r26, 0x81	; 129
    5280:	bf 4f       	sbci	r27, 0xFF	; 255
    5282:	fe 01       	movw	r30, r28
    5284:	ed 57       	subi	r30, 0x7D	; 125
    5286:	ff 4f       	sbci	r31, 0xFF	; 255
    5288:	80 81       	ld	r24, Z
    528a:	91 81       	ldd	r25, Z+1	; 0x01
    528c:	8d 93       	st	X+, r24
    528e:	9c 93       	st	X, r25
    5290:	fe 01       	movw	r30, r28
    5292:	e1 58       	subi	r30, 0x81	; 129
    5294:	ff 4f       	sbci	r31, 0xFF	; 255
    5296:	80 81       	ld	r24, Z
    5298:	91 81       	ldd	r25, Z+1	; 0x01
    529a:	01 97       	sbiw	r24, 0x01	; 1
    529c:	f1 f7       	brne	.-4      	; 0x529a <MyStory+0x245e>
    529e:	fe 01       	movw	r30, r28
    52a0:	e1 58       	subi	r30, 0x81	; 129
    52a2:	ff 4f       	sbci	r31, 0xFF	; 255
    52a4:	91 83       	std	Z+1, r25	; 0x01
    52a6:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("So,here i'm now ");
    52a8:	8a e1       	ldi	r24, 0x1A	; 26
    52aa:	92 e0       	ldi	r25, 0x02	; 2
    52ac:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    52b0:	81 e0       	ldi	r24, 0x01	; 1
    52b2:	60 e0       	ldi	r22, 0x00	; 0
    52b4:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    52b8:	fe 01       	movw	r30, r28
    52ba:	e5 58       	subi	r30, 0x85	; 133
    52bc:	ff 4f       	sbci	r31, 0xFF	; 255
    52be:	80 e0       	ldi	r24, 0x00	; 0
    52c0:	90 e0       	ldi	r25, 0x00	; 0
    52c2:	aa ef       	ldi	r26, 0xFA	; 250
    52c4:	b3 e4       	ldi	r27, 0x43	; 67
    52c6:	80 83       	st	Z, r24
    52c8:	91 83       	std	Z+1, r25	; 0x01
    52ca:	a2 83       	std	Z+2, r26	; 0x02
    52cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52ce:	8e 01       	movw	r16, r28
    52d0:	09 58       	subi	r16, 0x89	; 137
    52d2:	1f 4f       	sbci	r17, 0xFF	; 255
    52d4:	fe 01       	movw	r30, r28
    52d6:	e5 58       	subi	r30, 0x85	; 133
    52d8:	ff 4f       	sbci	r31, 0xFF	; 255
    52da:	60 81       	ld	r22, Z
    52dc:	71 81       	ldd	r23, Z+1	; 0x01
    52de:	82 81       	ldd	r24, Z+2	; 0x02
    52e0:	93 81       	ldd	r25, Z+3	; 0x03
    52e2:	20 e0       	ldi	r18, 0x00	; 0
    52e4:	30 e0       	ldi	r19, 0x00	; 0
    52e6:	4a ef       	ldi	r20, 0xFA	; 250
    52e8:	54 e4       	ldi	r21, 0x44	; 68
    52ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    52ee:	dc 01       	movw	r26, r24
    52f0:	cb 01       	movw	r24, r22
    52f2:	f8 01       	movw	r30, r16
    52f4:	80 83       	st	Z, r24
    52f6:	91 83       	std	Z+1, r25	; 0x01
    52f8:	a2 83       	std	Z+2, r26	; 0x02
    52fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    52fc:	fe 01       	movw	r30, r28
    52fe:	e9 58       	subi	r30, 0x89	; 137
    5300:	ff 4f       	sbci	r31, 0xFF	; 255
    5302:	60 81       	ld	r22, Z
    5304:	71 81       	ldd	r23, Z+1	; 0x01
    5306:	82 81       	ldd	r24, Z+2	; 0x02
    5308:	93 81       	ldd	r25, Z+3	; 0x03
    530a:	20 e0       	ldi	r18, 0x00	; 0
    530c:	30 e0       	ldi	r19, 0x00	; 0
    530e:	40 e8       	ldi	r20, 0x80	; 128
    5310:	5f e3       	ldi	r21, 0x3F	; 63
    5312:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5316:	88 23       	and	r24, r24
    5318:	44 f4       	brge	.+16     	; 0x532a <MyStory+0x24ee>
		__ticks = 1;
    531a:	fe 01       	movw	r30, r28
    531c:	eb 58       	subi	r30, 0x8B	; 139
    531e:	ff 4f       	sbci	r31, 0xFF	; 255
    5320:	81 e0       	ldi	r24, 0x01	; 1
    5322:	90 e0       	ldi	r25, 0x00	; 0
    5324:	91 83       	std	Z+1, r25	; 0x01
    5326:	80 83       	st	Z, r24
    5328:	64 c0       	rjmp	.+200    	; 0x53f2 <MyStory+0x25b6>
	else if (__tmp > 65535)
    532a:	fe 01       	movw	r30, r28
    532c:	e9 58       	subi	r30, 0x89	; 137
    532e:	ff 4f       	sbci	r31, 0xFF	; 255
    5330:	60 81       	ld	r22, Z
    5332:	71 81       	ldd	r23, Z+1	; 0x01
    5334:	82 81       	ldd	r24, Z+2	; 0x02
    5336:	93 81       	ldd	r25, Z+3	; 0x03
    5338:	20 e0       	ldi	r18, 0x00	; 0
    533a:	3f ef       	ldi	r19, 0xFF	; 255
    533c:	4f e7       	ldi	r20, 0x7F	; 127
    533e:	57 e4       	ldi	r21, 0x47	; 71
    5340:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5344:	18 16       	cp	r1, r24
    5346:	0c f0       	brlt	.+2      	; 0x534a <MyStory+0x250e>
    5348:	43 c0       	rjmp	.+134    	; 0x53d0 <MyStory+0x2594>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    534a:	fe 01       	movw	r30, r28
    534c:	e5 58       	subi	r30, 0x85	; 133
    534e:	ff 4f       	sbci	r31, 0xFF	; 255
    5350:	60 81       	ld	r22, Z
    5352:	71 81       	ldd	r23, Z+1	; 0x01
    5354:	82 81       	ldd	r24, Z+2	; 0x02
    5356:	93 81       	ldd	r25, Z+3	; 0x03
    5358:	20 e0       	ldi	r18, 0x00	; 0
    535a:	30 e0       	ldi	r19, 0x00	; 0
    535c:	40 e2       	ldi	r20, 0x20	; 32
    535e:	51 e4       	ldi	r21, 0x41	; 65
    5360:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5364:	dc 01       	movw	r26, r24
    5366:	cb 01       	movw	r24, r22
    5368:	8e 01       	movw	r16, r28
    536a:	0b 58       	subi	r16, 0x8B	; 139
    536c:	1f 4f       	sbci	r17, 0xFF	; 255
    536e:	bc 01       	movw	r22, r24
    5370:	cd 01       	movw	r24, r26
    5372:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5376:	dc 01       	movw	r26, r24
    5378:	cb 01       	movw	r24, r22
    537a:	f8 01       	movw	r30, r16
    537c:	91 83       	std	Z+1, r25	; 0x01
    537e:	80 83       	st	Z, r24
    5380:	1f c0       	rjmp	.+62     	; 0x53c0 <MyStory+0x2584>
    5382:	fe 01       	movw	r30, r28
    5384:	ed 58       	subi	r30, 0x8D	; 141
    5386:	ff 4f       	sbci	r31, 0xFF	; 255
    5388:	88 ec       	ldi	r24, 0xC8	; 200
    538a:	90 e0       	ldi	r25, 0x00	; 0
    538c:	91 83       	std	Z+1, r25	; 0x01
    538e:	80 83       	st	Z, r24
    5390:	fe 01       	movw	r30, r28
    5392:	ed 58       	subi	r30, 0x8D	; 141
    5394:	ff 4f       	sbci	r31, 0xFF	; 255
    5396:	80 81       	ld	r24, Z
    5398:	91 81       	ldd	r25, Z+1	; 0x01
    539a:	01 97       	sbiw	r24, 0x01	; 1
    539c:	f1 f7       	brne	.-4      	; 0x539a <MyStory+0x255e>
    539e:	fe 01       	movw	r30, r28
    53a0:	ed 58       	subi	r30, 0x8D	; 141
    53a2:	ff 4f       	sbci	r31, 0xFF	; 255
    53a4:	91 83       	std	Z+1, r25	; 0x01
    53a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53a8:	de 01       	movw	r26, r28
    53aa:	ab 58       	subi	r26, 0x8B	; 139
    53ac:	bf 4f       	sbci	r27, 0xFF	; 255
    53ae:	fe 01       	movw	r30, r28
    53b0:	eb 58       	subi	r30, 0x8B	; 139
    53b2:	ff 4f       	sbci	r31, 0xFF	; 255
    53b4:	80 81       	ld	r24, Z
    53b6:	91 81       	ldd	r25, Z+1	; 0x01
    53b8:	01 97       	sbiw	r24, 0x01	; 1
    53ba:	11 96       	adiw	r26, 0x01	; 1
    53bc:	9c 93       	st	X, r25
    53be:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53c0:	fe 01       	movw	r30, r28
    53c2:	eb 58       	subi	r30, 0x8B	; 139
    53c4:	ff 4f       	sbci	r31, 0xFF	; 255
    53c6:	80 81       	ld	r24, Z
    53c8:	91 81       	ldd	r25, Z+1	; 0x01
    53ca:	00 97       	sbiw	r24, 0x00	; 0
    53cc:	d1 f6       	brne	.-76     	; 0x5382 <MyStory+0x2546>
    53ce:	27 c0       	rjmp	.+78     	; 0x541e <MyStory+0x25e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53d0:	8e 01       	movw	r16, r28
    53d2:	0b 58       	subi	r16, 0x8B	; 139
    53d4:	1f 4f       	sbci	r17, 0xFF	; 255
    53d6:	fe 01       	movw	r30, r28
    53d8:	e9 58       	subi	r30, 0x89	; 137
    53da:	ff 4f       	sbci	r31, 0xFF	; 255
    53dc:	60 81       	ld	r22, Z
    53de:	71 81       	ldd	r23, Z+1	; 0x01
    53e0:	82 81       	ldd	r24, Z+2	; 0x02
    53e2:	93 81       	ldd	r25, Z+3	; 0x03
    53e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    53e8:	dc 01       	movw	r26, r24
    53ea:	cb 01       	movw	r24, r22
    53ec:	f8 01       	movw	r30, r16
    53ee:	91 83       	std	Z+1, r25	; 0x01
    53f0:	80 83       	st	Z, r24
    53f2:	de 01       	movw	r26, r28
    53f4:	af 58       	subi	r26, 0x8F	; 143
    53f6:	bf 4f       	sbci	r27, 0xFF	; 255
    53f8:	fe 01       	movw	r30, r28
    53fa:	eb 58       	subi	r30, 0x8B	; 139
    53fc:	ff 4f       	sbci	r31, 0xFF	; 255
    53fe:	80 81       	ld	r24, Z
    5400:	91 81       	ldd	r25, Z+1	; 0x01
    5402:	8d 93       	st	X+, r24
    5404:	9c 93       	st	X, r25
    5406:	fe 01       	movw	r30, r28
    5408:	ef 58       	subi	r30, 0x8F	; 143
    540a:	ff 4f       	sbci	r31, 0xFF	; 255
    540c:	80 81       	ld	r24, Z
    540e:	91 81       	ldd	r25, Z+1	; 0x01
    5410:	01 97       	sbiw	r24, 0x01	; 1
    5412:	f1 f7       	brne	.-4      	; 0x5410 <MyStory+0x25d4>
    5414:	fe 01       	movw	r30, r28
    5416:	ef 58       	subi	r30, 0x8F	; 143
    5418:	ff 4f       	sbci	r31, 0xFF	; 255
    541a:	91 83       	std	Z+1, r25	; 0x01
    541c:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("graduated and ");
    541e:	8b e2       	ldi	r24, 0x2B	; 43
    5420:	92 e0       	ldi	r25, 0x02	; 2
    5422:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    5426:	82 e0       	ldi	r24, 0x02	; 2
    5428:	60 e0       	ldi	r22, 0x00	; 0
    542a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    542e:	fe 01       	movw	r30, r28
    5430:	e3 59       	subi	r30, 0x93	; 147
    5432:	ff 4f       	sbci	r31, 0xFF	; 255
    5434:	80 e0       	ldi	r24, 0x00	; 0
    5436:	90 e0       	ldi	r25, 0x00	; 0
    5438:	aa ef       	ldi	r26, 0xFA	; 250
    543a:	b3 e4       	ldi	r27, 0x43	; 67
    543c:	80 83       	st	Z, r24
    543e:	91 83       	std	Z+1, r25	; 0x01
    5440:	a2 83       	std	Z+2, r26	; 0x02
    5442:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5444:	8e 01       	movw	r16, r28
    5446:	07 59       	subi	r16, 0x97	; 151
    5448:	1f 4f       	sbci	r17, 0xFF	; 255
    544a:	fe 01       	movw	r30, r28
    544c:	e3 59       	subi	r30, 0x93	; 147
    544e:	ff 4f       	sbci	r31, 0xFF	; 255
    5450:	60 81       	ld	r22, Z
    5452:	71 81       	ldd	r23, Z+1	; 0x01
    5454:	82 81       	ldd	r24, Z+2	; 0x02
    5456:	93 81       	ldd	r25, Z+3	; 0x03
    5458:	20 e0       	ldi	r18, 0x00	; 0
    545a:	30 e0       	ldi	r19, 0x00	; 0
    545c:	4a ef       	ldi	r20, 0xFA	; 250
    545e:	54 e4       	ldi	r21, 0x44	; 68
    5460:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5464:	dc 01       	movw	r26, r24
    5466:	cb 01       	movw	r24, r22
    5468:	f8 01       	movw	r30, r16
    546a:	80 83       	st	Z, r24
    546c:	91 83       	std	Z+1, r25	; 0x01
    546e:	a2 83       	std	Z+2, r26	; 0x02
    5470:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5472:	fe 01       	movw	r30, r28
    5474:	e7 59       	subi	r30, 0x97	; 151
    5476:	ff 4f       	sbci	r31, 0xFF	; 255
    5478:	60 81       	ld	r22, Z
    547a:	71 81       	ldd	r23, Z+1	; 0x01
    547c:	82 81       	ldd	r24, Z+2	; 0x02
    547e:	93 81       	ldd	r25, Z+3	; 0x03
    5480:	20 e0       	ldi	r18, 0x00	; 0
    5482:	30 e0       	ldi	r19, 0x00	; 0
    5484:	40 e8       	ldi	r20, 0x80	; 128
    5486:	5f e3       	ldi	r21, 0x3F	; 63
    5488:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    548c:	88 23       	and	r24, r24
    548e:	44 f4       	brge	.+16     	; 0x54a0 <MyStory+0x2664>
		__ticks = 1;
    5490:	fe 01       	movw	r30, r28
    5492:	e9 59       	subi	r30, 0x99	; 153
    5494:	ff 4f       	sbci	r31, 0xFF	; 255
    5496:	81 e0       	ldi	r24, 0x01	; 1
    5498:	90 e0       	ldi	r25, 0x00	; 0
    549a:	91 83       	std	Z+1, r25	; 0x01
    549c:	80 83       	st	Z, r24
    549e:	64 c0       	rjmp	.+200    	; 0x5568 <MyStory+0x272c>
	else if (__tmp > 65535)
    54a0:	fe 01       	movw	r30, r28
    54a2:	e7 59       	subi	r30, 0x97	; 151
    54a4:	ff 4f       	sbci	r31, 0xFF	; 255
    54a6:	60 81       	ld	r22, Z
    54a8:	71 81       	ldd	r23, Z+1	; 0x01
    54aa:	82 81       	ldd	r24, Z+2	; 0x02
    54ac:	93 81       	ldd	r25, Z+3	; 0x03
    54ae:	20 e0       	ldi	r18, 0x00	; 0
    54b0:	3f ef       	ldi	r19, 0xFF	; 255
    54b2:	4f e7       	ldi	r20, 0x7F	; 127
    54b4:	57 e4       	ldi	r21, 0x47	; 71
    54b6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    54ba:	18 16       	cp	r1, r24
    54bc:	0c f0       	brlt	.+2      	; 0x54c0 <MyStory+0x2684>
    54be:	43 c0       	rjmp	.+134    	; 0x5546 <MyStory+0x270a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    54c0:	fe 01       	movw	r30, r28
    54c2:	e3 59       	subi	r30, 0x93	; 147
    54c4:	ff 4f       	sbci	r31, 0xFF	; 255
    54c6:	60 81       	ld	r22, Z
    54c8:	71 81       	ldd	r23, Z+1	; 0x01
    54ca:	82 81       	ldd	r24, Z+2	; 0x02
    54cc:	93 81       	ldd	r25, Z+3	; 0x03
    54ce:	20 e0       	ldi	r18, 0x00	; 0
    54d0:	30 e0       	ldi	r19, 0x00	; 0
    54d2:	40 e2       	ldi	r20, 0x20	; 32
    54d4:	51 e4       	ldi	r21, 0x41	; 65
    54d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    54da:	dc 01       	movw	r26, r24
    54dc:	cb 01       	movw	r24, r22
    54de:	8e 01       	movw	r16, r28
    54e0:	09 59       	subi	r16, 0x99	; 153
    54e2:	1f 4f       	sbci	r17, 0xFF	; 255
    54e4:	bc 01       	movw	r22, r24
    54e6:	cd 01       	movw	r24, r26
    54e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    54ec:	dc 01       	movw	r26, r24
    54ee:	cb 01       	movw	r24, r22
    54f0:	f8 01       	movw	r30, r16
    54f2:	91 83       	std	Z+1, r25	; 0x01
    54f4:	80 83       	st	Z, r24
    54f6:	1f c0       	rjmp	.+62     	; 0x5536 <MyStory+0x26fa>
    54f8:	fe 01       	movw	r30, r28
    54fa:	eb 59       	subi	r30, 0x9B	; 155
    54fc:	ff 4f       	sbci	r31, 0xFF	; 255
    54fe:	88 ec       	ldi	r24, 0xC8	; 200
    5500:	90 e0       	ldi	r25, 0x00	; 0
    5502:	91 83       	std	Z+1, r25	; 0x01
    5504:	80 83       	st	Z, r24
    5506:	fe 01       	movw	r30, r28
    5508:	eb 59       	subi	r30, 0x9B	; 155
    550a:	ff 4f       	sbci	r31, 0xFF	; 255
    550c:	80 81       	ld	r24, Z
    550e:	91 81       	ldd	r25, Z+1	; 0x01
    5510:	01 97       	sbiw	r24, 0x01	; 1
    5512:	f1 f7       	brne	.-4      	; 0x5510 <MyStory+0x26d4>
    5514:	fe 01       	movw	r30, r28
    5516:	eb 59       	subi	r30, 0x9B	; 155
    5518:	ff 4f       	sbci	r31, 0xFF	; 255
    551a:	91 83       	std	Z+1, r25	; 0x01
    551c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    551e:	de 01       	movw	r26, r28
    5520:	a9 59       	subi	r26, 0x99	; 153
    5522:	bf 4f       	sbci	r27, 0xFF	; 255
    5524:	fe 01       	movw	r30, r28
    5526:	e9 59       	subi	r30, 0x99	; 153
    5528:	ff 4f       	sbci	r31, 0xFF	; 255
    552a:	80 81       	ld	r24, Z
    552c:	91 81       	ldd	r25, Z+1	; 0x01
    552e:	01 97       	sbiw	r24, 0x01	; 1
    5530:	11 96       	adiw	r26, 0x01	; 1
    5532:	9c 93       	st	X, r25
    5534:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5536:	fe 01       	movw	r30, r28
    5538:	e9 59       	subi	r30, 0x99	; 153
    553a:	ff 4f       	sbci	r31, 0xFF	; 255
    553c:	80 81       	ld	r24, Z
    553e:	91 81       	ldd	r25, Z+1	; 0x01
    5540:	00 97       	sbiw	r24, 0x00	; 0
    5542:	d1 f6       	brne	.-76     	; 0x54f8 <MyStory+0x26bc>
    5544:	27 c0       	rjmp	.+78     	; 0x5594 <MyStory+0x2758>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5546:	8e 01       	movw	r16, r28
    5548:	09 59       	subi	r16, 0x99	; 153
    554a:	1f 4f       	sbci	r17, 0xFF	; 255
    554c:	fe 01       	movw	r30, r28
    554e:	e7 59       	subi	r30, 0x97	; 151
    5550:	ff 4f       	sbci	r31, 0xFF	; 255
    5552:	60 81       	ld	r22, Z
    5554:	71 81       	ldd	r23, Z+1	; 0x01
    5556:	82 81       	ldd	r24, Z+2	; 0x02
    5558:	93 81       	ldd	r25, Z+3	; 0x03
    555a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    555e:	dc 01       	movw	r26, r24
    5560:	cb 01       	movw	r24, r22
    5562:	f8 01       	movw	r30, r16
    5564:	91 83       	std	Z+1, r25	; 0x01
    5566:	80 83       	st	Z, r24
    5568:	de 01       	movw	r26, r28
    556a:	ad 59       	subi	r26, 0x9D	; 157
    556c:	bf 4f       	sbci	r27, 0xFF	; 255
    556e:	fe 01       	movw	r30, r28
    5570:	e9 59       	subi	r30, 0x99	; 153
    5572:	ff 4f       	sbci	r31, 0xFF	; 255
    5574:	80 81       	ld	r24, Z
    5576:	91 81       	ldd	r25, Z+1	; 0x01
    5578:	8d 93       	st	X+, r24
    557a:	9c 93       	st	X, r25
    557c:	fe 01       	movw	r30, r28
    557e:	ed 59       	subi	r30, 0x9D	; 157
    5580:	ff 4f       	sbci	r31, 0xFF	; 255
    5582:	80 81       	ld	r24, Z
    5584:	91 81       	ldd	r25, Z+1	; 0x01
    5586:	01 97       	sbiw	r24, 0x01	; 1
    5588:	f1 f7       	brne	.-4      	; 0x5586 <MyStory+0x274a>
    558a:	fe 01       	movw	r30, r28
    558c:	ed 59       	subi	r30, 0x9D	; 157
    558e:	ff 4f       	sbci	r31, 0xFF	; 255
    5590:	91 83       	std	Z+1, r25	; 0x01
    5592:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("meantime i'm  ");
    5594:	8a e3       	ldi	r24, 0x3A	; 58
    5596:	92 e0       	ldi	r25, 0x02	; 2
    5598:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(3,0);
    559c:	83 e0       	ldi	r24, 0x03	; 3
    559e:	60 e0       	ldi	r22, 0x00	; 0
    55a0:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    55a4:	fe 01       	movw	r30, r28
    55a6:	e1 5a       	subi	r30, 0xA1	; 161
    55a8:	ff 4f       	sbci	r31, 0xFF	; 255
    55aa:	80 e0       	ldi	r24, 0x00	; 0
    55ac:	90 e0       	ldi	r25, 0x00	; 0
    55ae:	aa ef       	ldi	r26, 0xFA	; 250
    55b0:	b3 e4       	ldi	r27, 0x43	; 67
    55b2:	80 83       	st	Z, r24
    55b4:	91 83       	std	Z+1, r25	; 0x01
    55b6:	a2 83       	std	Z+2, r26	; 0x02
    55b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    55ba:	8e 01       	movw	r16, r28
    55bc:	05 5a       	subi	r16, 0xA5	; 165
    55be:	1f 4f       	sbci	r17, 0xFF	; 255
    55c0:	fe 01       	movw	r30, r28
    55c2:	e1 5a       	subi	r30, 0xA1	; 161
    55c4:	ff 4f       	sbci	r31, 0xFF	; 255
    55c6:	60 81       	ld	r22, Z
    55c8:	71 81       	ldd	r23, Z+1	; 0x01
    55ca:	82 81       	ldd	r24, Z+2	; 0x02
    55cc:	93 81       	ldd	r25, Z+3	; 0x03
    55ce:	20 e0       	ldi	r18, 0x00	; 0
    55d0:	30 e0       	ldi	r19, 0x00	; 0
    55d2:	4a ef       	ldi	r20, 0xFA	; 250
    55d4:	54 e4       	ldi	r21, 0x44	; 68
    55d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    55da:	dc 01       	movw	r26, r24
    55dc:	cb 01       	movw	r24, r22
    55de:	f8 01       	movw	r30, r16
    55e0:	80 83       	st	Z, r24
    55e2:	91 83       	std	Z+1, r25	; 0x01
    55e4:	a2 83       	std	Z+2, r26	; 0x02
    55e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    55e8:	fe 01       	movw	r30, r28
    55ea:	e5 5a       	subi	r30, 0xA5	; 165
    55ec:	ff 4f       	sbci	r31, 0xFF	; 255
    55ee:	60 81       	ld	r22, Z
    55f0:	71 81       	ldd	r23, Z+1	; 0x01
    55f2:	82 81       	ldd	r24, Z+2	; 0x02
    55f4:	93 81       	ldd	r25, Z+3	; 0x03
    55f6:	20 e0       	ldi	r18, 0x00	; 0
    55f8:	30 e0       	ldi	r19, 0x00	; 0
    55fa:	40 e8       	ldi	r20, 0x80	; 128
    55fc:	5f e3       	ldi	r21, 0x3F	; 63
    55fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5602:	88 23       	and	r24, r24
    5604:	44 f4       	brge	.+16     	; 0x5616 <MyStory+0x27da>
		__ticks = 1;
    5606:	fe 01       	movw	r30, r28
    5608:	e7 5a       	subi	r30, 0xA7	; 167
    560a:	ff 4f       	sbci	r31, 0xFF	; 255
    560c:	81 e0       	ldi	r24, 0x01	; 1
    560e:	90 e0       	ldi	r25, 0x00	; 0
    5610:	91 83       	std	Z+1, r25	; 0x01
    5612:	80 83       	st	Z, r24
    5614:	64 c0       	rjmp	.+200    	; 0x56de <MyStory+0x28a2>
	else if (__tmp > 65535)
    5616:	fe 01       	movw	r30, r28
    5618:	e5 5a       	subi	r30, 0xA5	; 165
    561a:	ff 4f       	sbci	r31, 0xFF	; 255
    561c:	60 81       	ld	r22, Z
    561e:	71 81       	ldd	r23, Z+1	; 0x01
    5620:	82 81       	ldd	r24, Z+2	; 0x02
    5622:	93 81       	ldd	r25, Z+3	; 0x03
    5624:	20 e0       	ldi	r18, 0x00	; 0
    5626:	3f ef       	ldi	r19, 0xFF	; 255
    5628:	4f e7       	ldi	r20, 0x7F	; 127
    562a:	57 e4       	ldi	r21, 0x47	; 71
    562c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5630:	18 16       	cp	r1, r24
    5632:	0c f0       	brlt	.+2      	; 0x5636 <MyStory+0x27fa>
    5634:	43 c0       	rjmp	.+134    	; 0x56bc <MyStory+0x2880>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5636:	fe 01       	movw	r30, r28
    5638:	e1 5a       	subi	r30, 0xA1	; 161
    563a:	ff 4f       	sbci	r31, 0xFF	; 255
    563c:	60 81       	ld	r22, Z
    563e:	71 81       	ldd	r23, Z+1	; 0x01
    5640:	82 81       	ldd	r24, Z+2	; 0x02
    5642:	93 81       	ldd	r25, Z+3	; 0x03
    5644:	20 e0       	ldi	r18, 0x00	; 0
    5646:	30 e0       	ldi	r19, 0x00	; 0
    5648:	40 e2       	ldi	r20, 0x20	; 32
    564a:	51 e4       	ldi	r21, 0x41	; 65
    564c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5650:	dc 01       	movw	r26, r24
    5652:	cb 01       	movw	r24, r22
    5654:	8e 01       	movw	r16, r28
    5656:	07 5a       	subi	r16, 0xA7	; 167
    5658:	1f 4f       	sbci	r17, 0xFF	; 255
    565a:	bc 01       	movw	r22, r24
    565c:	cd 01       	movw	r24, r26
    565e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5662:	dc 01       	movw	r26, r24
    5664:	cb 01       	movw	r24, r22
    5666:	f8 01       	movw	r30, r16
    5668:	91 83       	std	Z+1, r25	; 0x01
    566a:	80 83       	st	Z, r24
    566c:	1f c0       	rjmp	.+62     	; 0x56ac <MyStory+0x2870>
    566e:	fe 01       	movw	r30, r28
    5670:	e9 5a       	subi	r30, 0xA9	; 169
    5672:	ff 4f       	sbci	r31, 0xFF	; 255
    5674:	88 ec       	ldi	r24, 0xC8	; 200
    5676:	90 e0       	ldi	r25, 0x00	; 0
    5678:	91 83       	std	Z+1, r25	; 0x01
    567a:	80 83       	st	Z, r24
    567c:	fe 01       	movw	r30, r28
    567e:	e9 5a       	subi	r30, 0xA9	; 169
    5680:	ff 4f       	sbci	r31, 0xFF	; 255
    5682:	80 81       	ld	r24, Z
    5684:	91 81       	ldd	r25, Z+1	; 0x01
    5686:	01 97       	sbiw	r24, 0x01	; 1
    5688:	f1 f7       	brne	.-4      	; 0x5686 <MyStory+0x284a>
    568a:	fe 01       	movw	r30, r28
    568c:	e9 5a       	subi	r30, 0xA9	; 169
    568e:	ff 4f       	sbci	r31, 0xFF	; 255
    5690:	91 83       	std	Z+1, r25	; 0x01
    5692:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5694:	de 01       	movw	r26, r28
    5696:	a7 5a       	subi	r26, 0xA7	; 167
    5698:	bf 4f       	sbci	r27, 0xFF	; 255
    569a:	fe 01       	movw	r30, r28
    569c:	e7 5a       	subi	r30, 0xA7	; 167
    569e:	ff 4f       	sbci	r31, 0xFF	; 255
    56a0:	80 81       	ld	r24, Z
    56a2:	91 81       	ldd	r25, Z+1	; 0x01
    56a4:	01 97       	sbiw	r24, 0x01	; 1
    56a6:	11 96       	adiw	r26, 0x01	; 1
    56a8:	9c 93       	st	X, r25
    56aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    56ac:	fe 01       	movw	r30, r28
    56ae:	e7 5a       	subi	r30, 0xA7	; 167
    56b0:	ff 4f       	sbci	r31, 0xFF	; 255
    56b2:	80 81       	ld	r24, Z
    56b4:	91 81       	ldd	r25, Z+1	; 0x01
    56b6:	00 97       	sbiw	r24, 0x00	; 0
    56b8:	d1 f6       	brne	.-76     	; 0x566e <MyStory+0x2832>
    56ba:	27 c0       	rjmp	.+78     	; 0x570a <MyStory+0x28ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    56bc:	8e 01       	movw	r16, r28
    56be:	07 5a       	subi	r16, 0xA7	; 167
    56c0:	1f 4f       	sbci	r17, 0xFF	; 255
    56c2:	fe 01       	movw	r30, r28
    56c4:	e5 5a       	subi	r30, 0xA5	; 165
    56c6:	ff 4f       	sbci	r31, 0xFF	; 255
    56c8:	60 81       	ld	r22, Z
    56ca:	71 81       	ldd	r23, Z+1	; 0x01
    56cc:	82 81       	ldd	r24, Z+2	; 0x02
    56ce:	93 81       	ldd	r25, Z+3	; 0x03
    56d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    56d4:	dc 01       	movw	r26, r24
    56d6:	cb 01       	movw	r24, r22
    56d8:	f8 01       	movw	r30, r16
    56da:	91 83       	std	Z+1, r25	; 0x01
    56dc:	80 83       	st	Z, r24
    56de:	de 01       	movw	r26, r28
    56e0:	ab 5a       	subi	r26, 0xAB	; 171
    56e2:	bf 4f       	sbci	r27, 0xFF	; 255
    56e4:	fe 01       	movw	r30, r28
    56e6:	e7 5a       	subi	r30, 0xA7	; 167
    56e8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ea:	80 81       	ld	r24, Z
    56ec:	91 81       	ldd	r25, Z+1	; 0x01
    56ee:	8d 93       	st	X+, r24
    56f0:	9c 93       	st	X, r25
    56f2:	fe 01       	movw	r30, r28
    56f4:	eb 5a       	subi	r30, 0xAB	; 171
    56f6:	ff 4f       	sbci	r31, 0xFF	; 255
    56f8:	80 81       	ld	r24, Z
    56fa:	91 81       	ldd	r25, Z+1	; 0x01
    56fc:	01 97       	sbiw	r24, 0x01	; 1
    56fe:	f1 f7       	brne	.-4      	; 0x56fc <MyStory+0x28c0>
    5700:	fe 01       	movw	r30, r28
    5702:	eb 5a       	subi	r30, 0xAB	; 171
    5704:	ff 4f       	sbci	r31, 0xFF	; 255
    5706:	91 83       	std	Z+1, r25	; 0x01
    5708:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_WriteString("a trainee at NTI ");
    570a:	89 e4       	ldi	r24, 0x49	; 73
    570c:	92 e0       	ldi	r25, 0x02	; 2
    570e:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    5712:	fe 01       	movw	r30, r28
    5714:	ef 5a       	subi	r30, 0xAF	; 175
    5716:	ff 4f       	sbci	r31, 0xFF	; 255
    5718:	80 e0       	ldi	r24, 0x00	; 0
    571a:	90 e0       	ldi	r25, 0x00	; 0
    571c:	aa e7       	ldi	r26, 0x7A	; 122
    571e:	b4 e4       	ldi	r27, 0x44	; 68
    5720:	80 83       	st	Z, r24
    5722:	91 83       	std	Z+1, r25	; 0x01
    5724:	a2 83       	std	Z+2, r26	; 0x02
    5726:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5728:	8e 01       	movw	r16, r28
    572a:	03 5b       	subi	r16, 0xB3	; 179
    572c:	1f 4f       	sbci	r17, 0xFF	; 255
    572e:	fe 01       	movw	r30, r28
    5730:	ef 5a       	subi	r30, 0xAF	; 175
    5732:	ff 4f       	sbci	r31, 0xFF	; 255
    5734:	60 81       	ld	r22, Z
    5736:	71 81       	ldd	r23, Z+1	; 0x01
    5738:	82 81       	ldd	r24, Z+2	; 0x02
    573a:	93 81       	ldd	r25, Z+3	; 0x03
    573c:	20 e0       	ldi	r18, 0x00	; 0
    573e:	30 e0       	ldi	r19, 0x00	; 0
    5740:	4a ef       	ldi	r20, 0xFA	; 250
    5742:	54 e4       	ldi	r21, 0x44	; 68
    5744:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5748:	dc 01       	movw	r26, r24
    574a:	cb 01       	movw	r24, r22
    574c:	f8 01       	movw	r30, r16
    574e:	80 83       	st	Z, r24
    5750:	91 83       	std	Z+1, r25	; 0x01
    5752:	a2 83       	std	Z+2, r26	; 0x02
    5754:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5756:	fe 01       	movw	r30, r28
    5758:	e3 5b       	subi	r30, 0xB3	; 179
    575a:	ff 4f       	sbci	r31, 0xFF	; 255
    575c:	60 81       	ld	r22, Z
    575e:	71 81       	ldd	r23, Z+1	; 0x01
    5760:	82 81       	ldd	r24, Z+2	; 0x02
    5762:	93 81       	ldd	r25, Z+3	; 0x03
    5764:	20 e0       	ldi	r18, 0x00	; 0
    5766:	30 e0       	ldi	r19, 0x00	; 0
    5768:	40 e8       	ldi	r20, 0x80	; 128
    576a:	5f e3       	ldi	r21, 0x3F	; 63
    576c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5770:	88 23       	and	r24, r24
    5772:	44 f4       	brge	.+16     	; 0x5784 <MyStory+0x2948>
		__ticks = 1;
    5774:	fe 01       	movw	r30, r28
    5776:	e5 5b       	subi	r30, 0xB5	; 181
    5778:	ff 4f       	sbci	r31, 0xFF	; 255
    577a:	81 e0       	ldi	r24, 0x01	; 1
    577c:	90 e0       	ldi	r25, 0x00	; 0
    577e:	91 83       	std	Z+1, r25	; 0x01
    5780:	80 83       	st	Z, r24
    5782:	64 c0       	rjmp	.+200    	; 0x584c <MyStory+0x2a10>
	else if (__tmp > 65535)
    5784:	fe 01       	movw	r30, r28
    5786:	e3 5b       	subi	r30, 0xB3	; 179
    5788:	ff 4f       	sbci	r31, 0xFF	; 255
    578a:	60 81       	ld	r22, Z
    578c:	71 81       	ldd	r23, Z+1	; 0x01
    578e:	82 81       	ldd	r24, Z+2	; 0x02
    5790:	93 81       	ldd	r25, Z+3	; 0x03
    5792:	20 e0       	ldi	r18, 0x00	; 0
    5794:	3f ef       	ldi	r19, 0xFF	; 255
    5796:	4f e7       	ldi	r20, 0x7F	; 127
    5798:	57 e4       	ldi	r21, 0x47	; 71
    579a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    579e:	18 16       	cp	r1, r24
    57a0:	0c f0       	brlt	.+2      	; 0x57a4 <MyStory+0x2968>
    57a2:	43 c0       	rjmp	.+134    	; 0x582a <MyStory+0x29ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    57a4:	fe 01       	movw	r30, r28
    57a6:	ef 5a       	subi	r30, 0xAF	; 175
    57a8:	ff 4f       	sbci	r31, 0xFF	; 255
    57aa:	60 81       	ld	r22, Z
    57ac:	71 81       	ldd	r23, Z+1	; 0x01
    57ae:	82 81       	ldd	r24, Z+2	; 0x02
    57b0:	93 81       	ldd	r25, Z+3	; 0x03
    57b2:	20 e0       	ldi	r18, 0x00	; 0
    57b4:	30 e0       	ldi	r19, 0x00	; 0
    57b6:	40 e2       	ldi	r20, 0x20	; 32
    57b8:	51 e4       	ldi	r21, 0x41	; 65
    57ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    57be:	dc 01       	movw	r26, r24
    57c0:	cb 01       	movw	r24, r22
    57c2:	8e 01       	movw	r16, r28
    57c4:	05 5b       	subi	r16, 0xB5	; 181
    57c6:	1f 4f       	sbci	r17, 0xFF	; 255
    57c8:	bc 01       	movw	r22, r24
    57ca:	cd 01       	movw	r24, r26
    57cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    57d0:	dc 01       	movw	r26, r24
    57d2:	cb 01       	movw	r24, r22
    57d4:	f8 01       	movw	r30, r16
    57d6:	91 83       	std	Z+1, r25	; 0x01
    57d8:	80 83       	st	Z, r24
    57da:	1f c0       	rjmp	.+62     	; 0x581a <MyStory+0x29de>
    57dc:	fe 01       	movw	r30, r28
    57de:	e7 5b       	subi	r30, 0xB7	; 183
    57e0:	ff 4f       	sbci	r31, 0xFF	; 255
    57e2:	88 ec       	ldi	r24, 0xC8	; 200
    57e4:	90 e0       	ldi	r25, 0x00	; 0
    57e6:	91 83       	std	Z+1, r25	; 0x01
    57e8:	80 83       	st	Z, r24
    57ea:	fe 01       	movw	r30, r28
    57ec:	e7 5b       	subi	r30, 0xB7	; 183
    57ee:	ff 4f       	sbci	r31, 0xFF	; 255
    57f0:	80 81       	ld	r24, Z
    57f2:	91 81       	ldd	r25, Z+1	; 0x01
    57f4:	01 97       	sbiw	r24, 0x01	; 1
    57f6:	f1 f7       	brne	.-4      	; 0x57f4 <MyStory+0x29b8>
    57f8:	fe 01       	movw	r30, r28
    57fa:	e7 5b       	subi	r30, 0xB7	; 183
    57fc:	ff 4f       	sbci	r31, 0xFF	; 255
    57fe:	91 83       	std	Z+1, r25	; 0x01
    5800:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5802:	de 01       	movw	r26, r28
    5804:	a5 5b       	subi	r26, 0xB5	; 181
    5806:	bf 4f       	sbci	r27, 0xFF	; 255
    5808:	fe 01       	movw	r30, r28
    580a:	e5 5b       	subi	r30, 0xB5	; 181
    580c:	ff 4f       	sbci	r31, 0xFF	; 255
    580e:	80 81       	ld	r24, Z
    5810:	91 81       	ldd	r25, Z+1	; 0x01
    5812:	01 97       	sbiw	r24, 0x01	; 1
    5814:	11 96       	adiw	r26, 0x01	; 1
    5816:	9c 93       	st	X, r25
    5818:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    581a:	fe 01       	movw	r30, r28
    581c:	e5 5b       	subi	r30, 0xB5	; 181
    581e:	ff 4f       	sbci	r31, 0xFF	; 255
    5820:	80 81       	ld	r24, Z
    5822:	91 81       	ldd	r25, Z+1	; 0x01
    5824:	00 97       	sbiw	r24, 0x00	; 0
    5826:	d1 f6       	brne	.-76     	; 0x57dc <MyStory+0x29a0>
    5828:	27 c0       	rjmp	.+78     	; 0x5878 <MyStory+0x2a3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    582a:	8e 01       	movw	r16, r28
    582c:	05 5b       	subi	r16, 0xB5	; 181
    582e:	1f 4f       	sbci	r17, 0xFF	; 255
    5830:	fe 01       	movw	r30, r28
    5832:	e3 5b       	subi	r30, 0xB3	; 179
    5834:	ff 4f       	sbci	r31, 0xFF	; 255
    5836:	60 81       	ld	r22, Z
    5838:	71 81       	ldd	r23, Z+1	; 0x01
    583a:	82 81       	ldd	r24, Z+2	; 0x02
    583c:	93 81       	ldd	r25, Z+3	; 0x03
    583e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5842:	dc 01       	movw	r26, r24
    5844:	cb 01       	movw	r24, r22
    5846:	f8 01       	movw	r30, r16
    5848:	91 83       	std	Z+1, r25	; 0x01
    584a:	80 83       	st	Z, r24
    584c:	de 01       	movw	r26, r28
    584e:	a9 5b       	subi	r26, 0xB9	; 185
    5850:	bf 4f       	sbci	r27, 0xFF	; 255
    5852:	fe 01       	movw	r30, r28
    5854:	e5 5b       	subi	r30, 0xB5	; 181
    5856:	ff 4f       	sbci	r31, 0xFF	; 255
    5858:	80 81       	ld	r24, Z
    585a:	91 81       	ldd	r25, Z+1	; 0x01
    585c:	8d 93       	st	X+, r24
    585e:	9c 93       	st	X, r25
    5860:	fe 01       	movw	r30, r28
    5862:	e9 5b       	subi	r30, 0xB9	; 185
    5864:	ff 4f       	sbci	r31, 0xFF	; 255
    5866:	80 81       	ld	r24, Z
    5868:	91 81       	ldd	r25, Z+1	; 0x01
    586a:	01 97       	sbiw	r24, 0x01	; 1
    586c:	f1 f7       	brne	.-4      	; 0x586a <MyStory+0x2a2e>
    586e:	fe 01       	movw	r30, r28
    5870:	e9 5b       	subi	r30, 0xB9	; 185
    5872:	ff 4f       	sbci	r31, 0xFF	; 255
    5874:	91 83       	std	Z+1, r25	; 0x01
    5876:	80 83       	st	Z, r24

	_delay_ms(1000);
	LCD_Clear();	//clear
    5878:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(0,0);
    587c:	80 e0       	ldi	r24, 0x00	; 0
    587e:	60 e0       	ldi	r22, 0x00	; 0
    5880:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    5884:	fe 01       	movw	r30, r28
    5886:	ed 5b       	subi	r30, 0xBD	; 189
    5888:	ff 4f       	sbci	r31, 0xFF	; 255
    588a:	80 e0       	ldi	r24, 0x00	; 0
    588c:	90 e0       	ldi	r25, 0x00	; 0
    588e:	aa ef       	ldi	r26, 0xFA	; 250
    5890:	b3 e4       	ldi	r27, 0x43	; 67
    5892:	80 83       	st	Z, r24
    5894:	91 83       	std	Z+1, r25	; 0x01
    5896:	a2 83       	std	Z+2, r26	; 0x02
    5898:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    589a:	8e 01       	movw	r16, r28
    589c:	01 5c       	subi	r16, 0xC1	; 193
    589e:	1f 4f       	sbci	r17, 0xFF	; 255
    58a0:	fe 01       	movw	r30, r28
    58a2:	ed 5b       	subi	r30, 0xBD	; 189
    58a4:	ff 4f       	sbci	r31, 0xFF	; 255
    58a6:	60 81       	ld	r22, Z
    58a8:	71 81       	ldd	r23, Z+1	; 0x01
    58aa:	82 81       	ldd	r24, Z+2	; 0x02
    58ac:	93 81       	ldd	r25, Z+3	; 0x03
    58ae:	20 e0       	ldi	r18, 0x00	; 0
    58b0:	30 e0       	ldi	r19, 0x00	; 0
    58b2:	4a ef       	ldi	r20, 0xFA	; 250
    58b4:	54 e4       	ldi	r21, 0x44	; 68
    58b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    58ba:	dc 01       	movw	r26, r24
    58bc:	cb 01       	movw	r24, r22
    58be:	f8 01       	movw	r30, r16
    58c0:	80 83       	st	Z, r24
    58c2:	91 83       	std	Z+1, r25	; 0x01
    58c4:	a2 83       	std	Z+2, r26	; 0x02
    58c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    58c8:	fe 01       	movw	r30, r28
    58ca:	ff 96       	adiw	r30, 0x3f	; 63
    58cc:	60 81       	ld	r22, Z
    58ce:	71 81       	ldd	r23, Z+1	; 0x01
    58d0:	82 81       	ldd	r24, Z+2	; 0x02
    58d2:	93 81       	ldd	r25, Z+3	; 0x03
    58d4:	20 e0       	ldi	r18, 0x00	; 0
    58d6:	30 e0       	ldi	r19, 0x00	; 0
    58d8:	40 e8       	ldi	r20, 0x80	; 128
    58da:	5f e3       	ldi	r21, 0x3F	; 63
    58dc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    58e0:	88 23       	and	r24, r24
    58e2:	2c f4       	brge	.+10     	; 0x58ee <MyStory+0x2ab2>
		__ticks = 1;
    58e4:	81 e0       	ldi	r24, 0x01	; 1
    58e6:	90 e0       	ldi	r25, 0x00	; 0
    58e8:	9e af       	std	Y+62, r25	; 0x3e
    58ea:	8d af       	std	Y+61, r24	; 0x3d
    58ec:	46 c0       	rjmp	.+140    	; 0x597a <MyStory+0x2b3e>
	else if (__tmp > 65535)
    58ee:	fe 01       	movw	r30, r28
    58f0:	ff 96       	adiw	r30, 0x3f	; 63
    58f2:	60 81       	ld	r22, Z
    58f4:	71 81       	ldd	r23, Z+1	; 0x01
    58f6:	82 81       	ldd	r24, Z+2	; 0x02
    58f8:	93 81       	ldd	r25, Z+3	; 0x03
    58fa:	20 e0       	ldi	r18, 0x00	; 0
    58fc:	3f ef       	ldi	r19, 0xFF	; 255
    58fe:	4f e7       	ldi	r20, 0x7F	; 127
    5900:	57 e4       	ldi	r21, 0x47	; 71
    5902:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5906:	18 16       	cp	r1, r24
    5908:	64 f5       	brge	.+88     	; 0x5962 <MyStory+0x2b26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    590a:	fe 01       	movw	r30, r28
    590c:	ed 5b       	subi	r30, 0xBD	; 189
    590e:	ff 4f       	sbci	r31, 0xFF	; 255
    5910:	60 81       	ld	r22, Z
    5912:	71 81       	ldd	r23, Z+1	; 0x01
    5914:	82 81       	ldd	r24, Z+2	; 0x02
    5916:	93 81       	ldd	r25, Z+3	; 0x03
    5918:	20 e0       	ldi	r18, 0x00	; 0
    591a:	30 e0       	ldi	r19, 0x00	; 0
    591c:	40 e2       	ldi	r20, 0x20	; 32
    591e:	51 e4       	ldi	r21, 0x41	; 65
    5920:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5924:	dc 01       	movw	r26, r24
    5926:	cb 01       	movw	r24, r22
    5928:	bc 01       	movw	r22, r24
    592a:	cd 01       	movw	r24, r26
    592c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5930:	dc 01       	movw	r26, r24
    5932:	cb 01       	movw	r24, r22
    5934:	9e af       	std	Y+62, r25	; 0x3e
    5936:	8d af       	std	Y+61, r24	; 0x3d
    5938:	0f c0       	rjmp	.+30     	; 0x5958 <MyStory+0x2b1c>
    593a:	88 ec       	ldi	r24, 0xC8	; 200
    593c:	90 e0       	ldi	r25, 0x00	; 0
    593e:	9c af       	std	Y+60, r25	; 0x3c
    5940:	8b af       	std	Y+59, r24	; 0x3b
    5942:	8b ad       	ldd	r24, Y+59	; 0x3b
    5944:	9c ad       	ldd	r25, Y+60	; 0x3c
    5946:	01 97       	sbiw	r24, 0x01	; 1
    5948:	f1 f7       	brne	.-4      	; 0x5946 <MyStory+0x2b0a>
    594a:	9c af       	std	Y+60, r25	; 0x3c
    594c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    594e:	8d ad       	ldd	r24, Y+61	; 0x3d
    5950:	9e ad       	ldd	r25, Y+62	; 0x3e
    5952:	01 97       	sbiw	r24, 0x01	; 1
    5954:	9e af       	std	Y+62, r25	; 0x3e
    5956:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5958:	8d ad       	ldd	r24, Y+61	; 0x3d
    595a:	9e ad       	ldd	r25, Y+62	; 0x3e
    595c:	00 97       	sbiw	r24, 0x00	; 0
    595e:	69 f7       	brne	.-38     	; 0x593a <MyStory+0x2afe>
    5960:	16 c0       	rjmp	.+44     	; 0x598e <MyStory+0x2b52>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5962:	fe 01       	movw	r30, r28
    5964:	ff 96       	adiw	r30, 0x3f	; 63
    5966:	60 81       	ld	r22, Z
    5968:	71 81       	ldd	r23, Z+1	; 0x01
    596a:	82 81       	ldd	r24, Z+2	; 0x02
    596c:	93 81       	ldd	r25, Z+3	; 0x03
    596e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5972:	dc 01       	movw	r26, r24
    5974:	cb 01       	movw	r24, r22
    5976:	9e af       	std	Y+62, r25	; 0x3e
    5978:	8d af       	std	Y+61, r24	; 0x3d
    597a:	8d ad       	ldd	r24, Y+61	; 0x3d
    597c:	9e ad       	ldd	r25, Y+62	; 0x3e
    597e:	9a af       	std	Y+58, r25	; 0x3a
    5980:	89 af       	std	Y+57, r24	; 0x39
    5982:	89 ad       	ldd	r24, Y+57	; 0x39
    5984:	9a ad       	ldd	r25, Y+58	; 0x3a
    5986:	01 97       	sbiw	r24, 0x01	; 1
    5988:	f1 f7       	brne	.-4      	; 0x5986 <MyStory+0x2b4a>
    598a:	9a af       	std	Y+58, r25	; 0x3a
    598c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
	LCD_WriteString("4 months smart ");
    598e:	8b e5       	ldi	r24, 0x5B	; 91
    5990:	92 e0       	ldi	r25, 0x02	; 2
    5992:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(1,0);
    5996:	81 e0       	ldi	r24, 0x01	; 1
    5998:	60 e0       	ldi	r22, 0x00	; 0
    599a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    599e:	80 e0       	ldi	r24, 0x00	; 0
    59a0:	90 e0       	ldi	r25, 0x00	; 0
    59a2:	aa ef       	ldi	r26, 0xFA	; 250
    59a4:	b3 e4       	ldi	r27, 0x43	; 67
    59a6:	8d ab       	std	Y+53, r24	; 0x35
    59a8:	9e ab       	std	Y+54, r25	; 0x36
    59aa:	af ab       	std	Y+55, r26	; 0x37
    59ac:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    59ae:	6d a9       	ldd	r22, Y+53	; 0x35
    59b0:	7e a9       	ldd	r23, Y+54	; 0x36
    59b2:	8f a9       	ldd	r24, Y+55	; 0x37
    59b4:	98 ad       	ldd	r25, Y+56	; 0x38
    59b6:	20 e0       	ldi	r18, 0x00	; 0
    59b8:	30 e0       	ldi	r19, 0x00	; 0
    59ba:	4a ef       	ldi	r20, 0xFA	; 250
    59bc:	54 e4       	ldi	r21, 0x44	; 68
    59be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    59c2:	dc 01       	movw	r26, r24
    59c4:	cb 01       	movw	r24, r22
    59c6:	89 ab       	std	Y+49, r24	; 0x31
    59c8:	9a ab       	std	Y+50, r25	; 0x32
    59ca:	ab ab       	std	Y+51, r26	; 0x33
    59cc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    59ce:	69 a9       	ldd	r22, Y+49	; 0x31
    59d0:	7a a9       	ldd	r23, Y+50	; 0x32
    59d2:	8b a9       	ldd	r24, Y+51	; 0x33
    59d4:	9c a9       	ldd	r25, Y+52	; 0x34
    59d6:	20 e0       	ldi	r18, 0x00	; 0
    59d8:	30 e0       	ldi	r19, 0x00	; 0
    59da:	40 e8       	ldi	r20, 0x80	; 128
    59dc:	5f e3       	ldi	r21, 0x3F	; 63
    59de:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    59e2:	88 23       	and	r24, r24
    59e4:	2c f4       	brge	.+10     	; 0x59f0 <MyStory+0x2bb4>
		__ticks = 1;
    59e6:	81 e0       	ldi	r24, 0x01	; 1
    59e8:	90 e0       	ldi	r25, 0x00	; 0
    59ea:	98 ab       	std	Y+48, r25	; 0x30
    59ec:	8f a7       	std	Y+47, r24	; 0x2f
    59ee:	3f c0       	rjmp	.+126    	; 0x5a6e <MyStory+0x2c32>
	else if (__tmp > 65535)
    59f0:	69 a9       	ldd	r22, Y+49	; 0x31
    59f2:	7a a9       	ldd	r23, Y+50	; 0x32
    59f4:	8b a9       	ldd	r24, Y+51	; 0x33
    59f6:	9c a9       	ldd	r25, Y+52	; 0x34
    59f8:	20 e0       	ldi	r18, 0x00	; 0
    59fa:	3f ef       	ldi	r19, 0xFF	; 255
    59fc:	4f e7       	ldi	r20, 0x7F	; 127
    59fe:	57 e4       	ldi	r21, 0x47	; 71
    5a00:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5a04:	18 16       	cp	r1, r24
    5a06:	4c f5       	brge	.+82     	; 0x5a5a <MyStory+0x2c1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a08:	6d a9       	ldd	r22, Y+53	; 0x35
    5a0a:	7e a9       	ldd	r23, Y+54	; 0x36
    5a0c:	8f a9       	ldd	r24, Y+55	; 0x37
    5a0e:	98 ad       	ldd	r25, Y+56	; 0x38
    5a10:	20 e0       	ldi	r18, 0x00	; 0
    5a12:	30 e0       	ldi	r19, 0x00	; 0
    5a14:	40 e2       	ldi	r20, 0x20	; 32
    5a16:	51 e4       	ldi	r21, 0x41	; 65
    5a18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5a1c:	dc 01       	movw	r26, r24
    5a1e:	cb 01       	movw	r24, r22
    5a20:	bc 01       	movw	r22, r24
    5a22:	cd 01       	movw	r24, r26
    5a24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a28:	dc 01       	movw	r26, r24
    5a2a:	cb 01       	movw	r24, r22
    5a2c:	98 ab       	std	Y+48, r25	; 0x30
    5a2e:	8f a7       	std	Y+47, r24	; 0x2f
    5a30:	0f c0       	rjmp	.+30     	; 0x5a50 <MyStory+0x2c14>
    5a32:	88 ec       	ldi	r24, 0xC8	; 200
    5a34:	90 e0       	ldi	r25, 0x00	; 0
    5a36:	9e a7       	std	Y+46, r25	; 0x2e
    5a38:	8d a7       	std	Y+45, r24	; 0x2d
    5a3a:	8d a5       	ldd	r24, Y+45	; 0x2d
    5a3c:	9e a5       	ldd	r25, Y+46	; 0x2e
    5a3e:	01 97       	sbiw	r24, 0x01	; 1
    5a40:	f1 f7       	brne	.-4      	; 0x5a3e <MyStory+0x2c02>
    5a42:	9e a7       	std	Y+46, r25	; 0x2e
    5a44:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a46:	8f a5       	ldd	r24, Y+47	; 0x2f
    5a48:	98 a9       	ldd	r25, Y+48	; 0x30
    5a4a:	01 97       	sbiw	r24, 0x01	; 1
    5a4c:	98 ab       	std	Y+48, r25	; 0x30
    5a4e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5a50:	8f a5       	ldd	r24, Y+47	; 0x2f
    5a52:	98 a9       	ldd	r25, Y+48	; 0x30
    5a54:	00 97       	sbiw	r24, 0x00	; 0
    5a56:	69 f7       	brne	.-38     	; 0x5a32 <MyStory+0x2bf6>
    5a58:	14 c0       	rjmp	.+40     	; 0x5a82 <MyStory+0x2c46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a5a:	69 a9       	ldd	r22, Y+49	; 0x31
    5a5c:	7a a9       	ldd	r23, Y+50	; 0x32
    5a5e:	8b a9       	ldd	r24, Y+51	; 0x33
    5a60:	9c a9       	ldd	r25, Y+52	; 0x34
    5a62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a66:	dc 01       	movw	r26, r24
    5a68:	cb 01       	movw	r24, r22
    5a6a:	98 ab       	std	Y+48, r25	; 0x30
    5a6c:	8f a7       	std	Y+47, r24	; 0x2f
    5a6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    5a70:	98 a9       	ldd	r25, Y+48	; 0x30
    5a72:	9c a7       	std	Y+44, r25	; 0x2c
    5a74:	8b a7       	std	Y+43, r24	; 0x2b
    5a76:	8b a5       	ldd	r24, Y+43	; 0x2b
    5a78:	9c a5       	ldd	r25, Y+44	; 0x2c
    5a7a:	01 97       	sbiw	r24, 0x01	; 1
    5a7c:	f1 f7       	brne	.-4      	; 0x5a7a <MyStory+0x2c3e>
    5a7e:	9c a7       	std	Y+44, r25	; 0x2c
    5a80:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(500);
	LCD_WriteString("village branch ");
    5a82:	8b e6       	ldi	r24, 0x6B	; 107
    5a84:	92 e0       	ldi	r25, 0x02	; 2
    5a86:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>

	LCD_GoTo(2,0);
    5a8a:	82 e0       	ldi	r24, 0x02	; 2
    5a8c:	60 e0       	ldi	r22, 0x00	; 0
    5a8e:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    5a92:	80 e0       	ldi	r24, 0x00	; 0
    5a94:	90 e0       	ldi	r25, 0x00	; 0
    5a96:	aa ef       	ldi	r26, 0xFA	; 250
    5a98:	b3 e4       	ldi	r27, 0x43	; 67
    5a9a:	8f a3       	std	Y+39, r24	; 0x27
    5a9c:	98 a7       	std	Y+40, r25	; 0x28
    5a9e:	a9 a7       	std	Y+41, r26	; 0x29
    5aa0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5aa2:	6f a1       	ldd	r22, Y+39	; 0x27
    5aa4:	78 a5       	ldd	r23, Y+40	; 0x28
    5aa6:	89 a5       	ldd	r24, Y+41	; 0x29
    5aa8:	9a a5       	ldd	r25, Y+42	; 0x2a
    5aaa:	20 e0       	ldi	r18, 0x00	; 0
    5aac:	30 e0       	ldi	r19, 0x00	; 0
    5aae:	4a ef       	ldi	r20, 0xFA	; 250
    5ab0:	54 e4       	ldi	r21, 0x44	; 68
    5ab2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5ab6:	dc 01       	movw	r26, r24
    5ab8:	cb 01       	movw	r24, r22
    5aba:	8b a3       	std	Y+35, r24	; 0x23
    5abc:	9c a3       	std	Y+36, r25	; 0x24
    5abe:	ad a3       	std	Y+37, r26	; 0x25
    5ac0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5ac2:	6b a1       	ldd	r22, Y+35	; 0x23
    5ac4:	7c a1       	ldd	r23, Y+36	; 0x24
    5ac6:	8d a1       	ldd	r24, Y+37	; 0x25
    5ac8:	9e a1       	ldd	r25, Y+38	; 0x26
    5aca:	20 e0       	ldi	r18, 0x00	; 0
    5acc:	30 e0       	ldi	r19, 0x00	; 0
    5ace:	40 e8       	ldi	r20, 0x80	; 128
    5ad0:	5f e3       	ldi	r21, 0x3F	; 63
    5ad2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5ad6:	88 23       	and	r24, r24
    5ad8:	2c f4       	brge	.+10     	; 0x5ae4 <MyStory+0x2ca8>
		__ticks = 1;
    5ada:	81 e0       	ldi	r24, 0x01	; 1
    5adc:	90 e0       	ldi	r25, 0x00	; 0
    5ade:	9a a3       	std	Y+34, r25	; 0x22
    5ae0:	89 a3       	std	Y+33, r24	; 0x21
    5ae2:	3f c0       	rjmp	.+126    	; 0x5b62 <MyStory+0x2d26>
	else if (__tmp > 65535)
    5ae4:	6b a1       	ldd	r22, Y+35	; 0x23
    5ae6:	7c a1       	ldd	r23, Y+36	; 0x24
    5ae8:	8d a1       	ldd	r24, Y+37	; 0x25
    5aea:	9e a1       	ldd	r25, Y+38	; 0x26
    5aec:	20 e0       	ldi	r18, 0x00	; 0
    5aee:	3f ef       	ldi	r19, 0xFF	; 255
    5af0:	4f e7       	ldi	r20, 0x7F	; 127
    5af2:	57 e4       	ldi	r21, 0x47	; 71
    5af4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5af8:	18 16       	cp	r1, r24
    5afa:	4c f5       	brge	.+82     	; 0x5b4e <MyStory+0x2d12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5afc:	6f a1       	ldd	r22, Y+39	; 0x27
    5afe:	78 a5       	ldd	r23, Y+40	; 0x28
    5b00:	89 a5       	ldd	r24, Y+41	; 0x29
    5b02:	9a a5       	ldd	r25, Y+42	; 0x2a
    5b04:	20 e0       	ldi	r18, 0x00	; 0
    5b06:	30 e0       	ldi	r19, 0x00	; 0
    5b08:	40 e2       	ldi	r20, 0x20	; 32
    5b0a:	51 e4       	ldi	r21, 0x41	; 65
    5b0c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5b10:	dc 01       	movw	r26, r24
    5b12:	cb 01       	movw	r24, r22
    5b14:	bc 01       	movw	r22, r24
    5b16:	cd 01       	movw	r24, r26
    5b18:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5b1c:	dc 01       	movw	r26, r24
    5b1e:	cb 01       	movw	r24, r22
    5b20:	9a a3       	std	Y+34, r25	; 0x22
    5b22:	89 a3       	std	Y+33, r24	; 0x21
    5b24:	0f c0       	rjmp	.+30     	; 0x5b44 <MyStory+0x2d08>
    5b26:	88 ec       	ldi	r24, 0xC8	; 200
    5b28:	90 e0       	ldi	r25, 0x00	; 0
    5b2a:	98 a3       	std	Y+32, r25	; 0x20
    5b2c:	8f 8f       	std	Y+31, r24	; 0x1f
    5b2e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5b30:	98 a1       	ldd	r25, Y+32	; 0x20
    5b32:	01 97       	sbiw	r24, 0x01	; 1
    5b34:	f1 f7       	brne	.-4      	; 0x5b32 <MyStory+0x2cf6>
    5b36:	98 a3       	std	Y+32, r25	; 0x20
    5b38:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b3a:	89 a1       	ldd	r24, Y+33	; 0x21
    5b3c:	9a a1       	ldd	r25, Y+34	; 0x22
    5b3e:	01 97       	sbiw	r24, 0x01	; 1
    5b40:	9a a3       	std	Y+34, r25	; 0x22
    5b42:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5b44:	89 a1       	ldd	r24, Y+33	; 0x21
    5b46:	9a a1       	ldd	r25, Y+34	; 0x22
    5b48:	00 97       	sbiw	r24, 0x00	; 0
    5b4a:	69 f7       	brne	.-38     	; 0x5b26 <MyStory+0x2cea>
    5b4c:	14 c0       	rjmp	.+40     	; 0x5b76 <MyStory+0x2d3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5b4e:	6b a1       	ldd	r22, Y+35	; 0x23
    5b50:	7c a1       	ldd	r23, Y+36	; 0x24
    5b52:	8d a1       	ldd	r24, Y+37	; 0x25
    5b54:	9e a1       	ldd	r25, Y+38	; 0x26
    5b56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5b5a:	dc 01       	movw	r26, r24
    5b5c:	cb 01       	movw	r24, r22
    5b5e:	9a a3       	std	Y+34, r25	; 0x22
    5b60:	89 a3       	std	Y+33, r24	; 0x21
    5b62:	89 a1       	ldd	r24, Y+33	; 0x21
    5b64:	9a a1       	ldd	r25, Y+34	; 0x22
    5b66:	9e 8f       	std	Y+30, r25	; 0x1e
    5b68:	8d 8f       	std	Y+29, r24	; 0x1d
    5b6a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5b6c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5b6e:	01 97       	sbiw	r24, 0x01	; 1
    5b70:	f1 f7       	brne	.-4      	; 0x5b6e <MyStory+0x2d32>
    5b72:	9e 8f       	std	Y+30, r25	; 0x1e
    5b74:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(500);
	LCD_WriteString("at Group 3 ");
    5b76:	8b e7       	ldi	r24, 0x7B	; 123
    5b78:	92 e0       	ldi	r25, 0x02	; 2
    5b7a:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>
    5b7e:	80 e0       	ldi	r24, 0x00	; 0
    5b80:	90 e0       	ldi	r25, 0x00	; 0
    5b82:	aa e7       	ldi	r26, 0x7A	; 122
    5b84:	b4 e4       	ldi	r27, 0x44	; 68
    5b86:	89 8f       	std	Y+25, r24	; 0x19
    5b88:	9a 8f       	std	Y+26, r25	; 0x1a
    5b8a:	ab 8f       	std	Y+27, r26	; 0x1b
    5b8c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b8e:	69 8d       	ldd	r22, Y+25	; 0x19
    5b90:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5b92:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5b94:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5b96:	20 e0       	ldi	r18, 0x00	; 0
    5b98:	30 e0       	ldi	r19, 0x00	; 0
    5b9a:	4a ef       	ldi	r20, 0xFA	; 250
    5b9c:	54 e4       	ldi	r21, 0x44	; 68
    5b9e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5ba2:	dc 01       	movw	r26, r24
    5ba4:	cb 01       	movw	r24, r22
    5ba6:	8d 8b       	std	Y+21, r24	; 0x15
    5ba8:	9e 8b       	std	Y+22, r25	; 0x16
    5baa:	af 8b       	std	Y+23, r26	; 0x17
    5bac:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5bae:	6d 89       	ldd	r22, Y+21	; 0x15
    5bb0:	7e 89       	ldd	r23, Y+22	; 0x16
    5bb2:	8f 89       	ldd	r24, Y+23	; 0x17
    5bb4:	98 8d       	ldd	r25, Y+24	; 0x18
    5bb6:	20 e0       	ldi	r18, 0x00	; 0
    5bb8:	30 e0       	ldi	r19, 0x00	; 0
    5bba:	40 e8       	ldi	r20, 0x80	; 128
    5bbc:	5f e3       	ldi	r21, 0x3F	; 63
    5bbe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5bc2:	88 23       	and	r24, r24
    5bc4:	2c f4       	brge	.+10     	; 0x5bd0 <MyStory+0x2d94>
		__ticks = 1;
    5bc6:	81 e0       	ldi	r24, 0x01	; 1
    5bc8:	90 e0       	ldi	r25, 0x00	; 0
    5bca:	9c 8b       	std	Y+20, r25	; 0x14
    5bcc:	8b 8b       	std	Y+19, r24	; 0x13
    5bce:	3f c0       	rjmp	.+126    	; 0x5c4e <MyStory+0x2e12>
	else if (__tmp > 65535)
    5bd0:	6d 89       	ldd	r22, Y+21	; 0x15
    5bd2:	7e 89       	ldd	r23, Y+22	; 0x16
    5bd4:	8f 89       	ldd	r24, Y+23	; 0x17
    5bd6:	98 8d       	ldd	r25, Y+24	; 0x18
    5bd8:	20 e0       	ldi	r18, 0x00	; 0
    5bda:	3f ef       	ldi	r19, 0xFF	; 255
    5bdc:	4f e7       	ldi	r20, 0x7F	; 127
    5bde:	57 e4       	ldi	r21, 0x47	; 71
    5be0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5be4:	18 16       	cp	r1, r24
    5be6:	4c f5       	brge	.+82     	; 0x5c3a <MyStory+0x2dfe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5be8:	69 8d       	ldd	r22, Y+25	; 0x19
    5bea:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5bec:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5bee:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5bf0:	20 e0       	ldi	r18, 0x00	; 0
    5bf2:	30 e0       	ldi	r19, 0x00	; 0
    5bf4:	40 e2       	ldi	r20, 0x20	; 32
    5bf6:	51 e4       	ldi	r21, 0x41	; 65
    5bf8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5bfc:	dc 01       	movw	r26, r24
    5bfe:	cb 01       	movw	r24, r22
    5c00:	bc 01       	movw	r22, r24
    5c02:	cd 01       	movw	r24, r26
    5c04:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c08:	dc 01       	movw	r26, r24
    5c0a:	cb 01       	movw	r24, r22
    5c0c:	9c 8b       	std	Y+20, r25	; 0x14
    5c0e:	8b 8b       	std	Y+19, r24	; 0x13
    5c10:	0f c0       	rjmp	.+30     	; 0x5c30 <MyStory+0x2df4>
    5c12:	88 ec       	ldi	r24, 0xC8	; 200
    5c14:	90 e0       	ldi	r25, 0x00	; 0
    5c16:	9a 8b       	std	Y+18, r25	; 0x12
    5c18:	89 8b       	std	Y+17, r24	; 0x11
    5c1a:	89 89       	ldd	r24, Y+17	; 0x11
    5c1c:	9a 89       	ldd	r25, Y+18	; 0x12
    5c1e:	01 97       	sbiw	r24, 0x01	; 1
    5c20:	f1 f7       	brne	.-4      	; 0x5c1e <MyStory+0x2de2>
    5c22:	9a 8b       	std	Y+18, r25	; 0x12
    5c24:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5c26:	8b 89       	ldd	r24, Y+19	; 0x13
    5c28:	9c 89       	ldd	r25, Y+20	; 0x14
    5c2a:	01 97       	sbiw	r24, 0x01	; 1
    5c2c:	9c 8b       	std	Y+20, r25	; 0x14
    5c2e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5c30:	8b 89       	ldd	r24, Y+19	; 0x13
    5c32:	9c 89       	ldd	r25, Y+20	; 0x14
    5c34:	00 97       	sbiw	r24, 0x00	; 0
    5c36:	69 f7       	brne	.-38     	; 0x5c12 <MyStory+0x2dd6>
    5c38:	14 c0       	rjmp	.+40     	; 0x5c62 <MyStory+0x2e26>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c3a:	6d 89       	ldd	r22, Y+21	; 0x15
    5c3c:	7e 89       	ldd	r23, Y+22	; 0x16
    5c3e:	8f 89       	ldd	r24, Y+23	; 0x17
    5c40:	98 8d       	ldd	r25, Y+24	; 0x18
    5c42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c46:	dc 01       	movw	r26, r24
    5c48:	cb 01       	movw	r24, r22
    5c4a:	9c 8b       	std	Y+20, r25	; 0x14
    5c4c:	8b 8b       	std	Y+19, r24	; 0x13
    5c4e:	8b 89       	ldd	r24, Y+19	; 0x13
    5c50:	9c 89       	ldd	r25, Y+20	; 0x14
    5c52:	98 8b       	std	Y+16, r25	; 0x10
    5c54:	8f 87       	std	Y+15, r24	; 0x0f
    5c56:	8f 85       	ldd	r24, Y+15	; 0x0f
    5c58:	98 89       	ldd	r25, Y+16	; 0x10
    5c5a:	01 97       	sbiw	r24, 0x01	; 1
    5c5c:	f1 f7       	brne	.-4      	; 0x5c5a <MyStory+0x2e1e>
    5c5e:	98 8b       	std	Y+16, r25	; 0x10
    5c60:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1000);
	LCD_Clear();	//clear
    5c62:	0e 94 57 12 	call	0x24ae	; 0x24ae <LCD_Clear>

	LCD_GoTo(2,3);
    5c66:	82 e0       	ldi	r24, 0x02	; 2
    5c68:	63 e0       	ldi	r22, 0x03	; 3
    5c6a:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_GoTo>
    5c6e:	80 e0       	ldi	r24, 0x00	; 0
    5c70:	90 e0       	ldi	r25, 0x00	; 0
    5c72:	aa ef       	ldi	r26, 0xFA	; 250
    5c74:	b3 e4       	ldi	r27, 0x43	; 67
    5c76:	8b 87       	std	Y+11, r24	; 0x0b
    5c78:	9c 87       	std	Y+12, r25	; 0x0c
    5c7a:	ad 87       	std	Y+13, r26	; 0x0d
    5c7c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5c80:	7c 85       	ldd	r23, Y+12	; 0x0c
    5c82:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c84:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c86:	20 e0       	ldi	r18, 0x00	; 0
    5c88:	30 e0       	ldi	r19, 0x00	; 0
    5c8a:	4a ef       	ldi	r20, 0xFA	; 250
    5c8c:	54 e4       	ldi	r21, 0x44	; 68
    5c8e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5c92:	dc 01       	movw	r26, r24
    5c94:	cb 01       	movw	r24, r22
    5c96:	8f 83       	std	Y+7, r24	; 0x07
    5c98:	98 87       	std	Y+8, r25	; 0x08
    5c9a:	a9 87       	std	Y+9, r26	; 0x09
    5c9c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5c9e:	6f 81       	ldd	r22, Y+7	; 0x07
    5ca0:	78 85       	ldd	r23, Y+8	; 0x08
    5ca2:	89 85       	ldd	r24, Y+9	; 0x09
    5ca4:	9a 85       	ldd	r25, Y+10	; 0x0a
    5ca6:	20 e0       	ldi	r18, 0x00	; 0
    5ca8:	30 e0       	ldi	r19, 0x00	; 0
    5caa:	40 e8       	ldi	r20, 0x80	; 128
    5cac:	5f e3       	ldi	r21, 0x3F	; 63
    5cae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5cb2:	88 23       	and	r24, r24
    5cb4:	2c f4       	brge	.+10     	; 0x5cc0 <MyStory+0x2e84>
		__ticks = 1;
    5cb6:	81 e0       	ldi	r24, 0x01	; 1
    5cb8:	90 e0       	ldi	r25, 0x00	; 0
    5cba:	9e 83       	std	Y+6, r25	; 0x06
    5cbc:	8d 83       	std	Y+5, r24	; 0x05
    5cbe:	3f c0       	rjmp	.+126    	; 0x5d3e <MyStory+0x2f02>
	else if (__tmp > 65535)
    5cc0:	6f 81       	ldd	r22, Y+7	; 0x07
    5cc2:	78 85       	ldd	r23, Y+8	; 0x08
    5cc4:	89 85       	ldd	r24, Y+9	; 0x09
    5cc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5cc8:	20 e0       	ldi	r18, 0x00	; 0
    5cca:	3f ef       	ldi	r19, 0xFF	; 255
    5ccc:	4f e7       	ldi	r20, 0x7F	; 127
    5cce:	57 e4       	ldi	r21, 0x47	; 71
    5cd0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5cd4:	18 16       	cp	r1, r24
    5cd6:	4c f5       	brge	.+82     	; 0x5d2a <MyStory+0x2eee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cd8:	6b 85       	ldd	r22, Y+11	; 0x0b
    5cda:	7c 85       	ldd	r23, Y+12	; 0x0c
    5cdc:	8d 85       	ldd	r24, Y+13	; 0x0d
    5cde:	9e 85       	ldd	r25, Y+14	; 0x0e
    5ce0:	20 e0       	ldi	r18, 0x00	; 0
    5ce2:	30 e0       	ldi	r19, 0x00	; 0
    5ce4:	40 e2       	ldi	r20, 0x20	; 32
    5ce6:	51 e4       	ldi	r21, 0x41	; 65
    5ce8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5cec:	dc 01       	movw	r26, r24
    5cee:	cb 01       	movw	r24, r22
    5cf0:	bc 01       	movw	r22, r24
    5cf2:	cd 01       	movw	r24, r26
    5cf4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5cf8:	dc 01       	movw	r26, r24
    5cfa:	cb 01       	movw	r24, r22
    5cfc:	9e 83       	std	Y+6, r25	; 0x06
    5cfe:	8d 83       	std	Y+5, r24	; 0x05
    5d00:	0f c0       	rjmp	.+30     	; 0x5d20 <MyStory+0x2ee4>
    5d02:	88 ec       	ldi	r24, 0xC8	; 200
    5d04:	90 e0       	ldi	r25, 0x00	; 0
    5d06:	9c 83       	std	Y+4, r25	; 0x04
    5d08:	8b 83       	std	Y+3, r24	; 0x03
    5d0a:	8b 81       	ldd	r24, Y+3	; 0x03
    5d0c:	9c 81       	ldd	r25, Y+4	; 0x04
    5d0e:	01 97       	sbiw	r24, 0x01	; 1
    5d10:	f1 f7       	brne	.-4      	; 0x5d0e <MyStory+0x2ed2>
    5d12:	9c 83       	std	Y+4, r25	; 0x04
    5d14:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d16:	8d 81       	ldd	r24, Y+5	; 0x05
    5d18:	9e 81       	ldd	r25, Y+6	; 0x06
    5d1a:	01 97       	sbiw	r24, 0x01	; 1
    5d1c:	9e 83       	std	Y+6, r25	; 0x06
    5d1e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d20:	8d 81       	ldd	r24, Y+5	; 0x05
    5d22:	9e 81       	ldd	r25, Y+6	; 0x06
    5d24:	00 97       	sbiw	r24, 0x00	; 0
    5d26:	69 f7       	brne	.-38     	; 0x5d02 <MyStory+0x2ec6>
    5d28:	14 c0       	rjmp	.+40     	; 0x5d52 <MyStory+0x2f16>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d2a:	6f 81       	ldd	r22, Y+7	; 0x07
    5d2c:	78 85       	ldd	r23, Y+8	; 0x08
    5d2e:	89 85       	ldd	r24, Y+9	; 0x09
    5d30:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5d36:	dc 01       	movw	r26, r24
    5d38:	cb 01       	movw	r24, r22
    5d3a:	9e 83       	std	Y+6, r25	; 0x06
    5d3c:	8d 83       	std	Y+5, r24	; 0x05
    5d3e:	8d 81       	ldd	r24, Y+5	; 0x05
    5d40:	9e 81       	ldd	r25, Y+6	; 0x06
    5d42:	9a 83       	std	Y+2, r25	; 0x02
    5d44:	89 83       	std	Y+1, r24	; 0x01
    5d46:	89 81       	ldd	r24, Y+1	; 0x01
    5d48:	9a 81       	ldd	r25, Y+2	; 0x02
    5d4a:	01 97       	sbiw	r24, 0x01	; 1
    5d4c:	f1 f7       	brne	.-4      	; 0x5d4a <MyStory+0x2f0e>
    5d4e:	9a 83       	std	Y+2, r25	; 0x02
    5d50:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
	LCD_WriteString("The End..");
    5d52:	87 e8       	ldi	r24, 0x87	; 135
    5d54:	92 e0       	ldi	r25, 0x02	; 2
    5d56:	0e 94 99 12 	call	0x2532	; 0x2532 <LCD_WriteString>


	flagstory=2;
    5d5a:	82 e0       	ldi	r24, 0x02	; 2
    5d5c:	80 93 c2 02 	sts	0x02C2, r24
}
    5d60:	c4 52       	subi	r28, 0x24	; 36
    5d62:	de 4f       	sbci	r29, 0xFE	; 254
    5d64:	0f b6       	in	r0, 0x3f	; 63
    5d66:	f8 94       	cli
    5d68:	de bf       	out	0x3e, r29	; 62
    5d6a:	0f be       	out	0x3f, r0	; 63
    5d6c:	cd bf       	out	0x3d, r28	; 61
    5d6e:	cf 91       	pop	r28
    5d70:	df 91       	pop	r29
    5d72:	1f 91       	pop	r17
    5d74:	0f 91       	pop	r16
    5d76:	08 95       	ret

00005d78 <__udivmodhi4>:
    5d78:	aa 1b       	sub	r26, r26
    5d7a:	bb 1b       	sub	r27, r27
    5d7c:	51 e1       	ldi	r21, 0x11	; 17
    5d7e:	07 c0       	rjmp	.+14     	; 0x5d8e <__udivmodhi4_ep>

00005d80 <__udivmodhi4_loop>:
    5d80:	aa 1f       	adc	r26, r26
    5d82:	bb 1f       	adc	r27, r27
    5d84:	a6 17       	cp	r26, r22
    5d86:	b7 07       	cpc	r27, r23
    5d88:	10 f0       	brcs	.+4      	; 0x5d8e <__udivmodhi4_ep>
    5d8a:	a6 1b       	sub	r26, r22
    5d8c:	b7 0b       	sbc	r27, r23

00005d8e <__udivmodhi4_ep>:
    5d8e:	88 1f       	adc	r24, r24
    5d90:	99 1f       	adc	r25, r25
    5d92:	5a 95       	dec	r21
    5d94:	a9 f7       	brne	.-22     	; 0x5d80 <__udivmodhi4_loop>
    5d96:	80 95       	com	r24
    5d98:	90 95       	com	r25
    5d9a:	bc 01       	movw	r22, r24
    5d9c:	cd 01       	movw	r24, r26
    5d9e:	08 95       	ret

00005da0 <__divmodsi4>:
    5da0:	97 fb       	bst	r25, 7
    5da2:	09 2e       	mov	r0, r25
    5da4:	05 26       	eor	r0, r21
    5da6:	0e d0       	rcall	.+28     	; 0x5dc4 <__divmodsi4_neg1>
    5da8:	57 fd       	sbrc	r21, 7
    5daa:	04 d0       	rcall	.+8      	; 0x5db4 <__divmodsi4_neg2>
    5dac:	14 d0       	rcall	.+40     	; 0x5dd6 <__udivmodsi4>
    5dae:	0a d0       	rcall	.+20     	; 0x5dc4 <__divmodsi4_neg1>
    5db0:	00 1c       	adc	r0, r0
    5db2:	38 f4       	brcc	.+14     	; 0x5dc2 <__divmodsi4_exit>

00005db4 <__divmodsi4_neg2>:
    5db4:	50 95       	com	r21
    5db6:	40 95       	com	r20
    5db8:	30 95       	com	r19
    5dba:	21 95       	neg	r18
    5dbc:	3f 4f       	sbci	r19, 0xFF	; 255
    5dbe:	4f 4f       	sbci	r20, 0xFF	; 255
    5dc0:	5f 4f       	sbci	r21, 0xFF	; 255

00005dc2 <__divmodsi4_exit>:
    5dc2:	08 95       	ret

00005dc4 <__divmodsi4_neg1>:
    5dc4:	f6 f7       	brtc	.-4      	; 0x5dc2 <__divmodsi4_exit>
    5dc6:	90 95       	com	r25
    5dc8:	80 95       	com	r24
    5dca:	70 95       	com	r23
    5dcc:	61 95       	neg	r22
    5dce:	7f 4f       	sbci	r23, 0xFF	; 255
    5dd0:	8f 4f       	sbci	r24, 0xFF	; 255
    5dd2:	9f 4f       	sbci	r25, 0xFF	; 255
    5dd4:	08 95       	ret

00005dd6 <__udivmodsi4>:
    5dd6:	a1 e2       	ldi	r26, 0x21	; 33
    5dd8:	1a 2e       	mov	r1, r26
    5dda:	aa 1b       	sub	r26, r26
    5ddc:	bb 1b       	sub	r27, r27
    5dde:	fd 01       	movw	r30, r26
    5de0:	0d c0       	rjmp	.+26     	; 0x5dfc <__udivmodsi4_ep>

00005de2 <__udivmodsi4_loop>:
    5de2:	aa 1f       	adc	r26, r26
    5de4:	bb 1f       	adc	r27, r27
    5de6:	ee 1f       	adc	r30, r30
    5de8:	ff 1f       	adc	r31, r31
    5dea:	a2 17       	cp	r26, r18
    5dec:	b3 07       	cpc	r27, r19
    5dee:	e4 07       	cpc	r30, r20
    5df0:	f5 07       	cpc	r31, r21
    5df2:	20 f0       	brcs	.+8      	; 0x5dfc <__udivmodsi4_ep>
    5df4:	a2 1b       	sub	r26, r18
    5df6:	b3 0b       	sbc	r27, r19
    5df8:	e4 0b       	sbc	r30, r20
    5dfa:	f5 0b       	sbc	r31, r21

00005dfc <__udivmodsi4_ep>:
    5dfc:	66 1f       	adc	r22, r22
    5dfe:	77 1f       	adc	r23, r23
    5e00:	88 1f       	adc	r24, r24
    5e02:	99 1f       	adc	r25, r25
    5e04:	1a 94       	dec	r1
    5e06:	69 f7       	brne	.-38     	; 0x5de2 <__udivmodsi4_loop>
    5e08:	60 95       	com	r22
    5e0a:	70 95       	com	r23
    5e0c:	80 95       	com	r24
    5e0e:	90 95       	com	r25
    5e10:	9b 01       	movw	r18, r22
    5e12:	ac 01       	movw	r20, r24
    5e14:	bd 01       	movw	r22, r26
    5e16:	cf 01       	movw	r24, r30
    5e18:	08 95       	ret

00005e1a <__prologue_saves__>:
    5e1a:	2f 92       	push	r2
    5e1c:	3f 92       	push	r3
    5e1e:	4f 92       	push	r4
    5e20:	5f 92       	push	r5
    5e22:	6f 92       	push	r6
    5e24:	7f 92       	push	r7
    5e26:	8f 92       	push	r8
    5e28:	9f 92       	push	r9
    5e2a:	af 92       	push	r10
    5e2c:	bf 92       	push	r11
    5e2e:	cf 92       	push	r12
    5e30:	df 92       	push	r13
    5e32:	ef 92       	push	r14
    5e34:	ff 92       	push	r15
    5e36:	0f 93       	push	r16
    5e38:	1f 93       	push	r17
    5e3a:	cf 93       	push	r28
    5e3c:	df 93       	push	r29
    5e3e:	cd b7       	in	r28, 0x3d	; 61
    5e40:	de b7       	in	r29, 0x3e	; 62
    5e42:	ca 1b       	sub	r28, r26
    5e44:	db 0b       	sbc	r29, r27
    5e46:	0f b6       	in	r0, 0x3f	; 63
    5e48:	f8 94       	cli
    5e4a:	de bf       	out	0x3e, r29	; 62
    5e4c:	0f be       	out	0x3f, r0	; 63
    5e4e:	cd bf       	out	0x3d, r28	; 61
    5e50:	09 94       	ijmp

00005e52 <__epilogue_restores__>:
    5e52:	2a 88       	ldd	r2, Y+18	; 0x12
    5e54:	39 88       	ldd	r3, Y+17	; 0x11
    5e56:	48 88       	ldd	r4, Y+16	; 0x10
    5e58:	5f 84       	ldd	r5, Y+15	; 0x0f
    5e5a:	6e 84       	ldd	r6, Y+14	; 0x0e
    5e5c:	7d 84       	ldd	r7, Y+13	; 0x0d
    5e5e:	8c 84       	ldd	r8, Y+12	; 0x0c
    5e60:	9b 84       	ldd	r9, Y+11	; 0x0b
    5e62:	aa 84       	ldd	r10, Y+10	; 0x0a
    5e64:	b9 84       	ldd	r11, Y+9	; 0x09
    5e66:	c8 84       	ldd	r12, Y+8	; 0x08
    5e68:	df 80       	ldd	r13, Y+7	; 0x07
    5e6a:	ee 80       	ldd	r14, Y+6	; 0x06
    5e6c:	fd 80       	ldd	r15, Y+5	; 0x05
    5e6e:	0c 81       	ldd	r16, Y+4	; 0x04
    5e70:	1b 81       	ldd	r17, Y+3	; 0x03
    5e72:	aa 81       	ldd	r26, Y+2	; 0x02
    5e74:	b9 81       	ldd	r27, Y+1	; 0x01
    5e76:	ce 0f       	add	r28, r30
    5e78:	d1 1d       	adc	r29, r1
    5e7a:	0f b6       	in	r0, 0x3f	; 63
    5e7c:	f8 94       	cli
    5e7e:	de bf       	out	0x3e, r29	; 62
    5e80:	0f be       	out	0x3f, r0	; 63
    5e82:	cd bf       	out	0x3d, r28	; 61
    5e84:	ed 01       	movw	r28, r26
    5e86:	08 95       	ret

00005e88 <_exit>:
    5e88:	f8 94       	cli

00005e8a <__stop_program>:
    5e8a:	ff cf       	rjmp	.-2      	; 0x5e8a <__stop_program>
